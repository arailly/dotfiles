{"ld": {"word": "ld", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "${1:var} = lambda ${2:vars} : ${0:action}", "user_data": "{\"snippet_trigger\": \"ld\", \"snippet\": \"${1:var} = lambda ${2:vars} : ${0:action}\"}", "description": "${1:var} = lambda ${2:vars} : ${0:action}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 118, "menu_template": "${1:var} = lambda ${2:vars} : ${0:action}", "real_name": "ld", "action__pattern": "^snippet\\s\\+ld$", "menu_abbr": "${1:var} = lambda ${2:vars} : ${0:action}"}, "le": {"word": "le", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "LOGGER.error(${0:msg})", "user_data": "{\"snippet_trigger\": \"le\", \"snippet\": \"LOGGER.error(${0:msg})\"}", "description": "LOGGER.error(${0:msg})", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 247, "menu_template": "LOGGER.error(${0:msg})", "real_name": "le", "action__pattern": "^snippet\\s\\+le$", "menu_abbr": "LOGGER.error(${0:msg})"}, "def": {"word": "def", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "def ${1:fname}(${2:`indent('.') ? 'self' : ''`}):\n\t\t\"\"\"${3:docstring for $1}\"\"\"\n\t\t${0}", "user_data": "{\"snippet_trigger\": \"def\", \"snippet\": \"def ${1:fname}(${2:`indent('.') ? 'self' : ''`}):\\n\\t\\t\\\"\\\"\\\"${3:docstring for $1}\\\"\\\"\\\"\\n\\t\\t${0}\"}", "description": "def ${1:fname}(${2:`indent('.') ? 'self' : ''`}):\n\t\t\"\"\"${3:docstring for $1}\"\"\"\n\t\t${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 59, "menu_template": "def ${1:fname}(${2:`indent('.') ? 'self' : ''`}):  \"\"\"${3:docstring for $1}\"\"\"  ${0}", "real_name": "def", "action__pattern": "^snippet\\s\\+def$", "menu_abbr": "def ${1:fname}(${2:`indent('.') ? 'self' : ''`}):  \"\"\"${3:docstring for $1}\"\"\"  ${0}"}, "li": {"word": "li", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "LOGGER.info(${0:msg})", "user_data": "{\"snippet_trigger\": \"li\", \"snippet\": \"LOGGER.info(${0:msg})\"}", "description": "LOGGER.info(${0:msg})", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 256, "menu_template": "LOGGER.info(${0:msg})", "real_name": "li", "action__pattern": "^snippet\\s\\+li$", "menu_abbr": "LOGGER.info(${0:msg})"}, "addarg": {"word": "addarg", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "parser.add_argument(\"${0:short_arg}\", \"${1:long_arg}\", default=${2:None}, help=\"${3:Help text}\")", "user_data": "{\"snippet_trigger\": \"addarg\", \"snippet\": \"parser.add_argument(\\\"${0:short_arg}\\\", \\\"${1:long_arg}\\\", default=${2:None}, help=\\\"${3:Help text}\\\")\"}", "description": "parser.add_argument(\"${0:short_arg}\", \"${1:long_arg}\", default=${2:None}, help=\"${3:Help text}\")", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 233, "menu_template": "parser.add_argument(\"${0:short_arg}\", \"${1:long_arg}\", default=${2:None}, help=\"${3:Help text}\")", "real_name": "addarg", "action__pattern": "^snippet\\s\\+addarg$", "menu_abbr": "parser.add_argument(\"${0:short_arg}\", \"${1:long_arg}\", default=${2:None}, help=\"${3:Help text}\")"}, "testcase": {"word": "testcase", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "class ${1:ExampleCase}(unittest.TestCase):\n\n\t\tdef test_${2:description}(self):\n\t\t\t${0}", "user_data": "{\"snippet_trigger\": \"testcase\", \"snippet\": \"class ${1:ExampleCase}(unittest.TestCase):\\n\\n\\t\\tdef test_${2:description}(self):\\n\\t\\t\\t${0}\"}", "description": "class ${1:ExampleCase}(unittest.TestCase):\n\n\t\tdef test_${2:description}(self):\n\t\t\t${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 199, "menu_template": "class ${1:ExampleCase}(unittest.TestCase):   def test_${2:description}(self):  ${0}", "real_name": "testcase", "action__pattern": "^snippet\\s\\+testcase$", "menu_abbr": "class ${1:ExampleCase}(unittest.TestCase):   def test_${2:description}(self):  ${0}"}, "lcp": {"word": "lcp", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "[${1} for ${2} in ${3:${VISUAL}}]${0}", "user_data": "{\"snippet_trigger\": \"lcp\", \"snippet\": \"[${1} for ${2} in ${3:${VISUAL}}]${0}\"}", "description": "[${1} for ${2} in ${3:${VISUAL}}]${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 284, "menu_template": "list comprehension", "real_name": "lcp", "action__pattern": "^snippet\\s\\+lcp$", "menu_abbr": "list comprehension"}, "kwg": {"word": "kwg", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "self.${1:var_name} = kwargs.get('$1', ${2:None})${0}", "user_data": "{\"snippet_trigger\": \"kwg\", \"snippet\": \"self.${1:var_name} = kwargs.get('$1', ${2:None})${0}\"}", "description": "self.${1:var_name} = kwargs.get('$1', ${2:None})${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 272, "menu_template": "self.${1:var_name} = kwargs.get('$1', ${2:None})${0}", "real_name": "kwg", "action__pattern": "^snippet\\s\\+kwg$", "menu_abbr": "self.${1:var_name} = kwargs.get('$1', ${2:None})${0}"}, "addnarg": {"word": "addnarg", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "parser.add_argument(\"${0:arg}\", nargs=\"${1:*}\", default\"${2:None}, help=\"${3:Help text}\")", "user_data": "{\"snippet_trigger\": \"addnarg\", \"snippet\": \"parser.add_argument(\\\"${0:arg}\\\", nargs=\\\"${1:*}\\\", default\\\"${2:None}, help=\\\"${3:Help text}\\\")\"}", "description": "parser.add_argument(\"${0:arg}\", nargs=\"${1:*}\", default\"${2:None}, help=\"${3:Help text}\")", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 235, "menu_template": "parser.add_argument(\"${0:arg}\", nargs=\"${1:*}\", default\"${2:None}, help=\"${3:Help text}\")", "real_name": "addnarg", "action__pattern": "^snippet\\s\\+addnarg$", "menu_abbr": "parser.add_argument(\"${0:arg}\", nargs=\"${1:*}\", default\"${2:None}, help=\"${3:Help text}\")"}, "fut": {"word": "fut", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "from __future__ import ${0}", "user_data": "{\"snippet_trigger\": \"fut\", \"snippet\": \"from __future__ import ${0}\"}", "description": "from __future__ import ${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 209, "menu_template": "from __future__ import ${0}", "real_name": "fut", "action__pattern": "^snippet\\s\\+fut$", "menu_abbr": "from __future__ import ${0}"}, "addaarg": {"word": "addaarg", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "parser.add_argument(\"${0:arg}\", \"${1:long_arg}\", action=\"${2:store_true}\", default=${3:False}, help=\"${4:Help text}\")", "user_data": "{\"snippet_trigger\": \"addaarg\", \"snippet\": \"parser.add_argument(\\\"${0:arg}\\\", \\\"${1:long_arg}\\\", action=\\\"${2:store_true}\\\", default=${3:False}, help=\\\"${4:Help text}\\\")\"}", "description": "parser.add_argument(\"${0:arg}\", \"${1:long_arg}\", action=\"${2:store_true}\", default=${3:False}, help=\"${4:Help text}\")", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 237, "menu_template": "parser.add_argument(\"${0:arg}\", \"${1:long_arg}\", action=\"${2:store_true}\", default=${3:False}, help=\"${4:Help text}\")", "real_name": "addaarg", "action__pattern": "^snippet\\s\\+addaarg$", "menu_abbr": "parser.add_argument(\"${0:arg}\", \"${1:long_arg}\", action=\"${2:store_true}\", default=${3:False}, help=\"${4:Help text}\")"}, "contain": {"word": "contain", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "def __len__(self):\n\t\t${1:pass}\n\n\tdef __getitem__(self, key):\n\t\t${2:pass}\n\n\tdef __setitem__(self, key, value):\n\t\t${3:pass}\n\n\tdef __delitem__(self, key):\n\t\t${4:pass}\n\n\tdef __iter__(self):\n\t\t${5:pass}\n\n\tdef __reversed__(self):\n\t\t${6:pass}\n\n\tdef __contains__(self, item):\n\t\t${7:pass}\n\t${0}", "user_data": "{\"snippet_trigger\": \"contain\", \"snippet\": \"def __len__(self):\\n\\t\\t${1:pass}\\n\\n\\tdef __getitem__(self, key):\\n\\t\\t${2:pass}\\n\\n\\tdef __setitem__(self, key, value):\\n\\t\\t${3:pass}\\n\\n\\tdef __delitem__(self, key):\\n\\t\\t${4:pass}\\n\\n\\tdef __iter__(self):\\n\\t\\t${5:pass}\\n\\n\\tdef __reversed__(self):\\n\\t\\t${6:pass}\\n\\n\\tdef __contains__(self, item):\\n\\t\\t${7:pass}\\n\\t${0}\"}", "description": "def __len__(self):\n\t\t${1:pass}\n\n\tdef __getitem__(self, key):\n\t\t${2:pass}\n\n\tdef __setitem__(self, key, value):\n\t\t${3:pass}\n\n\tdef __delitem__(self, key):\n\t\t${4:pass}\n\n\tdef __iter__(self):\n\t\t${5:pass}\n\n\tdef __reversed__(self):\n\t\t${6:pass}\n\n\tdef __contains__(self, item):\n\t\t${7:pass}\n\t${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 293, "menu_template": "\"methods for emulating a container type\" b", "real_name": "contain", "action__pattern": "^snippet\\s\\+contain$", "menu_abbr": "\"methods for emulating a container type\" b"}, "desc": {"word": "desc", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "def __get__(self, instance, owner):\n\t\t${1:pass}\n\n\tdef __set__(self, instance, value):\n\t\t${2:pass}\n\n\tdef __delete__(self, instance):\n\t\t${3:pass}\n\t${0}", "user_data": "{\"snippet_trigger\": \"desc\", \"snippet\": \"def __get__(self, instance, owner):\\n\\t\\t${1:pass}\\n\\n\\tdef __set__(self, instance, value):\\n\\t\\t${2:pass}\\n\\n\\tdef __delete__(self, instance):\\n\\t\\t${3:pass}\\n\\t${0}\"}", "description": "def __get__(self, instance, owner):\n\t\t${1:pass}\n\n\tdef __set__(self, instance, value):\n\t\t${2:pass}\n\n\tdef __delete__(self, instance):\n\t\t${3:pass}\n\t${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 332, "menu_template": "\"methods implementing descriptors\" b", "real_name": "desc", "action__pattern": "^snippet\\s\\+desc$", "menu_abbr": "\"methods implementing descriptors\" b"}, "\"": {"word": "\"", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "\"\"\"${0:doc}\n\t\"\"\"", "user_data": "{\"snippet_trigger\": \"\\\"\", \"snippet\": \"\\\"\\\"\\\"${0:doc}\\n\\t\\\"\\\"\\\"\"}", "description": "\"\"\"${0:doc}\n\t\"\"\"", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 188, "menu_template": "\"\"\"${0:doc}  \"\"\"", "real_name": "\"", "action__pattern": "^snippet\\s\\+\"$", "menu_abbr": "\"\"\"${0:doc}  \"\"\""}, "clatin1": {"word": "clatin1", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "# -*- coding: latin-1 -*-${0}", "user_data": "{\"snippet_trigger\": \"clatin1\", \"snippet\": \"# -*- coding: latin-1 -*-${0}\"}", "description": "# -*- coding: latin-1 -*-${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 113, "menu_template": "# -*- coding: latin-1 -*-${0}", "real_name": "clatin1", "action__pattern": "^snippet\\s\\+clatin1$", "menu_abbr": "# -*- coding: latin-1 -*-${0}"}, "addp": {"word": "addp", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "parser = ${VISUAL:argparse.}ArgumentParser()${0}", "user_data": "{\"snippet_trigger\": \"addp\", \"snippet\": \"parser = ${VISUAL:argparse.}ArgumentParser()${0}\"}", "description": "parser = ${VISUAL:argparse.}ArgumentParser()${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 229, "menu_template": "parser = ${VISUAL:argparse.}ArgumentParser()${0}", "real_name": "addp", "action__pattern": "^snippet\\s\\+addp$", "menu_abbr": "parser = ${VISUAL:argparse.}ArgumentParser()${0}"}, "with": {"word": "with", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "with ${1:expr} as ${2:var}:\n\t\t${0:${VISUAL}}", "user_data": "{\"snippet_trigger\": \"with\", \"snippet\": \"with ${1:expr} as ${2:var}:\\n\\t\\t${0:${VISUAL}}\"}", "description": "with ${1:expr} as ${2:var}:\n\t\t${0:${VISUAL}}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 36, "menu_template": "with ${1:expr} as ${2:var}:  ${0:${VISUAL}}", "real_name": "with", "action__pattern": "^snippet\\s\\+with$", "menu_abbr": "with ${1:expr} as ${2:var}:  ${0:${VISUAL}}"}, "repr": {"word": "repr", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "def __repr__(self):\n\t\t${1:pass}\n\n\tdef __str__(self):\n\t\t${2:pass}\n\n\tdef __unicode__(self):\n\t\t${3:pass}\n\t${0}", "user_data": "{\"snippet_trigger\": \"repr\", \"snippet\": \"def __repr__(self):\\n\\t\\t${1:pass}\\n\\n\\tdef __str__(self):\\n\\t\\t${2:pass}\\n\\n\\tdef __unicode__(self):\\n\\t\\t${3:pass}\\n\\t${0}\"}", "description": "def __repr__(self):\n\t\t${1:pass}\n\n\tdef __str__(self):\n\t\t${2:pass}\n\n\tdef __unicode__(self):\n\t\t${3:pass}\n\t${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 364, "menu_template": "\"methods implementing string representation\"", "real_name": "repr", "action__pattern": "^snippet\\s\\+repr$", "menu_abbr": "\"methods implementing string representation\""}, "ipdb": {"word": "ipdb", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "__import__('ipdb').set_trace()${0}", "user_data": "{\"snippet_trigger\": \"ipdb\", \"snippet\": \"__import__('ipdb').set_trace()${0}\"}", "description": "__import__('ipdb').set_trace()${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 166, "menu_template": "__import__('ipdb').set_trace()${0}", "real_name": "ipdb", "action__pattern": "^snippet\\s\\+ipdb$", "menu_abbr": "__import__('ipdb').set_trace()${0}"}, ".": {"word": ".", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "self.${0}", "user_data": "{\"snippet_trigger\": \".\", \"snippet\": \"self.${0}\"}", "description": "self.${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 122, "menu_template": "self.${0}", "real_name": ".", "action__pattern": "^snippet\\s\\+.$", "menu_abbr": "self.${0}"}, "pudb": {"word": "pudb", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "__import__('pudb').set_trace()${0}", "user_data": "{\"snippet_trigger\": \"pudb\", \"snippet\": \"__import__('pudb').set_trace()${0}\"}", "description": "__import__('pudb').set_trace()${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 181, "menu_template": "__import__('pudb').set_trace()${0}", "real_name": "pudb", "action__pattern": "^snippet\\s\\+pudb$", "menu_abbr": "__import__('pudb').set_trace()${0}"}, "args": {"word": "args", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "*args${1:,}${0}", "user_data": "{\"snippet_trigger\": \"args\", \"snippet\": \"*args${1:,}${0}\"}", "description": "*args${1:,}${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 276, "menu_template": "*args${1:,}${0}", "real_name": "args", "action__pattern": "^snippet\\s\\+args$", "menu_abbr": "*args${1:,}${0}"}, "addsp": {"word": "addsp", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "${0:sub_parser} = parser.add_subparsers().add_parser(\"${1:name}\")", "user_data": "{\"snippet_trigger\": \"addsp\", \"snippet\": \"${0:sub_parser} = parser.add_subparsers().add_parser(\\\"${1:name}\\\")\"}", "description": "${0:sub_parser} = parser.add_subparsers().add_parser(\"${1:name}\")", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 231, "menu_template": "${0:sub_parser} = parser.add_subparsers().add_parser(\"${1:name}\")", "real_name": "addsp", "action__pattern": "^snippet\\s\\+addsp$", "menu_abbr": "${0:sub_parser} = parser.add_subparsers().add_parser(\"${1:name}\")"}, "epydoc": {"word": "epydoc", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "\"\"\"${1:Description}\n\n\t@param ${2:param}: ${3: Description}\n\t@type  $2: ${4: Type}\n\n\t@return: ${5: Description}\n\t@rtype : ${6: Type}\n\n\t@raise e: ${0: Description}\n\t\"\"\"", "user_data": "{\"snippet_trigger\": \"epydoc\", \"snippet\": \"\\\"\\\"\\\"${1:Description}\\n\\n\\t@param ${2:param}: ${3: Description}\\n\\t@type  $2: ${4: Type}\\n\\n\\t@return: ${5: Description}\\n\\t@rtype : ${6: Type}\\n\\n\\t@raise e: ${0: Description}\\n\\t\\\"\\\"\\\"\"}", "description": "\"\"\"${1:Description}\n\n\t@param ${2:param}: ${3: Description}\n\t@type  $2: ${4: Type}\n\n\t@return: ${5: Description}\n\t@rtype : ${6: Type}\n\n\t@raise e: ${0: Description}\n\t\"\"\"", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 258, "menu_template": "\"\"\"${1:Description}   @param ${2:param}: ${3: Description}  @type $2: ${4: Type}   @return: ${5: Description}  @rtype : ${6: Type}   @raise e: ${0: Description}  \"\"\"", "real_name": "epydoc", "action__pattern": "^snippet\\s\\+epydoc$", "menu_abbr": "\"\"\"${1:Description}   @param ${2:param}: ${3: Description}  @type $2: ${4: Type}   @return: ${5: Description}  @rtype : ${6: Type}   @raise e: ${0: Description}  \"\"\""}, "ei": {"word": "ei", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "elif ${1:condition}:\n\t\t${0:${VISUAL}}", "user_data": "{\"snippet_trigger\": \"ei\", \"snippet\": \"elif ${1:condition}:\\n\\t\\t${0:${VISUAL}}\"}", "description": "elif ${1:condition}:\n\t\t${0:${VISUAL}}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 103, "menu_template": "elif ${1:condition}:  ${0:${VISUAL}}", "real_name": "ei", "action__pattern": "^snippet\\s\\+ei$", "menu_abbr": "elif ${1:condition}:  ${0:${VISUAL}}"}, "dcp": {"word": "dcp", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "{${1}: ${2} for ${3} in ${4:${VISUAL}}}${0}", "user_data": "{\"snippet_trigger\": \"dcp\", \"snippet\": \"{${1}: ${2} for ${3} in ${4:${VISUAL}}}${0}\"}", "description": "{${1}: ${2} for ${3} in ${4:${VISUAL}}}${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 287, "menu_template": "dict comprehension", "real_name": "dcp", "action__pattern": "^snippet\\s\\+dcp$", "menu_abbr": "dict comprehension"}, "el": {"word": "el", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "else:\n\t\t${0:${VISUAL}}", "user_data": "{\"snippet_trigger\": \"el\", \"snippet\": \"else:\\n\\t\\t${0:${VISUAL}}\"}", "description": "else:\n\t\t${0:${VISUAL}}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 100, "menu_template": "else:  ${0:${VISUAL}}", "real_name": "el", "action__pattern": "^snippet\\s\\+el$", "menu_abbr": "else:  ${0:${VISUAL}}"}, "iem": {"word": "iem", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "__import__('IPython').embed()${0}", "user_data": "{\"snippet_trigger\": \"iem\", \"snippet\": \"__import__('IPython').embed()${0}\"}", "description": "__import__('IPython').embed()${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 169, "menu_template": "__import__('IPython').embed()${0}", "real_name": "iem", "action__pattern": "^snippet\\s\\+iem$", "menu_abbr": "__import__('IPython').embed()${0}"}, "lkwg": {"word": "lkwg", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "${1:var_name} = kwargs.get('$1', ${2:None})${0}", "user_data": "{\"snippet_trigger\": \"lkwg\", \"snippet\": \"${1:var_name} = kwargs.get('$1', ${2:None})${0}\"}", "description": "${1:var_name} = kwargs.get('$1', ${2:None})${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 274, "menu_template": "${1:var_name} = kwargs.get('$1', ${2:None})${0}", "real_name": "lkwg", "action__pattern": "^snippet\\s\\+lkwg$", "menu_abbr": "${1:var_name} = kwargs.get('$1', ${2:None})${0}"}, "attr": {"word": "attr", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "def __getattr__(self, name):\n\t\t${1:pass}\n\n\tdef __setattr__(self, name, value):\n\t\t${2:pass}\n\n\tdef __delattr__(self, name):\n\t\t${3:pass}\n\t${0}", "user_data": "{\"snippet_trigger\": \"attr\", \"snippet\": \"def __getattr__(self, name):\\n\\t\\t${1:pass}\\n\\n\\tdef __setattr__(self, name, value):\\n\\t\\t${2:pass}\\n\\n\\tdef __delattr__(self, name):\\n\\t\\t${3:pass}\\n\\t${0}\"}", "description": "def __getattr__(self, name):\n\t\t${1:pass}\n\n\tdef __setattr__(self, name, value):\n\t\t${2:pass}\n\n\tdef __delattr__(self, name):\n\t\t${3:pass}\n\t${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 322, "menu_template": "\"methods for customizing attribute access\" b", "real_name": "attr", "action__pattern": "^snippet\\s\\+attr$", "menu_abbr": "\"methods for customizing attribute access\" b"}, "wh": {"word": "wh", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "while ${1:condition}:\n\t\t${0:${VISUAL}}", "user_data": "{\"snippet_trigger\": \"wh\", \"snippet\": \"while ${1:condition}:\\n\\t\\t${0:${VISUAL}}\"}", "description": "while ${1:condition}:\n\t\t${0:${VISUAL}}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 27, "menu_template": "while ${1:condition}:  ${0:${VISUAL}}", "real_name": "wh", "action__pattern": "^snippet\\s\\+wh$", "menu_abbr": "while ${1:condition}:  ${0:${VISUAL}}"}, "cmp": {"word": "cmp", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "def __eq__(self, other):\n\t\t${1:pass}\n\n\tdef __ne__(self, other):\n\t\t${2:pass}\n\n\tdef __lt__(self, other):\n\t\t${3:pass}\n\n\tdef __le__(self, other):\n\t\t${4:pass}\n\n\tdef __gt__(self, other):\n\t\t${5:pass}\n\n\tdef __ge__(self, other):\n\t\t${6:pass}\n\n\tdef __cmp__(self, other):\n\t\t${7:pass}\n\t${0}", "user_data": "{\"snippet_trigger\": \"cmp\", \"snippet\": \"def __eq__(self, other):\\n\\t\\t${1:pass}\\n\\n\\tdef __ne__(self, other):\\n\\t\\t${2:pass}\\n\\n\\tdef __lt__(self, other):\\n\\t\\t${3:pass}\\n\\n\\tdef __le__(self, other):\\n\\t\\t${4:pass}\\n\\n\\tdef __gt__(self, other):\\n\\t\\t${5:pass}\\n\\n\\tdef __ge__(self, other):\\n\\t\\t${6:pass}\\n\\n\\tdef __cmp__(self, other):\\n\\t\\t${7:pass}\\n\\t${0}\"}", "description": "def __eq__(self, other):\n\t\t${1:pass}\n\n\tdef __ne__(self, other):\n\t\t${2:pass}\n\n\tdef __lt__(self, other):\n\t\t${3:pass}\n\n\tdef __le__(self, other):\n\t\t${4:pass}\n\n\tdef __gt__(self, other):\n\t\t${5:pass}\n\n\tdef __ge__(self, other):\n\t\t${6:pass}\n\n\tdef __cmp__(self, other):\n\t\t${7:pass}\n\t${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 342, "menu_template": "\"methods implementing rich comparison\"", "real_name": "cmp", "action__pattern": "^snippet\\s\\+cmp$", "menu_abbr": "\"methods implementing rich comparison\""}, "_": {"word": "_", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "__${1:init}__${0}", "user_data": "{\"snippet_trigger\": \"_\", \"snippet\": \"__${1:init}__${0}\"}", "description": "__${1:init}__${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 157, "menu_template": "__${1:init}__${0}", "real_name": "_", "action__pattern": "^snippet\\s\\+_$", "menu_abbr": "__${1:init}__${0}"}, "ptpython": {"word": "ptpython", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "__import__('ptpython.repl', fromlist=('repl')).embed(globals(), locals(), vi_mode=${1:False}, history_filename=${2:None})${0}", "user_data": "{\"snippet_trigger\": \"ptpython\", \"snippet\": \"__import__('ptpython.repl', fromlist=('repl')).embed(globals(), locals(), vi_mode=${1:False}, history_filename=${2:None})${0}\"}", "description": "__import__('ptpython.repl', fromlist=('repl')).embed(globals(), locals(), vi_mode=${1:False}, history_filename=${2:None})${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 178, "menu_template": "__import__('ptpython.repl', fromlist=('repl')).embed(globals(), locals(), vi_mode=${1:False}, history_filename=${2:None})${0}", "real_name": "ptpython", "action__pattern": "^snippet\\s\\+ptpython$", "menu_abbr": "__import__('ptpython.repl', fromlist=('repl')).embed(globals(), locals(), vi_mode=${1:False}, history_filename=${2:None})${0}"}, "pprint": {"word": "pprint", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "__import__('pprint').pprint(${1})${0}", "user_data": "{\"snippet_trigger\": \"pprint\", \"snippet\": \"__import__('pprint').pprint(${1})${0}\"}", "description": "__import__('pprint').pprint(${1})${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 186, "menu_template": "__import__('pprint').pprint(${1})${0}", "real_name": "pprint", "action__pattern": "^snippet\\s\\+pprint$", "menu_abbr": "__import__('pprint').pprint(${1})${0}"}, "getopt": {"word": "getopt", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "try:\n\t\t# Short option syntax: \"hv:\"\n\t\t# Long option syntax: \"help\" or \"verbose=\"\n\t\topts, args = getopt.getopt(sys.argv[1:], \"${1:short_options}\", [${2:long_options}])\n\n\texcept getopt.GetoptError, err:\n\t\t# Print debug info\n\t\tprint str(err)\n\t\t${3:error_action}\n\n\tfor option, argument in opts:\n\t\tif option in (\"-h\", \"--help\"):\n\t\t\t${0}\n\t\telif option in (\"-v\", \"--verbose\"):\n\t\t\tverbose = argument", "user_data": "{\"snippet_trigger\": \"getopt\", \"snippet\": \"try:\\n\\t\\t# Short option syntax: \\\"hv:\\\"\\n\\t\\t# Long option syntax: \\\"help\\\" or \\\"verbose=\\\"\\n\\t\\topts, args = getopt.getopt(sys.argv[1:], \\\"${1:short_options}\\\", [${2:long_options}])\\n\\n\\texcept getopt.GetoptError, err:\\n\\t\\t# Print debug info\\n\\t\\tprint str(err)\\n\\t\\t${3:error_action}\\n\\n\\tfor option, argument in opts:\\n\\t\\tif option in (\\\"-h\\\", \\\"--help\\\"):\\n\\t\\t\\t${0}\\n\\t\\telif option in (\\\"-v\\\", \\\"--verbose\\\"):\\n\\t\\t\\tverbose = argument\"}", "description": "try:\n\t\t# Short option syntax: \"hv:\"\n\t\t# Long option syntax: \"help\" or \"verbose=\"\n\t\topts, args = getopt.getopt(sys.argv[1:], \"${1:short_options}\", [${2:long_options}])\n\n\texcept getopt.GetoptError, err:\n\t\t# Print debug info\n\t\tprint str(err)\n\t\t${3:error_action}\n\n\tfor option, argument in opts:\n\t\tif option in (\"-h\", \"--help\"):\n\t\t\t${0}\n\t\telif option in (\"-v\", \"--verbose\"):\n\t\t\tverbose = argument", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 212, "menu_template": "try:  # Short option syntax: \"hv:\"  # Long option syntax: \"help\" or \"verbose=\"  opts, args = getopt.getopt(sys.argv[1:], \"${1:short_options}\", [${2:long_options}])   except getopt.GetoptError, err:  # Print debug info  print str(err)  ${3:error_action}   for option, argument in opts:  if option in (\"-h\", \"--help\"):  ${0}  elif option in (\"-v\", \"--verbose\"):  verbose = argument", "real_name": "getopt", "action__pattern": "^snippet\\s\\+getopt$", "menu_abbr": "try:  # Short option syntax: \"hv:\"  # Long option syntax: \"help\" or \"verbose=\"  opts, args = getopt.getopt(sys.argv[1:], \"${1:short_options}\", [${2:long_options}])   except getopt.GetoptError, err:  # Print debug info  print str(err)  ${3:error_action}   for option, argument in opts:  if option in (\"-h\", \"--help\"):  ${0}  elif option in (\"-v\", \"--verbose\"):  verbose = argument"}, "from": {"word": "from", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "from ${1:package} import ${0:module}", "user_data": "{\"snippet_trigger\": \"from\", \"snippet\": \"from ${1:package} import ${0:module}\"}", "description": "from ${1:package} import ${0:module}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 15, "menu_template": "from ${1:package} import ${0:module}", "real_name": "from", "action__pattern": "^snippet\\s\\+from$", "menu_abbr": "from ${1:package} import ${0:module}"}, "nosetrace": {"word": "nosetrace", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "__import__('nose').tools.set_trace()${0}", "user_data": "{\"snippet_trigger\": \"nosetrace\", \"snippet\": \"__import__('nose').tools.set_trace()${0}\"}", "description": "__import__('nose').tools.set_trace()${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 184, "menu_template": "__import__('nose').tools.set_trace()${0}", "real_name": "nosetrace", "action__pattern": "^snippet\\s\\+nosetrace$", "menu_abbr": "__import__('nose').tools.set_trace()${0}"}, "cla": {"word": "cla", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "class ${1:class_name}:\n\t\t\"\"\"${0:description}\"\"\"", "user_data": "{\"snippet_trigger\": \"cla\", \"snippet\": \"class ${1:class_name}:\\n\\t\\t\\\"\\\"\\\"${0:description}\\\"\\\"\\\"\"}", "description": "class ${1:class_name}:\n\t\t\"\"\"${0:description}\"\"\"", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 50, "menu_template": "class ${1:class_name}:  \"\"\"${0:description}\"\"\"", "real_name": "cla", "action__pattern": "^snippet\\s\\+cla$", "menu_abbr": "class ${1:class_name}:  \"\"\"${0:description}\"\"\""}, "imp": {"word": "imp", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "import ${0:module}", "user_data": "{\"snippet_trigger\": \"imp\", \"snippet\": \"import ${0:module}\"}", "description": "import ${0:module}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 10, "menu_template": "import ${0:module}", "real_name": "imp", "action__pattern": "^snippet\\s\\+imp$", "menu_abbr": "import ${0:module}"}, "lw": {"word": "lw", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "LOGGER.warning(${0:msg})", "user_data": "{\"snippet_trigger\": \"lw\", \"snippet\": \"LOGGER.warning(${0:msg})\"}", "description": "LOGGER.warning(${0:msg})", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 252, "menu_template": "LOGGER.warning(${0:msg})", "real_name": "lw", "action__pattern": "^snippet\\s\\+lw$", "menu_abbr": "LOGGER.warning(${0:msg})"}, "glog": {"word": "glog", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "import logging\n\tLOGGER = logging.getLogger(${0:__name__})", "user_data": "{\"snippet_trigger\": \"glog\", \"snippet\": \"import logging\\n\\tLOGGER = logging.getLogger(${0:__name__})\"}", "description": "import logging\n\tLOGGER = logging.getLogger(${0:__name__})", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 244, "menu_template": "import logging  LOGGER = logging.getLogger(${0:__name__})", "real_name": "glog", "action__pattern": "^snippet\\s\\+glog$", "menu_abbr": "import logging  LOGGER = logging.getLogger(${0:__name__})"}, "awith": {"word": "awith", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "async with ${1:expr} as ${2:var}:\n\t\t${0:${VISUAL}}", "user_data": "{\"snippet_trigger\": \"awith\", \"snippet\": \"async with ${1:expr} as ${2:var}:\\n\\t\\t${0:${VISUAL}}\"}", "description": "async with ${1:expr} as ${2:var}:\n\t\t${0:${VISUAL}}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 39, "menu_template": "async with ${1:expr} as ${2:var}:  ${0:${VISUAL}}", "real_name": "awith", "action__pattern": "^snippet\\s\\+awith$", "menu_abbr": "async with ${1:expr} as ${2:var}:  ${0:${VISUAL}}"}, "cl": {"word": "cl", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "class ${1:ClassName}(${2:object}):\n\t\t\"\"\"${3:docstring for $1}\"\"\"\n\t\tdef __init__(self, ${4:arg}):\n\t\t\t${5:super($1, self).__init__()}\n\t\t\tself.$4 = $4\n\t\t\t${0}", "user_data": "{\"snippet_trigger\": \"cl\", \"snippet\": \"class ${1:ClassName}(${2:object}):\\n\\t\\t\\\"\\\"\\\"${3:docstring for $1}\\\"\\\"\\\"\\n\\t\\tdef __init__(self, ${4:arg}):\\n\\t\\t\\t${5:super($1, self).__init__()}\\n\\t\\t\\tself.$4 = $4\\n\\t\\t\\t${0}\"}", "description": "class ${1:ClassName}(${2:object}):\n\t\t\"\"\"${3:docstring for $1}\"\"\"\n\t\tdef __init__(self, ${4:arg}):\n\t\t\t${5:super($1, self).__init__()}\n\t\t\tself.$4 = $4\n\t\t\t${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 43, "menu_template": "class ${1:ClassName}(${2:object}):  \"\"\"${3:docstring for $1}\"\"\"  def __init__(self, ${4:arg}):  ${5:super($1, self).__init__()}  self.$4 = $4  ${0}", "real_name": "cl", "action__pattern": "^snippet\\s\\+cl$", "menu_abbr": "class ${1:ClassName}(${2:object}):  \"\"\"${3:docstring for $1}\"\"\"  def __init__(self, ${4:arg}):  ${5:super($1, self).__init__()}  self.$4 = $4  ${0}"}, "adef": {"word": "adef", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "async def ${1:fname}(${2:`indent('.') ? 'self' : ''`}):\n\t\t\"\"\"${3:docstring for $1}\"\"\"\n\t\t${0}", "user_data": "{\"snippet_trigger\": \"adef\", \"snippet\": \"async def ${1:fname}(${2:`indent('.') ? 'self' : ''`}):\\n\\t\\t\\\"\\\"\\\"${3:docstring for $1}\\\"\\\"\\\"\\n\\t\\t${0}\"}", "description": "async def ${1:fname}(${2:`indent('.') ? 'self' : ''`}):\n\t\t\"\"\"${3:docstring for $1}\"\"\"\n\t\t${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 66, "menu_template": "async def ${1:fname}(${2:`indent('.') ? 'self' : ''`}):  \"\"\"${3:docstring for $1}\"\"\"  ${0}", "real_name": "adef", "action__pattern": "^snippet\\s\\+adef$", "menu_abbr": "async def ${1:fname}(${2:`indent('.') ? 'self' : ''`}):  \"\"\"${3:docstring for $1}\"\"\"  ${0}"}, "a=": {"word": "a=", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "self.assertEqual(${0}, ${1})", "user_data": "{\"snippet_trigger\": \"a=\", \"snippet\": \"self.assertEqual(${0}, ${1})\"}", "description": "self.assertEqual(${0}, ${1})", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 192, "menu_template": "self.assertEqual(${0}, ${1})", "real_name": "a=", "action__pattern": "^snippet\\s\\+a=$", "menu_abbr": "self.assertEqual(${0}, ${1})"}, "property": {"word": "property", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "def ${1:foo}():\n\t\tdoc = \"${2:The $1 property.}\"\n\t\tdef fget(self):\n\t\t\t${3:return self._$1}\n\t\tdef fset(self, value):\n\t\t\t${4:self._$1 = value}\n\t\tdef fdel(self):\n\t\t\t${0:del self._$1}\n\t\treturn locals()\n\t$1 = property(**$1())", "user_data": "{\"snippet_trigger\": \"property\", \"snippet\": \"def ${1:foo}():\\n\\t\\tdoc = \\\"${2:The $1 property.}\\\"\\n\\t\\tdef fget(self):\\n\\t\\t\\t${3:return self._$1}\\n\\t\\tdef fset(self, value):\\n\\t\\t\\t${4:self._$1 = value}\\n\\t\\tdef fdel(self):\\n\\t\\t\\t${0:del self._$1}\\n\\t\\treturn locals()\\n\\t$1 = property(**$1())\"}", "description": "def ${1:foo}():\n\t\tdoc = \"${2:The $1 property.}\"\n\t\tdef fget(self):\n\t\t\t${3:return self._$1}\n\t\tdef fset(self, value):\n\t\t\t${4:self._$1 = value}\n\t\tdef fdel(self):\n\t\t\t${0:del self._$1}\n\t\treturn locals()\n\t$1 = property(**$1())", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 85, "menu_template": "def ${1:foo}():  doc = \"${2:The $1 property.}\"  def fget(self):  ${3:return self._$1}  def fset(self, value):  ${4:self._$1 = value}  def fdel(self):  ${0:del self._$1}  return locals()  $1 = property(**$1())", "real_name": "property", "action__pattern": "^snippet\\s\\+property$", "menu_abbr": "def ${1:foo}():  doc = \"${2:The $1 property.}\"  def fget(self):  ${3:return self._$1}  def fset(self, value):  ${4:self._$1 = value}  def fdel(self):  ${0:del self._$1}  return locals()  $1 = property(**$1())"}, "docs": {"word": "docs", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "\"\"\"\n\tFile: ${1:`vim_snippets#Filename('$1.py', 'foo.py')`}\n\tAuthor: `g:snips_author`\n\tEmail: `g:snips_email`\n\tGithub: `g:snips_github`\n\tDescription: ${0}\n\t\"\"\"", "user_data": "{\"snippet_trigger\": \"docs\", \"snippet\": \"\\\"\\\"\\\"\\n\\tFile: ${1:`vim_snippets#Filename('$1.py', 'foo.py')`}\\n\\tAuthor: `g:snips_author`\\n\\tEmail: `g:snips_email`\\n\\tGithub: `g:snips_github`\\n\\tDescription: ${0}\\n\\t\\\"\\\"\\\"\"}", "description": "\"\"\"\n\tFile: ${1:`vim_snippets#Filename('$1.py', 'foo.py')`}\n\tAuthor: `g:snips_author`\n\tEmail: `g:snips_email`\n\tGithub: `g:snips_github`\n\tDescription: ${0}\n\t\"\"\"", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 18, "menu_template": "\"\"\"  File: ${1:`vim_snippets#Filename('$1.py', 'foo.py')`}  Author: `g:snips_author`  Email: `g:snips_email`  Github: `g:snips_github`  Description: ${0}  \"\"\"", "real_name": "docs", "action__pattern": "^snippet\\s\\+docs$", "menu_abbr": "\"\"\"  File: ${1:`vim_snippets#Filename('$1.py', 'foo.py')`}  Author: `g:snips_author`  Email: `g:snips_email`  Github: `g:snips_github`  Description: ${0}  \"\"\""}, "ifmain": {"word": "ifmain", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "if __name__ == '__main__':\n\t\t${0:main()}", "user_data": "{\"snippet_trigger\": \"ifmain\", \"snippet\": \"if __name__ == '__main__':\\n\\t\\t${0:main()}\"}", "description": "if __name__ == '__main__':\n\t\t${0:main()}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 153, "menu_template": "if __name__ == '__main__':  ${0:main()}", "real_name": "ifmain", "action__pattern": "^snippet\\s\\+ifmain$", "menu_abbr": "if __name__ == '__main__':  ${0:main()}"}, "test": {"word": "test", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "def test_${1:description}(${2:`indent('.') ? 'self' : ''`}):\n\t\t${0}", "user_data": "{\"snippet_trigger\": \"test\", \"snippet\": \"def test_${1:description}(${2:`indent('.') ? 'self' : ''`}):\\n\\t\\t${0}\"}", "description": "def test_${1:description}(${2:`indent('.') ? 'self' : ''`}):\n\t\t${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 195, "menu_template": "def test_${1:description}(${2:`indent('.') ? 'self' : ''`}):  ${0}", "real_name": "test", "action__pattern": "^snippet\\s\\+test$", "menu_abbr": "def test_${1:description}(${2:`indent('.') ? 'self' : ''`}):  ${0}"}, "deff": {"word": "deff", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "def ${1:fname}(${2:`indent('.') ? 'self' : ''`}):\n\t\t${0}", "user_data": "{\"snippet_trigger\": \"deff\", \"snippet\": \"def ${1:fname}(${2:`indent('.') ? 'self' : ''`}):\\n\\t\\t${0}\"}", "description": "def ${1:fname}(${2:`indent('.') ? 'self' : ''`}):\n\t\t${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 63, "menu_template": "def ${1:fname}(${2:`indent('.') ? 'self' : ''`}):  ${0}", "real_name": "deff", "action__pattern": "^snippet\\s\\+deff$", "menu_abbr": "def ${1:fname}(${2:`indent('.') ? 'self' : ''`}):  ${0}"}, "defi": {"word": "defi", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "def __init__(self, ${1:args}):\n\t\t${0}", "user_data": "{\"snippet_trigger\": \"defi\", \"snippet\": \"def __init__(self, ${1:args}):\\n\\t\\t${0}\"}", "description": "def __init__(self, ${1:args}):\n\t\t${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 74, "menu_template": "def __init__(self, ${1:args}):  ${0}", "real_name": "defi", "action__pattern": "^snippet\\s\\+defi$", "menu_abbr": "def __init__(self, ${1:args}):  ${0}"}, "defm": {"word": "defm", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "def ${1:mname}(self, ${2:arg}):\n\t\t${0}", "user_data": "{\"snippet_trigger\": \"defm\", \"snippet\": \"def ${1:mname}(self, ${2:arg}):\\n\\t\\t${0}\"}", "description": "def ${1:mname}(self, ${2:arg}):\n\t\t${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 77, "menu_template": "def ${1:mname}(self, ${2:arg}):  ${0}", "real_name": "defm", "action__pattern": "^snippet\\s\\+defm$", "menu_abbr": "def ${1:mname}(self, ${2:arg}):  ${0}"}, "lg": {"word": "lg", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "LOGGER.debug(${0:msg})", "user_data": "{\"snippet_trigger\": \"lg\", \"snippet\": \"LOGGER.debug(${0:msg})\"}", "description": "LOGGER.debug(${0:msg})", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 250, "menu_template": "LOGGER.debug(${0:msg})", "real_name": "lg", "action__pattern": "^snippet\\s\\+lg$", "menu_abbr": "LOGGER.debug(${0:msg})"}, "pdb": {"word": "pdb", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "__import__('pdb').set_trace()${0}", "user_data": "{\"snippet_trigger\": \"pdb\", \"snippet\": \"__import__('pdb').set_trace()${0}\"}", "description": "__import__('pdb').set_trace()${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 160, "menu_template": "__import__('pdb').set_trace()${0}", "real_name": "pdb", "action__pattern": "^snippet\\s\\+pdb$", "menu_abbr": "__import__('pdb').set_trace()${0}"}, "context": {"word": "context", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "def __enter__(self):\n\t\t${1:pass}\n\n\tdef __exit__(self, exc_type, exc_value, traceback):\n\t\t${2:pass}\n\t${0}", "user_data": "{\"snippet_trigger\": \"context\", \"snippet\": \"def __enter__(self):\\n\\t\\t${1:pass}\\n\\n\\tdef __exit__(self, exc_type, exc_value, traceback):\\n\\t\\t${2:pass}\\n\\t${0}\"}", "description": "def __enter__(self):\n\t\t${1:pass}\n\n\tdef __exit__(self, exc_type, exc_value, traceback):\n\t\t${2:pass}\n\t${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 315, "menu_template": "\"context manager methods\" b", "real_name": "context", "action__pattern": "^snippet\\s\\+context$", "menu_abbr": "\"context manager methods\" b"}, "rpdb": {"word": "rpdb", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "__import__('rpdb').set_trace()${0}", "user_data": "{\"snippet_trigger\": \"rpdb\", \"snippet\": \"__import__('rpdb').set_trace()${0}\"}", "description": "__import__('rpdb').set_trace()${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 172, "menu_template": "__import__('rpdb').set_trace()${0}", "real_name": "rpdb", "action__pattern": "^snippet\\s\\+rpdb$", "menu_abbr": "__import__('rpdb').set_trace()${0}"}, "for": {"word": "for", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "for ${1:item} in ${2:items}:\n\t\t${0}", "user_data": "{\"snippet_trigger\": \"for\", \"snippet\": \"for ${1:item} in ${2:items}:\\n\\t\\t${0}\"}", "description": "for ${1:item} in ${2:items}:\n\t\t${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 107, "menu_template": "for ${1:item} in ${2:items}:  ${0}", "real_name": "for", "action__pattern": "^snippet\\s\\+for$", "menu_abbr": "for ${1:item} in ${2:items}:  ${0}"}, "wdb": {"word": "wdb", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "__import__('wdb').set_trace()${0}", "user_data": "{\"snippet_trigger\": \"wdb\", \"snippet\": \"__import__('wdb').set_trace()${0}\"}", "description": "__import__('wdb').set_trace()${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 175, "menu_template": "__import__('wdb').set_trace()${0}", "real_name": "wdb", "action__pattern": "^snippet\\s\\+wdb$", "menu_abbr": "__import__('wdb').set_trace()${0}"}, "cascii": {"word": "cascii", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "# -*- coding: ascii -*-${0}", "user_data": "{\"snippet_trigger\": \"cascii\", \"snippet\": \"# -*- coding: ascii -*-${0}\"}", "description": "# -*- coding: ascii -*-${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 115, "menu_template": "# -*- coding: ascii -*-${0}", "real_name": "cascii", "action__pattern": "^snippet\\s\\+cascii$", "menu_abbr": "# -*- coding: ascii -*-${0}"}, "cutf8": {"word": "cutf8", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "# -*- coding: utf-8 -*-${0}", "user_data": "{\"snippet_trigger\": \"cutf8\", \"snippet\": \"# -*- coding: utf-8 -*-${0}\"}", "description": "# -*- coding: utf-8 -*-${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 111, "menu_template": "# -*- coding: utf-8 -*-${0}", "real_name": "cutf8", "action__pattern": "^snippet\\s\\+cutf8$", "menu_abbr": "# -*- coding: utf-8 -*-${0}"}, "dowh": {"word": "dowh", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "while True:\n\t\t${1}\n\t\tif ${0:condition}:\n\t\t\tbreak", "user_data": "{\"snippet_trigger\": \"dowh\", \"snippet\": \"while True:\\n\\t\\t${1}\\n\\t\\tif ${0:condition}:\\n\\t\\t\\tbreak\"}", "description": "while True:\n\t\t${1}\n\t\tif ${0:condition}:\n\t\t\tbreak", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 31, "menu_template": "while True:  ${1}  if ${0:condition}:  break", "real_name": "dowh", "action__pattern": "^snippet\\s\\+dowh$", "menu_abbr": "while True:  ${1}  if ${0:condition}:  break"}, "try": {"word": "try", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "try:\n\t\t${1:${VISUAL}}\n\texcept ${2:Exception} as ${3:e}:\n\t\t${0:raise $3}", "user_data": "{\"snippet_trigger\": \"try\", \"snippet\": \"try:\\n\\t\\t${1:${VISUAL}}\\n\\texcept ${2:Exception} as ${3:e}:\\n\\t\\t${0:raise $3}\"}", "description": "try:\n\t\t${1:${VISUAL}}\n\texcept ${2:Exception} as ${3:e}:\n\t\t${0:raise $3}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 124, "menu_template": "Try/Except", "real_name": "try", "action__pattern": "^snippet\\s\\+try$", "menu_abbr": "Try/Except"}, "if": {"word": "if", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "if ${1:condition}:\n\t\t${0:${VISUAL}}", "user_data": "{\"snippet_trigger\": \"if\", \"snippet\": \"if ${1:condition}:\\n\\t\\t${0:${VISUAL}}\"}", "description": "if ${1:condition}:\n\t\t${0:${VISUAL}}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 97, "menu_template": "if ${1:condition}:  ${0:${VISUAL}}", "real_name": "if", "action__pattern": "^snippet\\s\\+if$", "menu_abbr": "if ${1:condition}:  ${0:${VISUAL}}"}, "kwargs": {"word": "kwargs", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "**kwargs${1:,}${0}", "user_data": "{\"snippet_trigger\": \"kwargs\", \"snippet\": \"**kwargs${1:,}${0}\"}", "description": "**kwargs${1:,}${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 278, "menu_template": "**kwargs${1:,}${0}", "real_name": "kwargs", "action__pattern": "^snippet\\s\\+kwargs$", "menu_abbr": "**kwargs${1:,}${0}"}, "tgwt": {"word": "tgwt", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "# given: ${1}\n\t# when: ${2}\n\t# then: ${3}", "user_data": "{\"snippet_trigger\": \"tgwt\", \"snippet\": \"# given: ${1}\\n\\t# when: ${2}\\n\\t# then: ${3}\"}", "description": "# given: ${1}\n\t# when: ${2}\n\t# then: ${3}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 205, "menu_template": "# given: ${1}  # when: ${2}  # then: ${3}", "real_name": "tgwt", "action__pattern": "^snippet\\s\\+tgwt$", "menu_abbr": "# given: ${1}  # when: ${2}  # then: ${3}"}, "pargs": {"word": "pargs", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "\"${VISUAL:return }\"parser.parse_args()\n\t${0}", "user_data": "{\"snippet_trigger\": \"pargs\", \"snippet\": \"\\\"${VISUAL:return }\\\"parser.parse_args()\\n\\t${0}\"}", "description": "\"${VISUAL:return }\"parser.parse_args()\n\t${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 239, "menu_template": "\"${VISUAL:return }\"parser.parse_args()  ${0}", "real_name": "pargs", "action__pattern": "^snippet\\s\\+pargs$", "menu_abbr": "\"${VISUAL:return }\"parser.parse_args()  ${0}"}, "bpdb": {"word": "bpdb", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "__import__('bpdb').set_trace()${0}", "user_data": "{\"snippet_trigger\": \"bpdb\", \"snippet\": \"__import__('bpdb').set_trace()${0}\"}", "description": "__import__('bpdb').set_trace()${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 163, "menu_template": "__import__('bpdb').set_trace()${0}", "real_name": "bpdb", "action__pattern": "^snippet\\s\\+bpdb$", "menu_abbr": "__import__('bpdb').set_trace()${0}"}, "#!2": {"word": "#!2", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "#!/usr/bin/env python2\n\t# -*- coding: utf-8 -*-${0}", "user_data": "{\"snippet_trigger\": \"#!2\", \"snippet\": \"#!/usr/bin/env python2\\n\\t# -*- coding: utf-8 -*-${0}\"}", "description": "#!/usr/bin/env python2\n\t# -*- coding: utf-8 -*-${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 4, "menu_template": "#!/usr/bin/env python2  # -*- coding: utf-8 -*-${0}", "real_name": "#!2", "action__pattern": "^snippet\\s\\+#!2$", "menu_abbr": "#!/usr/bin/env python2  # -*- coding: utf-8 -*-${0}"}, "#!3": {"word": "#!3", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "#!/usr/bin/env python3\n\t# -*- coding: utf-8 -*-${0}", "user_data": "{\"snippet_trigger\": \"#!3\", \"snippet\": \"#!/usr/bin/env python3\\n\\t# -*- coding: utf-8 -*-${0}\"}", "description": "#!/usr/bin/env python3\n\t# -*- coding: utf-8 -*-${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 7, "menu_template": "#!/usr/bin/env python3  # -*- coding: utf-8 -*-${0}", "real_name": "#!3", "action__pattern": "^snippet\\s\\+#!3$", "menu_abbr": "#!/usr/bin/env python3  # -*- coding: utf-8 -*-${0}"}, "adeff": {"word": "adeff", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "async def ${1:fname}(${2:`indent('.') ? 'self' : ''`}):\n\t\t${0}", "user_data": "{\"snippet_trigger\": \"adeff\", \"snippet\": \"async def ${1:fname}(${2:`indent('.') ? 'self' : ''`}):\\n\\t\\t${0}\"}", "description": "async def ${1:fname}(${2:`indent('.') ? 'self' : ''`}):\n\t\t${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 70, "menu_template": "async def ${1:fname}(${2:`indent('.') ? 'self' : ''`}):  ${0}", "real_name": "adeff", "action__pattern": "^snippet\\s\\+adeff$", "menu_abbr": "async def ${1:fname}(${2:`indent('.') ? 'self' : ''`}):  ${0}"}, "akw": {"word": "akw", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "*args, **kwargs${1:,}${0}", "user_data": "{\"snippet_trigger\": \"akw\", \"snippet\": \"*args, **kwargs${1:,}${0}\"}", "description": "*args, **kwargs${1:,}${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 280, "menu_template": "*args, **kwargs${1:,}${0}", "real_name": "akw", "action__pattern": "^snippet\\s\\+akw$", "menu_abbr": "*args, **kwargs${1:,}${0}"}, "trye": {"word": "trye", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "try:\n\t\t${1:${VISUAL}}\n\texcept ${2:Exception} as ${3:e}:\n\t\t${4:raise $3}\n\telse:\n\t\t${0}", "user_data": "{\"snippet_trigger\": \"trye\", \"snippet\": \"try:\\n\\t\\t${1:${VISUAL}}\\n\\texcept ${2:Exception} as ${3:e}:\\n\\t\\t${4:raise $3}\\n\\telse:\\n\\t\\t${0}\"}", "description": "try:\n\t\t${1:${VISUAL}}\n\texcept ${2:Exception} as ${3:e}:\n\t\t${4:raise $3}\n\telse:\n\t\t${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 129, "menu_template": "Try/Except/Else", "real_name": "trye", "action__pattern": "^snippet\\s\\+trye$", "menu_abbr": "Try/Except/Else"}, "tryf": {"word": "tryf", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "try:\n\t\t${1:${VISUAL}}\n\texcept ${2:Exception} as ${3:e}:\n\t\t${4:raise $3}\n\tfinally:\n\t\t${0}", "user_data": "{\"snippet_trigger\": \"tryf\", \"snippet\": \"try:\\n\\t\\t${1:${VISUAL}}\\n\\texcept ${2:Exception} as ${3:e}:\\n\\t\\t${4:raise $3}\\n\\tfinally:\\n\\t\\t${0}\"}", "description": "try:\n\t\t${1:${VISUAL}}\n\texcept ${2:Exception} as ${3:e}:\n\t\t${4:raise $3}\n\tfinally:\n\t\t${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 136, "menu_template": "Try/Except/Finally", "real_name": "tryf", "action__pattern": "^snippet\\s\\+tryf$", "menu_abbr": "Try/Except/Finally"}, "adefm": {"word": "adefm", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "async def ${1:mname}(self, ${2:arg}):\n\t\t${0}", "user_data": "{\"snippet_trigger\": \"adefm\", \"snippet\": \"async def ${1:mname}(self, ${2:arg}):\\n\\t\\t${0}\"}", "description": "async def ${1:mname}(self, ${2:arg}):\n\t\t${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 80, "menu_template": "async def ${1:mname}(self, ${2:arg}):  ${0}", "real_name": "adefm", "action__pattern": "^snippet\\s\\+adefm$", "menu_abbr": "async def ${1:mname}(self, ${2:arg}):  ${0}"}, "tryef": {"word": "tryef", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "try:\n\t\t${1:${VISUAL}}\n\texcept ${2:Exception} as ${3:e}:\n\t\t${4:raise $3}\n\telse:\n\t\t${5}\n\tfinally:\n\t\t${0}", "user_data": "{\"snippet_trigger\": \"tryef\", \"snippet\": \"try:\\n\\t\\t${1:${VISUAL}}\\n\\texcept ${2:Exception} as ${3:e}:\\n\\t\\t${4:raise $3}\\n\\telse:\\n\\t\\t${5}\\n\\tfinally:\\n\\t\\t${0}\"}", "description": "try:\n\t\t${1:${VISUAL}}\n\texcept ${2:Exception} as ${3:e}:\n\t\t${4:raise $3}\n\telse:\n\t\t${5}\n\tfinally:\n\t\t${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 143, "menu_template": "Try/Except/Else/Finally", "real_name": "tryef", "action__pattern": "^snippet\\s\\+tryef$", "menu_abbr": "Try/Except/Else/Finally"}, "ret": {"word": "ret", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "return ${0}", "user_data": "{\"snippet_trigger\": \"ret\", \"snippet\": \"return ${0}\"}", "description": "return ${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 120, "menu_template": "return ${0}", "real_name": "ret", "action__pattern": "^snippet\\s\\+ret$", "menu_abbr": "return ${0}"}, "#!": {"word": "#!", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "#!/usr/bin/env python\n\t# -*- coding: utf-8 -*-${0}", "user_data": "{\"snippet_trigger\": \"#!\", \"snippet\": \"#!/usr/bin/env python\\n\\t# -*- coding: utf-8 -*-${0}\"}", "description": "#!/usr/bin/env python\n\t# -*- coding: utf-8 -*-${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 1, "menu_template": "#!/usr/bin/env python  # -*- coding: utf-8 -*-${0}", "real_name": "#!", "action__pattern": "^snippet\\s\\+#!$", "menu_abbr": "#!/usr/bin/env python  # -*- coding: utf-8 -*-${0}"}, "clai": {"word": "clai", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "class ${1:class_name}:\n\t\t\"\"\"${2:description}\"\"\"\n\t\tdef __init__(self, ${3:args}):\n\t\t\t${0}", "user_data": "{\"snippet_trigger\": \"clai\", \"snippet\": \"class ${1:class_name}:\\n\\t\\t\\\"\\\"\\\"${2:description}\\\"\\\"\\\"\\n\\t\\tdef __init__(self, ${3:args}):\\n\\t\\t\\t${0}\"}", "description": "class ${1:class_name}:\n\t\t\"\"\"${2:description}\"\"\"\n\t\tdef __init__(self, ${3:args}):\n\t\t\t${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 53, "menu_template": "class ${1:class_name}:  \"\"\"${2:description}\"\"\"  def __init__(self, ${3:args}):  ${0}", "real_name": "clai", "action__pattern": "^snippet\\s\\+clai$", "menu_abbr": "class ${1:class_name}:  \"\"\"${2:description}\"\"\"  def __init__(self, ${3:args}):  ${0}"}, "numeric": {"word": "numeric", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "def __add__(self, other):\n\t\t${1:pass}\n\n\tdef __sub__(self, other):\n\t\t${2:pass}\n\n\tdef __mul__(self, other):\n\t\t${3:pass}\n\n\tdef __div__(self, other):\n\t\t${4:pass}\n\n\tdef __truediv__(self, other):\n\t\t${5:pass}\n\n\tdef __floordiv__(self, other):\n\t\t${6:pass}\n\n\tdef __mod__(self, other):\n\t\t${7:pass}\n\n\tdef __divmod__(self, other):\n\t\t${8:pass}\n\n\tdef __pow__(self, other):\n\t\t${9:pass}\n\n\tdef __lshift__(self, other):\n\t\t${10:pass}\n\n\tdef __rshift__(self, other):\n\t\t${11:pass}\n\n\tdef __and__(self, other):\n\t\t${12:pass}\n\n\tdef __xor__(self, other):\n\t\t${13:pass}\n\n\tdef __or__(self, other):\n\t\t${14:pass}\n\n\tdef __neg__(self):\n\t\t${15:pass}\n\n\tdef __pos__(self):\n\t\t${16:pass}\n\n\tdef __abs__(self):\n\t\t${17:pass}\n\n\tdef __invert__(self):\n\t\t${18:pass}\n\n\tdef __complex__(self):\n\t\t${19:pass}\n\n\tdef __int__(self):\n\t\t${20:pass}\n\n\tdef __long__(self):\n\t\t${21:pass}\n\n\tdef __float__(self):\n\t\t${22:pass}\n\n\tdef __oct__(self):\n\t\t${22:pass}\n\n\tdef __hex__(self):\n\t\t${23:pass}\n\n\tdef __index__(self):\n\t\t${24:pass}\n\n\tdef __coerce__(self, other):\n\t\t${25:pass}\n\t${0}", "user_data": "{\"snippet_trigger\": \"numeric\", \"snippet\": \"def __add__(self, other):\\n\\t\\t${1:pass}\\n\\n\\tdef __sub__(self, other):\\n\\t\\t${2:pass}\\n\\n\\tdef __mul__(self, other):\\n\\t\\t${3:pass}\\n\\n\\tdef __div__(self, other):\\n\\t\\t${4:pass}\\n\\n\\tdef __truediv__(self, other):\\n\\t\\t${5:pass}\\n\\n\\tdef __floordiv__(self, other):\\n\\t\\t${6:pass}\\n\\n\\tdef __mod__(self, other):\\n\\t\\t${7:pass}\\n\\n\\tdef __divmod__(self, other):\\n\\t\\t${8:pass}\\n\\n\\tdef __pow__(self, other):\\n\\t\\t${9:pass}\\n\\n\\tdef __lshift__(self, other):\\n\\t\\t${10:pass}\\n\\n\\tdef __rshift__(self, other):\\n\\t\\t${11:pass}\\n\\n\\tdef __and__(self, other):\\n\\t\\t${12:pass}\\n\\n\\tdef __xor__(self, other):\\n\\t\\t${13:pass}\\n\\n\\tdef __or__(self, other):\\n\\t\\t${14:pass}\\n\\n\\tdef __neg__(self):\\n\\t\\t${15:pass}\\n\\n\\tdef __pos__(self):\\n\\t\\t${16:pass}\\n\\n\\tdef __abs__(self):\\n\\t\\t${17:pass}\\n\\n\\tdef __invert__(self):\\n\\t\\t${18:pass}\\n\\n\\tdef __complex__(self):\\n\\t\\t${19:pass}\\n\\n\\tdef __int__(self):\\n\\t\\t${20:pass}\\n\\n\\tdef __long__(self):\\n\\t\\t${21:pass}\\n\\n\\tdef __float__(self):\\n\\t\\t${22:pass}\\n\\n\\tdef __oct__(self):\\n\\t\\t${22:pass}\\n\\n\\tdef __hex__(self):\\n\\t\\t${23:pass}\\n\\n\\tdef __index__(self):\\n\\t\\t${24:pass}\\n\\n\\tdef __coerce__(self, other):\\n\\t\\t${25:pass}\\n\\t${0}\"}", "description": "def __add__(self, other):\n\t\t${1:pass}\n\n\tdef __sub__(self, other):\n\t\t${2:pass}\n\n\tdef __mul__(self, other):\n\t\t${3:pass}\n\n\tdef __div__(self, other):\n\t\t${4:pass}\n\n\tdef __truediv__(self, other):\n\t\t${5:pass}\n\n\tdef __floordiv__(self, other):\n\t\t${6:pass}\n\n\tdef __mod__(self, other):\n\t\t${7:pass}\n\n\tdef __divmod__(self, other):\n\t\t${8:pass}\n\n\tdef __pow__(self, other):\n\t\t${9:pass}\n\n\tdef __lshift__(self, other):\n\t\t${10:pass}\n\n\tdef __rshift__(self, other):\n\t\t${11:pass}\n\n\tdef __and__(self, other):\n\t\t${12:pass}\n\n\tdef __xor__(self, other):\n\t\t${13:pass}\n\n\tdef __or__(self, other):\n\t\t${14:pass}\n\n\tdef __neg__(self):\n\t\t${15:pass}\n\n\tdef __pos__(self):\n\t\t${16:pass}\n\n\tdef __abs__(self):\n\t\t${17:pass}\n\n\tdef __invert__(self):\n\t\t${18:pass}\n\n\tdef __complex__(self):\n\t\t${19:pass}\n\n\tdef __int__(self):\n\t\t${20:pass}\n\n\tdef __long__(self):\n\t\t${21:pass}\n\n\tdef __float__(self):\n\t\t${22:pass}\n\n\tdef __oct__(self):\n\t\t${22:pass}\n\n\tdef __hex__(self):\n\t\t${23:pass}\n\n\tdef __index__(self):\n\t\t${24:pass}\n\n\tdef __coerce__(self, other):\n\t\t${25:pass}\n\t${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 376, "menu_template": "\"methods for emulating a numeric type\" b", "real_name": "numeric", "action__pattern": "^snippet\\s\\+numeric$", "menu_abbr": "\"methods for emulating a numeric type\" b"}, "scp": {"word": "scp", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "{${1} for ${2} in ${3:${VISUAL}}}${0}", "user_data": "{\"snippet_trigger\": \"scp\", \"snippet\": \"{${1} for ${2} in ${3:${VISUAL}}}${0}\"}", "description": "{${1} for ${2} in ${3:${VISUAL}}}${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 290, "menu_template": "set comprehension", "real_name": "scp", "action__pattern": "^snippet\\s\\+scp$", "menu_abbr": "set comprehension"}, "dol": {"word": "dol", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "def ${1:__init__}(self, *args, **kwargs):\n\t    super(${0:ClassName}, self).$1(*args, **kwargs)", "user_data": "{\"snippet_trigger\": \"dol\", \"snippet\": \"def ${1:__init__}(self, *args, **kwargs):\\n\\t    super(${0:ClassName}, self).$1(*args, **kwargs)\"}", "description": "def ${1:__init__}(self, *args, **kwargs):\n\t    super(${0:ClassName}, self).$1(*args, **kwargs)", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 269, "menu_template": "def ${1:__init__}(self, *args, **kwargs):  super(${0:ClassName}, self).$1(*args, **kwargs)", "real_name": "dol", "action__pattern": "^snippet\\s\\+dol$", "menu_abbr": "def ${1:__init__}(self, *args, **kwargs):  super(${0:ClassName}, self).$1(*args, **kwargs)"}, "uni": {"word": "uni", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "def __unicode__(self):\n\t\t${0:representation}", "user_data": "{\"snippet_trigger\": \"uni\", \"snippet\": \"def __unicode__(self):\\n\\t\\t${0:representation}\"}", "description": "def __unicode__(self):\n\t\t${0:representation}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 12, "menu_template": "def __unicode__(self):  ${0:representation}", "real_name": "uni", "action__pattern": "^snippet\\s\\+uni$", "menu_abbr": "def __unicode__(self):  ${0:representation}"}, "lc": {"word": "lc", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "LOGGER.critical(${0:msg})", "user_data": "{\"snippet_trigger\": \"lc\", \"snippet\": \"LOGGER.critical(${0:msg})\"}", "description": "LOGGER.critical(${0:msg})", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/python.snippets", "action__line": 254, "menu_template": "LOGGER.critical(${0:msg})", "real_name": "lc", "action__pattern": "^snippet\\s\\+lc$", "menu_abbr": "LOGGER.critical(${0:msg})"}}
