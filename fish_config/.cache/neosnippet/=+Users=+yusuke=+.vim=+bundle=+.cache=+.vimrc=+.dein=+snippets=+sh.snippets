{"root":{"word":"root","options":{"word":0,"oneshot":0,"indent":0,"head":0},"snip":"if [ \\$(id -u) -ne 0 ]; then exec sudo \\$0; fi${0}","user_data":"{\"snippet_trigger\":\"root\",\"snippet\":\"if [ \\\\$(id -u) -ne 0 ]; then exec sudo \\\\$0; fi${0}\"}","description":"if [ \\$(id -u) -ne 0 ]; then exec sudo \\$0; fi${0}","action__path":"/Users/yusuke/.vim/bundle/.cache/.vimrc/.dein/snippets/sh.snippets","action__line":95,"menu_template":"if [ $(id -u) -ne 0 ]; then exec sudo $0; fi${0}","real_name":"root","action__pattern":"^snippet\\s\\+root$","menu_abbr":"if [ $(id -u) -ne 0 ]; then exec sudo $0; fi${0}"},"fori":{"word":"fori","options":{"word":0,"oneshot":0,"indent":0,"head":0},"snip":"for ${1:needle} in ${2:haystack} ; do\n\t\t${0:${VISUAL}}\n\tdone","user_data":"{\"snippet_trigger\":\"fori\",\"snippet\":\"for ${1:needle} in ${2:haystack} ; do\\n\\t\\t${0:${VISUAL}}\\n\\tdone\"}","description":"for ${1:needle} in ${2:haystack} ; do\n\t\t${0:${VISUAL}}\n\tdone","action__path":"/Users/yusuke/.vim/bundle/.cache/.vimrc/.dein/snippets/sh.snippets","action__line":31,"menu_template":"for ${1:needle} in ${2:haystack} ; do  ${0:${VISUAL}}  done","real_name":"fori","action__pattern":"^snippet\\s\\+fori$","menu_abbr":"for ${1:needle} in ${2:haystack} ; do  ${0:${VISUAL}}  done"},"fun":{"word":"fun","options":{"word":0,"oneshot":0,"indent":0,"head":0},"snip":"function ${1:function_name}() {\n\t\t${0:#function_body}\n\t}","user_data":"{\"snippet_trigger\":\"fun\",\"snippet\":\"function ${1:function_name}() {\\n\\t\\t${0:#function_body}\\n\\t}\"}","description":"function ${1:function_name}() {\n\t\t${0:#function_body}\n\t}","action__path":"/Users/yusuke/.vim/bundle/.cache/.vimrc/.dein/snippets/sh.snippets","action__line":103,"menu_template":"function ${1:function_name}() {  ${0:#function_body}  }","real_name":"fun","action__pattern":"^snippet\\s\\+fun$","menu_abbr":"function ${1:function_name}() {  ${0:#function_body}  }"},"elif":{"word":"elif","options":{"word":0,"oneshot":0,"indent":0,"head":0},"snip":"elif [[ ${1:condition} ]]; then\n\t\t${0:${VISUAL}}","user_data":"{\"snippet_trigger\":\"elif\",\"snippet\":\"elif [[ ${1:condition} ]]; then\\n\\t\\t${0:${VISUAL}}\"}","description":"elif [[ ${1:condition} ]]; then\n\t\t${0:${VISUAL}}","action__path":"/Users/yusuke/.vim/bundle/.cache/.vimrc/.dein/snippets/sh.snippets","action__line":24,"menu_template":"elif [[ ${1:condition} ]]; then  ${0:${VISUAL}}","real_name":"elif","action__pattern":"^snippet\\s\\+elif$","menu_abbr":"elif [[ ${1:condition} ]]; then  ${0:${VISUAL}}"},"go":{"word":"go","options":{"word":0,"oneshot":0,"indent":0,"head":0},"snip":"while getopts '${1:o}' ${2:opts}\n\tdo\n\t\tcase $$2 in\n\t\t${3:o0})\n\t\t\t${0:#staments};;\n\t\tesac\n\tdone","user_data":"{\"snippet_trigger\":\"go\",\"snippet\":\"while getopts '${1:o}' ${2:opts}\\n\\tdo\\n\\t\\tcase $$2 in\\n\\t\\t${3:o0})\\n\\t\\t\\t${0:#staments};;\\n\\t\\tesac\\n\\tdone\"}","description":"while getopts '${1:o}' ${2:opts}\n\tdo\n\t\tcase $$2 in\n\t\t${3:o0})\n\t\t\t${0:#staments};;\n\t\tesac\n\tdone","action__path":"/Users/yusuke/.vim/bundle/.cache/.vimrc/.dein/snippets/sh.snippets","action__line":48,"menu_template":"while getopts '${1:o}' ${2:opts}  do  case $$2 in  ${3:o0})  ${0:#staments};;  esac  done","real_name":"go","action__pattern":"^snippet\\s\\+go$","menu_abbr":"while getopts '${1:o}' ${2:opts}  do  case $$2 in  ${3:o0})  ${0:#staments};;  esac  done"},"if":{"word":"if","options":{"word":0,"oneshot":0,"indent":0,"head":0},"snip":"if [[ ${1:condition} ]]; then\n\t\t${0:${VISUAL}}\n\tfi","user_data":"{\"snippet_trigger\":\"if\",\"snippet\":\"if [[ ${1:condition} ]]; then\\n\\t\\t${0:${VISUAL}}\\n\\tfi\"}","description":"if [[ ${1:condition} ]]; then\n\t\t${0:${VISUAL}}\n\tfi","action__path":"/Users/yusuke/.vim/bundle/.cache/.vimrc/.dein/snippets/sh.snippets","action__line":20,"menu_template":"if [[ ${1:condition} ]]; then  ${0:${VISUAL}}  fi","real_name":"if","action__pattern":"^snippet\\s\\+if$","menu_abbr":"if [[ ${1:condition} ]]; then  ${0:${VISUAL}}  fi"},"bash":{"word":"bash","options":{"word":0,"oneshot":0,"indent":0,"head":0},"snip":"#!/usr/bin/env bash${0}","user_data":"{\"snippet_trigger\":\"bash\",\"snippet\":\"#!/usr/bin/env bash${0}\"}","description":"#!/usr/bin/env bash${0}","action__path":"/Users/yusuke/.vim/bundle/.cache/.vimrc/.dein/snippets/sh.snippets","action__line":12,"menu_template":"#!/usr/bin/env bash${0}","real_name":"bash","action__pattern":"^snippet\\s\\+bash$","menu_abbr":"#!/usr/bin/env bash${0}"},"wh":{"word":"wh","options":{"word":0,"oneshot":0,"indent":0,"head":0},"snip":"while [[ ${1:condition} ]]; do\n\t\t${0:${VISUAL}}\n\tdone","user_data":"{\"snippet_trigger\":\"wh\",\"snippet\":\"while [[ ${1:condition} ]]; do\\n\\t\\t${0:${VISUAL}}\\n\\tdone\"}","description":"while [[ ${1:condition} ]]; do\n\t\t${0:${VISUAL}}\n\tdone","action__path":"/Users/yusuke/.vim/bundle/.cache/.vimrc/.dein/snippets/sh.snippets","action__line":35,"menu_template":"while [[ ${1:condition} ]]; do  ${0:${VISUAL}}  done","real_name":"wh","action__pattern":"^snippet\\s\\+wh$","menu_abbr":"while [[ ${1:condition} ]]; do  ${0:${VISUAL}}  done"},"sbash":{"word":"sbash","options":{"word":0,"oneshot":0,"indent":0,"head":0},"snip":"#!/usr/bin/env bash\n\tset -euo pipefail\n\tIFS=$'\\n\\t'${0}","user_data":"{\"snippet_trigger\":\"sbash\",\"snippet\":\"#!/usr/bin/env bash\\n\\tset -euo pipefail\\n\\tIFS=$'\\\\n\\\\t'${0}\"}","description":"#!/usr/bin/env bash\n\tset -euo pipefail\n\tIFS=$'\\n\\t'${0}","action__path":"/Users/yusuke/.vim/bundle/.cache/.vimrc/.dein/snippets/sh.snippets","action__line":15,"menu_template":"#!/usr/bin/env bash  set -euo pipefail  IFS=$'\\n\\t'${0}","real_name":"sbash","action__pattern":"^snippet\\s\\+sbash$","menu_abbr":"#!/usr/bin/env bash  set -euo pipefail  IFS=$'\\n\\t'${0}"},"safe":{"word":"safe","options":{"word":0,"oneshot":0,"indent":0,"head":0},"snip":"set -euo pipefail${0}","user_data":"{\"snippet_trigger\":\"safe\",\"snippet\":\"set -euo pipefail${0}\"}","description":"set -euo pipefail${0}","action__path":"/Users/yusuke/.vim/bundle/.cache/.vimrc/.dein/snippets/sh.snippets","action__line":9,"menu_template":"set -euo pipefail${0}","real_name":"safe","action__pattern":"^snippet\\s\\+safe$","menu_abbr":"set -euo pipefail${0}"},"fun-sh":{"word":"fun-sh","options":{"word":0,"oneshot":0,"indent":0,"head":0},"snip":"${1:function_name}() {\n\t\t${0:#function_body}\n\t}","user_data":"{\"snippet_trigger\":\"fun-sh\",\"snippet\":\"${1:function_name}() {\\n\\t\\t${0:#function_body}\\n\\t}\"}","description":"${1:function_name}() {\n\t\t${0:#function_body}\n\t}","action__path":"/Users/yusuke/.vim/bundle/.cache/.vimrc/.dein/snippets/sh.snippets","action__line":98,"menu_template":"${1:function_name}() {  ${0:#function_body}  }","real_name":"fun-sh","action__pattern":"^snippet\\s\\+fun-sh$","menu_abbr":"${1:function_name}() {  ${0:#function_body}  }"},"getopt":{"word":"getopt","options":{"word":0,"oneshot":0,"indent":0,"head":0},"snip":"__ScriptVersion=\"${1:version}\"\n\n\t#===  FUNCTION  ================================================================\n\t#         NAME:  usage\n\t#  DESCRIPTION:  Display usage information.\n\t#===============================================================================\n\tfunction usage ()\n\t{\n\t\techo \"Usage :  $${0:0} [options] [--]\n\n\t    Options:\n\t    -h|help       Display this message\n\t    -v|version    Display script version\"\n\n\t}    # ----------  end of function usage  ----------\n\n\t#-----------------------------------------------------------------------\n\t#  Handle command line arguments\n\t#-----------------------------------------------------------------------\n\n\twhile getopts \":hv\" opt\n\tdo\n\t  case $opt in\n\n\t\th|help     )  usage; exit 0   ;;\n\n\t\tv|version  )  echo \"$${0:0} -- Version $__ScriptVersion\"; exit 0   ;;\n\n\t\t* )  echo -e \"\\n  Option does not exist : $OPTARG\\n\"\n\t\t\t  usage; exit 1   ;;\n\n\t  esac    # --- end of case ---\n\tdone\n\tshift $(($OPTIND-1))","user_data":"{\"snippet_trigger\":\"getopt\",\"snippet\":\"__ScriptVersion=\\\"${1:version}\\\"\\n\\n\\t#===  FUNCTION  ================================================================\\n\\t#         NAME:  usage\\n\\t#  DESCRIPTION:  Display usage information.\\n\\t#===============================================================================\\n\\tfunction usage ()\\n\\t{\\n\\t\\techo \\\"Usage :  $${0:0} [options] [--]\\n\\n\\t    Options:\\n\\t    -h|help       Display this message\\n\\t    -v|version    Display script version\\\"\\n\\n\\t}    # ----------  end of function usage  ----------\\n\\n\\t#-----------------------------------------------------------------------\\n\\t#  Handle command line arguments\\n\\t#-----------------------------------------------------------------------\\n\\n\\twhile getopts \\\":hv\\\" opt\\n\\tdo\\n\\t  case $opt in\\n\\n\\t\\th|help     )  usage; exit 0   ;;\\n\\n\\t\\tv|version  )  echo \\\"$${0:0} -- Version $__ScriptVersion\\\"; exit 0   ;;\\n\\n\\t\\t* )  echo -e \\\"\\\\n  Option does not exist : $OPTARG\\\\n\\\"\\n\\t\\t\\t  usage; exit 1   ;;\\n\\n\\t  esac    # --- end of case ---\\n\\tdone\\n\\tshift $(($OPTIND-1))\"}","description":"__ScriptVersion=\"${1:version}\"\n\n\t#===  FUNCTION  ================================================================\n\t#         NAME:  usage\n\t#  DESCRIPTION:  Display usage information.\n\t#===============================================================================\n\tfunction usage ()\n\t{\n\t\techo \"Usage :  $${0:0} [options] [--]\n\n\t    Options:\n\t    -h|help       Display this message\n\t    -v|version    Display script version\"\n\n\t}    # ----------  end of function usage  ----------\n\n\t#-----------------------------------------------------------------------\n\t#  Handle command line arguments\n\t#-----------------------------------------------------------------------\n\n\twhile getopts \":hv\" opt\n\tdo\n\t  case $opt in\n\n\t\th|help     )  usage; exit 0   ;;\n\n\t\tv|version  )  echo \"$${0:0} -- Version $__ScriptVersion\"; exit 0   ;;\n\n\t\t* )  echo -e \"\\n  Option does not exist : $OPTARG\\n\"\n\t\t\t  usage; exit 1   ;;\n\n\t  esac    # --- end of case ---\n\tdone\n\tshift $(($OPTIND-1))","action__path":"/Users/yusuke/.vim/bundle/.cache/.vimrc/.dein/snippets/sh.snippets","action__line":60,"menu_template":"__ScriptVersion=\"${1:version}\"   #=== FUNCTION ================================================================  # NAME: usage  # DESCRIPTION: Display usage information.  #===============================================================================  function usage ()  {  echo \"Usage : $${0:0} [options] [--]   Options:  -h|help Display this message  -v|version Display script version\"   } # ---------- end of function usage ----------   #-----------------------------------------------------------------------  # Handle command line arguments  #-----------------------------------------------------------------------   while getopts \":hv\" opt  do  case $opt in   h|help ) usage; exit 0 ;;   v|version ) echo \"$${0:0} -- Version $__ScriptVersion\"; exit 0 ;;   * ) echo -e \"\\n Option does not exist : $OPTARG\\n\"  usage; exit 1 ;;   esac # --- end of case ---  done  shift $(($OPTIND-1))","real_name":"getopt","action__pattern":"^snippet\\s\\+getopt$","menu_abbr":"__ScriptVersion=\"${1:version}\"   #=== FUNCTION ================================================================  # NAME: usage  # DESCRIPTION: Display usage information.  #===============================================================================  function usage ()  {  echo \"Usage : $${0:0} [options] [--]   Options:  -h|help Display this message  -v|version Display script version\"   } # ---------- end of function usage ----------   #-----------------------------------------------------------------------  # Handle command line arguments  #-----------------------------------------------------------------------   while getopts \":hv\" opt  do  case $opt in   h|help ) usage; exit 0 ;;   v|version ) echo \"$${0:0} -- Version $__ScriptVersion\"; exit 0 ;;   * ) echo -e \"\\n Option does not exist : $OPTARG\\n\"  usage; exit 1 ;;   esac # --- end of case ---  done  shift $(($OPTIND-1))"},"sdir":{"word":"sdir","options":{"word":0,"oneshot":0,"indent":0,"head":0},"snip":"SCRIPT_DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"${0}","user_data":"{\"snippet_trigger\":\"sdir\",\"snippet\":\"SCRIPT_DIR=\\\"$( cd \\\"$( dirname \\\"${BASH_SOURCE[0]}\\\" )\\\" && pwd )\\\"${0}\"}","description":"SCRIPT_DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"${0}","action__path":"/Users/yusuke/.vim/bundle/.cache/.vimrc/.dein/snippets/sh.snippets","action__line":57,"menu_template":"SCRIPT_DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"${0}","real_name":"sdir","action__pattern":"^snippet\\s\\+sdir$","menu_abbr":"SCRIPT_DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"${0}"},"s#!":{"word":"s#!","options":{"word":0,"oneshot":0,"indent":0,"head":0},"snip":"#!/usr/bin/env sh\n\tset -euo pipefail${0}","user_data":"{\"snippet_trigger\":\"s#!\",\"snippet\":\"#!/usr/bin/env sh\\n\\tset -euo pipefail${0}\"}","description":"#!/usr/bin/env sh\n\tset -euo pipefail${0}","action__path":"/Users/yusuke/.vim/bundle/.cache/.vimrc/.dein/snippets/sh.snippets","action__line":5,"menu_template":"#!/usr/bin/env sh  set -euo pipefail${0}","real_name":"s#!","action__pattern":"^snippet\\s\\+s#!$","menu_abbr":"#!/usr/bin/env sh  set -euo pipefail${0}"},"#!":{"word":"#!","options":{"word":0,"oneshot":0,"indent":0,"head":0},"snip":"#!/usr/bin/env sh${0}","user_data":"{\"snippet_trigger\":\"#!\",\"snippet\":\"#!/usr/bin/env sh${0}\"}","description":"#!/usr/bin/env sh${0}","action__path":"/Users/yusuke/.vim/bundle/.cache/.vimrc/.dein/snippets/sh.snippets","action__line":2,"menu_template":"#!/usr/bin/env sh${0}","real_name":"#!","action__pattern":"^snippet\\s\\+#!$","menu_abbr":"#!/usr/bin/env sh${0}"},"until":{"word":"until","options":{"word":0,"oneshot":0,"indent":0,"head":0},"snip":"until [[ ${1:condition} ]]; do\n\t\t${0:${VISUAL}}\n\tdone","user_data":"{\"snippet_trigger\":\"until\",\"snippet\":\"until [[ ${1:condition} ]]; do\\n\\t\\t${0:${VISUAL}}\\n\\tdone\"}","description":"until [[ ${1:condition} ]]; do\n\t\t${0:${VISUAL}}\n\tdone","action__path":"/Users/yusuke/.vim/bundle/.cache/.vimrc/.dein/snippets/sh.snippets","action__line":39,"menu_template":"until [[ ${1:condition} ]]; do  ${0:${VISUAL}}  done","real_name":"until","action__pattern":"^snippet\\s\\+until$","menu_abbr":"until [[ ${1:condition} ]]; do  ${0:${VISUAL}}  done"},"for":{"word":"for","options":{"word":0,"oneshot":0,"indent":0,"head":0},"snip":"for (( ${2:i} = 0; $2 < ${1:count}; $2++ )); do\n\t\t${0:${VISUAL}}\n\tdone","user_data":"{\"snippet_trigger\":\"for\",\"snippet\":\"for (( ${2:i} = 0; $2 < ${1:count}; $2++ )); do\\n\\t\\t${0:${VISUAL}}\\n\\tdone\"}","description":"for (( ${2:i} = 0; $2 < ${1:count}; $2++ )); do\n\t\t${0:${VISUAL}}\n\tdone","action__path":"/Users/yusuke/.vim/bundle/.cache/.vimrc/.dein/snippets/sh.snippets","action__line":27,"menu_template":"for (( ${2:i} = 0; $2 < ${1:count}; $2++ )); do  ${0:${VISUAL}}  done","real_name":"for","action__pattern":"^snippet\\s\\+for$","menu_abbr":"for (( ${2:i} = 0; $2 < ${1:count}; $2++ )); do  ${0:${VISUAL}}  done"},"case":{"word":"case","options":{"word":0,"oneshot":0,"indent":0,"head":0},"snip":"case ${1:word} in\n\t\t${2:pattern})\n\t\t\t${0};;\n\tesac","user_data":"{\"snippet_trigger\":\"case\",\"snippet\":\"case ${1:word} in\\n\\t\\t${2:pattern})\\n\\t\\t\\t${0};;\\n\\tesac\"}","description":"case ${1:word} in\n\t\t${2:pattern})\n\t\t\t${0};;\n\tesac","action__path":"/Users/yusuke/.vim/bundle/.cache/.vimrc/.dein/snippets/sh.snippets","action__line":43,"menu_template":"case ${1:word} in  ${2:pattern})  ${0};;  esac","real_name":"case","action__pattern":"^snippet\\s\\+case$","menu_abbr":"case ${1:word} in  ${2:pattern})  ${0};;  esac"}}
