module RemindHelper

  def filled?(item)
    !(item == nil || item == "")
  end

  def checked?(item)
    !(item == false || item == nil)
  end

  def get_remind_items(real_estate)
    remind_items = []

    return remind_items if !filled? real_estate.whether_remind

    RealEstate.column_names.each do |key|
      remind_items.push(key) unless filled?(real_estate[key])
    end
    
    #
    check_item_columns = [
      'ab_contract_confirmation',
      'ab_contract_agreement',
      'presence_lessor',
      'presence_lease_contract_data',
      'presence_important_items_survey_form',
      'receipt_other_property_documents',
      'transcript',
      'public_figure',
      'building_plan',
      'public_bill_certificate',
      'management_agreement',
      'presence_pamphlet',
      'create_bc_proposal_property_summary',
      'create_bc_contract_data',
      'bc_contract_content_check',
      'bc_contract_filing',
      'registration_cause_certificate_request',
      'receipt_registration_certificate_from_js',
      'real_rent',
      'rent_date_residents',
      'guaranteed_rent',
      'lawn_consultation',
      'contract_and_loan_documents_complete',
      'financial_institution_submissions_complete',
      'residence_certificate',
      'seal_certificate',
      'identity_card',
      'filed_tax_return',
      'withholding_slip',
      'tax_declaration_certificate',
      'tax_return_form',
      'tax_payment_certificate',
      'home_transcript',
      'home_repayment',
      'other_possessed_property_1_transcript',
      'other_possessed_property_1_lease_contract',
      'other_possessed_property_1_repayment_table',
      'other_possessed_property_2_transcript',
      'other_possessed_property_2_lease_contract',
      'other_possessed_property_2_repayment_table',
      'auto_loan_repayment_table',
      'card_loan_repayment_table',
      'other_loan_repayment_table',
      'other',
      'financial_institutions_bring',
      'registration_cause_certificate_returned_to_js',
      'determinate_settlement_date',
      'contact_financial_institution_settlement_date',
      'contact_settlement_date_seller',
      'contact_js_settlement_day',
      'fire_insurance_phone_interview_setting',
      'js_phone_confirmation_setting',
      'loan_phone_interview_setting',
      'witnessing_place_confirmation',
      'check_sales_statement_checked_from_the_seller',
      'send_transfer_details_email_to_seller',
      'transfar_registration_fee',
      'send_email_transfer_registration_fee',
      'prepare_transaction_completion_document',
      'date_input_lease_lease_agreement',
      'receive_owner_change_documents_from_seller',
      'contact_owner_change_to_tenant',
      'transaction_complete_document_exchange',
      'return_lease_lease_agreement',
      'send_owner_change_document_to_management_company',
      'lease_situation',
      'pay_guaranteed_rent_on_10th',
      'pay_monthly_rent_from_tenant_on_15th',
    ]

    check_item_columns.each do |check_item_column|
      remind_items.push(check_item_column) unless checked? real_estate[check_item_column]
    end
    
    # 支払日は期日が迫っていなければリマインドしない
    remind_items.delete('settlement_date')

    # 順番を考慮
    # 抵当権がないときは抵当権の有無と抵当権者のリマインドをしない
    if real_estate.mortgage_is == false 
      remind_items.delete('mortgage_is')
      remind_items.delete('mortgagee')
    end

    # 立会いしないときは立会いの有無，立会い時間，立会い担当社員，立会い場所に関するリマインドをしない
    if real_estate.witness == false 
      remind_items.delete('witness')
      remind_items.delete('witness_time')
      remind_items.delete('witness_employee')
      remind_items.delete('witness_location')
    end
    
    # 賃貸人がいなければ賃貸借契約書データ有無をリマインドしない
    if real_estate.presence_lessor == false
      remind_items.delete('presence_lease_contract_data')
    end

    # 金融機関提出書類不足なしがOKならば後の項目をリマインドしない
    if real_estate.financial_institution_submissions_complete == true
      remind_items.delete('residence_certificate')
      remind_items.delete('seal_certificate')
      remind_items.delete('identity_card')
      remind_items.delete('filed_tax_return')
      remind_items.delete('withholding_slip')
      remind_items.delete('tax_declaration_certificate')
      remind_items.delete('tax_return_form')
      remind_items.delete('tax_payment_certificate')
      remind_items.delete('home_transcript')
      remind_items.delete('home_repayment')
      remind_items.delete('other_possessed_property_1_transcript')
      remind_items.delete('other_possessed_property_1_lease_contract')
      remind_items.delete('other_possessed_property_1_repayment_table')
      remind_items.delete('other_possessed_property_2_transcript')
      remind_items.delete('other_possessed_property_2_lease_contract')
      remind_items.delete('other_possessed_property_2_repayment_table')
      remind_items.delete('auto_loan_repayment_table')
      remind_items.delete('card_loan_repayment_table')
      remind_items.delete('other_loan_repayment_table')
      remind_items.delete('other')
    end

    # 確定申告していれば，源泉徴収票と課税証明のリマインドをしない
    if real_estate.filed_tax_return == true
      remind_items.delete('withholding_slip')
      remind_items.delete('tax_declaration_certificate')
    end

    # 確定申告していなければ，確定申告書控えと納税証明書のリマインドをしない
    if real_estate.filed_tax_return == false
      remind_items.delete('tax_return_form')
      remind_items.delete('tax_payment_certificate')
    end

    return remind_items[0,3]
  end

  # オブジェクトが作られていなければリマインド
  def get_remind_monthly_check_items(real_estate)
    remind_items = Array.new

    return remind_items if !filled? real_estate.whether_remind

    mcis = real_estate.monthly_check_item.all
    today = DateTime.now
    # MonthlyCheckItemのオブジェクトが一つも作られていなければ今月分をリマインド
    if mcis.last.nil?
      remind_items.push(today.strftime("%Y-%m") + " Not Created")
    else
      # 今月までで作られてないオブジェクトがあればその数だけリマインド
      month_first = Date.new(today.year, today.month, 1)
      while mcis.last.pay_month < month_first
        remind_items.push(month_first.strftime("%Y-%m") + " Not Created")
        month_first -= 1.month
      end
    end
    return remind_items
  end

  def get_deadline_remind_items(real_estate)
    deadline_remind_items = Array.new

    return deadline_remind_items if !filled? real_estate.whether_remind

    today = DateTime.now
    today = Date.new(today.year, today.month, today.day)

    # AbNegotiationの決済期日の三日前になってもRealEstateの決済日が入力されてなければリマインド
    if filled?(real_estate.settlement_due_date) \
        and today + 3.day >= real_estate.settlement_due_date \
        and !filled?(real_estate.settlement_date)
      deadline_remind_items.push('settlement_date')
    end

    # 立会い日の三日前になったらリマインド
    if filled?(real_estate.witness_time) \
        and today + 3.day >= real_estate.witness_time
      deadline_remind_items.push('witness_time')
    end

    # MonthlyCheckItemのリマインド
    mcis = real_estate.monthly_check_item.all
    unchecked_mcis = get_uncheck_monthly_check_items(mcis)
    unchecked_mcis.reverse.each do |unchecked_mci|
      # 7日になっても保証家賃を支払っていなければリマインド(10日が支払日)
      day7 = Date.new(today.year, today.month, 7)
      # 保証家賃を払っていないかつオブジェクトが今月分かつ今日が7日以降であればリマインド
      pay_month = Date.new(unchecked_mci.pay_month.year, unchecked_mci.pay_month.month, today.day)
      if !checked?(unchecked_mci.remind_pay_guaranteed_rent_on_10th)
        if pay_month == today and today >= day7
          deadline_remind_items.push(unchecked_mci.pay_month.strftime("%Y-%m") + " Pay Guaranteed Rent")
        end
     
        # 保証家賃を払っていないかつ先月以前のオブジェクトであればリマインド
        day1 = Date.new(today.year, today.month, 1)
        if unchecked_mci.pay_month < day1
          deadline_remind_items.push(unchecked_mci.pay_month.strftime("%Y-%m") + " Pay Guaranteed Rent")
        end

      end
      # 12日になっても家賃を支払ってなければリマインド(15日が支払日)
      day12 = Date.new(today.year, today.month, 12)
      if !checked?(unchecked_mci.remind_pay_monthly_rent_from_tenant_on_15th)
        if pay_month == today and today >= day12
          deadline_remind_items.push(unchecked_mci.pay_month.strftime("%Y-%m") + " Pay Monthly Rent")
        end
     
        # 家賃を払っていないかつ先月以前のオブジェクトであればリマインド
        day1 = Date.new(today.year, today.month, 1)
        if unchecked_mci.pay_month < day1
          deadline_remind_items.push(unchecked_mci.pay_month.strftime("%Y-%m") + " Pay Monthly Rent")
        end
      end

    end

    return deadline_remind_items
  end

end
