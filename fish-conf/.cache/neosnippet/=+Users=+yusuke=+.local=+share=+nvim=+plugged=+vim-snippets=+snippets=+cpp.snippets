{"ld": {"word": "ld", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "[${1}](${2}){${3}};${0}", "user_data": "{\"snippet_trigger\": \"ld\", \"snippet\": \"[${1}](${2}){${3}};${0}\"}", "description": "[${1}](${2}){${3}};${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/cpp.snippets", "action__line": 193, "menu_template": "[${1}](${2}){${3}};${0}", "real_name": "ld", "action__pattern": "^snippet\\s\\+ld$", "menu_abbr": "[${1}](${2}){${3}};${0}"}, "def": {"word": "def", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "#define${0}", "menu_template": "#define${0}", "user_data": "{\"snippet_trigger\": \"def\", \"snippet\": \"#define${0}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/c.snippets", "action__line": 30, "description": "#define${0}", "real_name": "def", "action__pattern": "^snippet\\s\\+def$", "menu_abbr": "#define${0}"}, "fore": {"word": "fore", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "for (${1:auto} ${2:i} : ${3:container}) {\n\t\t${4}\n\t}", "user_data": "{\"snippet_trigger\": \"fore\", \"snippet\": \"for (${1:auto} ${2:i} : ${3:container}) {\\n\\t\\t${4}\\n\\t}\"}", "description": "for (${1:auto} ${2:i} : ${3:container}) {\n\t\t${4}\n\t}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/cpp.snippets", "action__line": 175, "menu_template": "for (${1:auto} ${2:i} : ${3:container}) {  ${4}  }", "real_name": "fore", "action__pattern": "^snippet\\s\\+fore$", "menu_abbr": "for (${1:auto} ${2:i} : ${3:container}) {  ${4}  }"}, "fgets": {"word": "fgets", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "fgets(${0:ROW}, ${1:LENGTH}, ${2:FILE});", "menu_template": "fgets(row, length, file);", "user_data": "{\"snippet_trigger\": \"fgets\", \"snippet\": \"fgets(${0:ROW}, ${1:LENGTH}, ${2:FILE});\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/c.snip", "action__line": 170, "description": "fgets(${0:ROW}, ${1:LENGTH}, ${2:FILE});", "real_name": "fgets", "action__pattern": "^snippet\\s\\+fgets$", "menu_abbr": "fgets(row, length, file);"}, "conditional": {"word": "conditional", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "(${1:#:condition}) ? ${2:#:a} : ${3:#:b}", "menu_template": "(${1:#:condition}) ? ${2:#:a} : ${3:#:b}", "user_data": "{\"snippet_trigger\": \"conditional\", \"snippet\": \"(${1:#:condition}) ? ${2:#:a} : ${3:#:b}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/c.snip", "action__line": 132, "description": "(${1:#:condition}) ? ${2:#:a} : ${3:#:b}", "real_name": "conditional", "action__pattern": "^snippet\\s\\+conditional$", "menu_abbr": "(${1:#:condition}) ? ${2:#:a} : ${3:#:b}"}, "vector": {"word": "vector", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "std::vector<${1:T}> ${2};${0}", "user_data": "{\"snippet_trigger\": \"vector\", \"snippet\": \"std::vector<${1:T}> ${2};${0}\"}", "description": "std::vector<${1:T}> ${2};${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/cpp.snippets", "action__line": 16, "menu_template": "std::vector<${1:T}> ${2};${0}", "real_name": "vector", "action__pattern": "^snippet\\s\\+vector$", "menu_abbr": "std::vector<${1:T}> ${2};${0}"}, "fun": {"word": "fun", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "${1:void} ${2:function_name}(${3})\n\t{\n\t\t${4}\n\t}", "menu_template": "${1:void} ${2:function_name}(${3})  {  ${4}  }", "user_data": "{\"snippet_trigger\": \"fun\", \"snippet\": \"${1:void} ${2:function_name}(${3})\\n\\t{\\n\\t\\t${4}\\n\\t}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/c.snippets", "action__line": 139, "description": "${1:void} ${2:function_name}(${3})\n\t{\n\t\t${4}\n\t}", "real_name": "fun", "action__pattern": "^snippet\\s\\+fun$", "menu_abbr": "${1:void} ${2:function_name}(${3})  {  ${4}  }"}, "size": {"word": "size", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "sizeof(${0:TARGET})", "menu_template": "sizeof(${0: })", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/c.snip", "action__line": 151, "user_data": "{\"snippet_trigger\": \"sizeof\", \"snippet\": \"sizeof(${0:TARGET})\"}", "menu_abbr": "sizeof(${0: })", "real_name": "sizeof", "description": "sizeof(${0:TARGET})", "action__pattern": "^snippet\\s\\+sizeof$"}, "list": {"word": "list", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "std::list<${1:T}> ${2};${0}", "user_data": "{\"snippet_trigger\": \"list\", \"snippet\": \"std::list<${1:T}> ${2};${0}\"}", "description": "std::list<${1:T}> ${2};${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/cpp.snippets", "action__line": 25, "menu_template": "std::list<${1:T}> ${2};${0}", "real_name": "list", "action__pattern": "^snippet\\s\\+list$", "menu_abbr": "std::list<${1:T}> ${2};${0}"}, "forr": {"word": "forr", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "for (int ${1:i} = ${2:0}; ${3:$1 < 10}; $1${4:++}) {\n\t\t${5}\n\t}", "menu_template": "for (int ${1:i} = ${2:0}; ${3:$1 < 10}; $1${4:++}) {  ${5}  }", "user_data": "{\"snippet_trigger\": \"forr\", \"snippet\": \"for (int ${1:i} = ${2:0}; ${3:$1 < 10}; $1${4:++}) {\\n\\t\\t${5}\\n\\t}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/c.snippets", "action__line": 122, "description": "for (int ${1:i} = ${2:0}; ${3:$1 < 10}; $1${4:++}) {\n\t\t${5}\n\t}", "real_name": "forr", "action__pattern": "^snippet\\s\\+forr$", "menu_abbr": "for (int ${1:i} = ${2:0}; ${3:$1 < 10}; $1${4:++}) {  ${5}  }"}, "ans": {"word": "ans", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "namespace {\n\t\t${0}\n\t}", "user_data": "{\"snippet_trigger\": \"ans\", \"snippet\": \"namespace {\\n\\t\\t${0}\\n\\t}\"}", "description": "namespace {\n\t\t${0}\n\t}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/cpp.snippets", "action__line": 141, "menu_template": "namespace {  ${0}  }", "real_name": "ans", "action__pattern": "^snippet\\s\\+ans$", "menu_abbr": "namespace {  ${0}  }"}, "struct_typedef": {"word": "struct_typedef", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 1}, "snip": "typedef struct ${1:#:name} {\n${0:TARGET:data}\n};", "menu_template": "typedef struct ${1:#:name} { ${0: :data} };", "user_data": "{\"snippet_trigger\": \"struct_typedef\", \"snippet\": \"typedef struct ${1:#:name} {\\n${0:TARGET:data}\\n};\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/c.snip", "action__line": 75, "description": "typedef struct ${1:#:name} {\n${0:TARGET:data}\n};", "real_name": "struct_typedef", "action__pattern": "^snippet\\s\\+struct_typedef$", "menu_abbr": "typedef struct ${1:#:name} { ${0: :data} };"}, "flist": {"word": "flist", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "std::forward_list<${1:T}> ${2};${0}", "user_data": "{\"snippet_trigger\": \"flist\", \"snippet\": \"std::forward_list<${1:T}> ${2};${0}\"}", "description": "std::forward_list<${1:T}> ${2};${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/cpp.snippets", "action__line": 22, "menu_template": "std::forward_list<${1:T}> ${2};${0}", "real_name": "flist", "action__pattern": "^snippet\\s\\+flist$", "menu_abbr": "std::forward_list<${1:T}> ${2};${0}"}, "#ifndef": {"word": "#ifndef", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 1}, "snip": "#ifndef $1\n#define ${1:#:SYMBOL}\n#endif${0}", "menu_template": "#ifndef ... #define ... #endif", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/c.snip", "action__line": 108, "user_data": "{\"snippet_trigger\": \"ifndef\", \"snippet\": \"#ifndef $1\\n#define ${1:#:SYMBOL}\\n#endif${0}\"}", "menu_abbr": "#ifndef ... #define ... #endif", "real_name": "ifndef", "description": "#ifndef $1\n#define ${1:#:SYMBOL}\n#endif${0}", "action__pattern": "^snippet\\s\\+ifndef$"}, "fpr": {"word": "fpr", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "fprintf(${1:stderr}, \"${2:%s}\\n\"${3});${0}", "menu_template": "fprintf(${1:stderr}, \"${2:%s}\\n\"${3});${0}", "user_data": "{\"snippet_trigger\": \"fpr\", \"snippet\": \"fprintf(${1:stderr}, \\\"${2:%s}\\\\n\\\"${3});${0}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/c.snippets", "action__line": 272, "description": "fprintf(${1:stderr}, \"${2:%s}\\n\"${3});${0}", "real_name": "fpr", "action__pattern": "^snippet\\s\\+fpr$", "menu_abbr": "fprintf(${1:stderr}, \"${2:%s}\\n\"${3});${0}"}, "iter": {"word": "iter", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "for (${1:std::vector}<${2:type}>::${3:const_iterator} ${4:i} = ${5:container}.begin(); $4 != $5.end(); ++$4) {\n\t\t${6}\n\t}", "user_data": "{\"snippet_trigger\": \"iter\", \"snippet\": \"for (${1:std::vector}<${2:type}>::${3:const_iterator} ${4:i} = ${5:container}.begin(); $4 != $5.end(); ++$4) {\\n\\t\\t${6}\\n\\t}\"}", "description": "for (${1:std::vector}<${2:type}>::${3:const_iterator} ${4:i} = ${5:container}.begin(); $4 != $5.end(); ++$4) {\n\t\t${6}\n\t}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/cpp.snippets", "action__line": 180, "menu_template": "for (${1:std::vector}<${2:type}>::${3:const_iterator} ${4:i} = ${5:container}.begin(); $4 != $5.end(); ++$4) {  ${6}  }", "real_name": "iter", "action__pattern": "^snippet\\s\\+iter$", "menu_abbr": "for (${1:std::vector}<${2:type}>::${3:const_iterator} ${4:i} = ${5:container}.begin(); $4 != $5.end(); ++$4) {  ${6}  }"}, "map": {"word": "map", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "std::map<${1:Key}, ${2:T}> ${3};${0}", "user_data": "{\"snippet_trigger\": \"map\", \"snippet\": \"std::map<${1:Key}, ${2:T}> ${3};${0}\"}", "description": "std::map<${1:Key}, ${2:T}> ${3};${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/cpp.snippets", "action__line": 31, "menu_template": "std::map<${1:Key}, ${2:T}> ${3};${0}", "real_name": "map", "action__pattern": "^snippet\\s\\+map$", "menu_abbr": "std::map<${1:Key}, ${2:T}> ${3};${0}"}, "ifndef": {"word": "ifndef", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 1}, "snip": "#ifndef $1\n#define ${1:#:SYMBOL}\n#endif${0}", "menu_template": "#ifndef ... #define ... #endif", "user_data": "{\"snippet_trigger\": \"ifndef\", \"snippet\": \"#ifndef $1\\n#define ${1:#:SYMBOL}\\n#endif${0}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/c.snip", "action__line": 108, "description": "#ifndef $1\n#define ${1:#:SYMBOL}\n#endif${0}", "real_name": "ifndef", "action__pattern": "^snippet\\s\\+ifndef$", "menu_abbr": "#ifndef ... #define ... #endif"}, "todo": {"word": "todo", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "/*! TODO: ${1:Todo description here}\n\t *  \\todo $1\n\t */${0}", "menu_template": "/*! TODO: ${1:Todo description here}  * \\todo $1  */${0}", "user_data": "{\"snippet_trigger\": \"todo\", \"snippet\": \"/*! TODO: ${1:Todo description here}\\n\\t *  \\\\todo $1\\n\\t */${0}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/c.snippets", "action__line": 339, "description": "/*! TODO: ${1:Todo description here}\n\t *  \\todo $1\n\t */${0}", "real_name": "todo", "action__pattern": "^snippet\\s\\+todo$", "menu_abbr": "/*! TODO: ${1:Todo description here}  * \\todo $1  */${0}"}, "dmfun0": {"word": "dmfun0", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "/*! \\brief ${4:Brief function description here}\n\t *\n\t *  ${5:Detailed description}\n\t *\n\t * \\return ${6:Return parameter description}\n\t */\n\t${3:void} ${1:`vim_snippets#Filename('$1', 'ClassName')`}::${2:memberFunction}() {\n\t\t${0}\n\t}", "user_data": "{\"snippet_trigger\": \"dmfun0\", \"snippet\": \"/*! \\\\brief ${4:Brief function description here}\\n\\t *\\n\\t *  ${5:Detailed description}\\n\\t *\\n\\t * \\\\return ${6:Return parameter description}\\n\\t */\\n\\t${3:void} ${1:`vim_snippets#Filename('$1', 'ClassName')`}::${2:memberFunction}() {\\n\\t\\t${0}\\n\\t}\"}", "description": "/*! \\brief ${4:Brief function description here}\n\t *\n\t *  ${5:Detailed description}\n\t *\n\t * \\return ${6:Return parameter description}\n\t */\n\t${3:void} ${1:`vim_snippets#Filename('$1', 'ClassName')`}::${2:memberFunction}() {\n\t\t${0}\n\t}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/cpp.snippets", "action__line": 101, "menu_template": "/*! \\brief ${4:Brief function description here}  *  * ${5:Detailed description}  *  * \\return ${6:Return parameter description}  */  ${3:void} ${1:`vim_snippets#Filename('$1', 'ClassName')`}::${2:memberFunction}() {  ${0}  }", "real_name": "dmfun0", "action__pattern": "^snippet\\s\\+dmfun0$", "menu_abbr": "/*! \\brief ${4:Brief function description here}  *  * ${5:Detailed description}  *  * \\return ${6:Return parameter description}  */  ${3:void} ${1:`vim_snippets#Filename('$1', 'ClassName')`}::${2:memberFunction}() {  ${0}  }"}, "dmfun1": {"word": "dmfun1", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "/*! \\brief ${6:Brief function description here}\n\t *\n\t *  ${7:Detailed description}\n\t *\n\t * \\param $4 ${8:Parameter description}\n\t * \\return ${9:Return parameter description}\n\t */\n\t${5:void} ${1:`vim_snippets#Filename('$1', 'ClassName')`}::${2:memberFunction}(${3:Type} ${4:Parameter}) {\n\t\t${0}\n\t}", "user_data": "{\"snippet_trigger\": \"dmfun1\", \"snippet\": \"/*! \\\\brief ${6:Brief function description here}\\n\\t *\\n\\t *  ${7:Detailed description}\\n\\t *\\n\\t * \\\\param $4 ${8:Parameter description}\\n\\t * \\\\return ${9:Return parameter description}\\n\\t */\\n\\t${5:void} ${1:`vim_snippets#Filename('$1', 'ClassName')`}::${2:memberFunction}(${3:Type} ${4:Parameter}) {\\n\\t\\t${0}\\n\\t}\"}", "description": "/*! \\brief ${6:Brief function description here}\n\t *\n\t *  ${7:Detailed description}\n\t *\n\t * \\param $4 ${8:Parameter description}\n\t * \\return ${9:Return parameter description}\n\t */\n\t${5:void} ${1:`vim_snippets#Filename('$1', 'ClassName')`}::${2:memberFunction}(${3:Type} ${4:Parameter}) {\n\t\t${0}\n\t}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/cpp.snippets", "action__line": 112, "menu_template": "/*! \\brief ${6:Brief function description here}  *  * ${7:Detailed description}  *  * \\param $4 ${8:Parameter description}  * \\return ${9:Return parameter description}  */  ${5:void} ${1:`vim_snippets#Filename('$1', 'ClassName')`}::${2:memberFunction}(${3:Type} ${4:Parameter}) {  ${0}  }", "real_name": "dmfun1", "action__pattern": "^snippet\\s\\+dmfun1$", "menu_abbr": "/*! \\brief ${6:Brief function description here}  *  * ${7:Detailed description}  *  * \\param $4 ${8:Parameter description}  * \\return ${9:Return parameter description}  */  ${5:void} ${1:`vim_snippets#Filename('$1', 'ClassName')`}::${2:memberFunction}(${3:Type} ${4:Parameter}) {  ${0}  }"}, "dmfun2": {"word": "dmfun2", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "/*! \\brief ${8:Brief function description here}\n\t *\n\t *  ${9:Detailed description}\n\t *\n\t * \\param $4 ${10:Parameter description}\n\t * \\param $6 ${11:Parameter description}\n\t * \\return ${12:Return parameter description}\n\t */\n\t${7:void} ${1:`vim_snippets#Filename('$1', 'ClassName')`}::${2:memberFunction}(${3:Type} ${4:Parameter},${5:Type} ${6:Parameter}) {\n\t\t${0}\n\t}", "user_data": "{\"snippet_trigger\": \"dmfun2\", \"snippet\": \"/*! \\\\brief ${8:Brief function description here}\\n\\t *\\n\\t *  ${9:Detailed description}\\n\\t *\\n\\t * \\\\param $4 ${10:Parameter description}\\n\\t * \\\\param $6 ${11:Parameter description}\\n\\t * \\\\return ${12:Return parameter description}\\n\\t */\\n\\t${7:void} ${1:`vim_snippets#Filename('$1', 'ClassName')`}::${2:memberFunction}(${3:Type} ${4:Parameter},${5:Type} ${6:Parameter}) {\\n\\t\\t${0}\\n\\t}\"}", "description": "/*! \\brief ${8:Brief function description here}\n\t *\n\t *  ${9:Detailed description}\n\t *\n\t * \\param $4 ${10:Parameter description}\n\t * \\param $6 ${11:Parameter description}\n\t * \\return ${12:Return parameter description}\n\t */\n\t${7:void} ${1:`vim_snippets#Filename('$1', 'ClassName')`}::${2:memberFunction}(${3:Type} ${4:Parameter},${5:Type} ${6:Parameter}) {\n\t\t${0}\n\t}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/cpp.snippets", "action__line": 124, "menu_template": "/*! \\brief ${8:Brief function description here}  *  * ${9:Detailed description}  *  * \\param $4 ${10:Parameter description}  * \\param $6 ${11:Parameter description}  * \\return ${12:Return parameter description}  */  ${7:void} ${1:`vim_snippets#Filename('$1', 'ClassName')`}::${2:memberFunction}(${3:Type} ${4:Parameter},${5:Type} ${6:Parameter}) {  ${0}  }", "real_name": "dmfun2", "action__pattern": "^snippet\\s\\+dmfun2$", "menu_abbr": "/*! \\brief ${8:Brief function description here}  *  * ${9:Detailed description}  *  * \\param $4 ${10:Parameter description}  * \\param $6 ${11:Parameter description}  * \\return ${12:Return parameter description}  */  ${7:void} ${1:`vim_snippets#Filename('$1', 'ClassName')`}::${2:memberFunction}(${3:Type} ${4:Parameter},${5:Type} ${6:Parameter}) {  ${0}  }"}, "td": {"word": "td", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "typedef ${1:int} ${2:MyCustomType};${0}", "menu_template": "typedef ${1:int} ${2:MyCustomType};${0}", "user_data": "{\"snippet_trigger\": \"td\", \"snippet\": \"typedef ${1:int} ${2:MyCustomType};${0}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/c.snippets", "action__line": 228, "description": "typedef ${1:int} ${2:MyCustomType};${0}", "real_name": "td", "action__pattern": "^snippet\\s\\+td$", "menu_abbr": "typedef ${1:int} ${2:MyCustomType};${0}"}, "tde": {"word": "tde", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "/*! \\enum $2\n\t *\n\t *  ${4:Detailed description}\n\t */\n\ttypedef enum {\n\t\t${1:Data} /*!< ${3:Description} */\n\t} ${2:foo};${0}", "menu_template": "/*! \\enum $2  *  * ${4:Detailed description}  */  typedef enum {  ${1:Data} /*!< ${3:Description} */  } ${2:foo};${0}", "user_data": "{\"snippet_trigger\": \"tde\", \"snippet\": \"/*! \\\\enum $2\\n\\t *\\n\\t *  ${4:Detailed description}\\n\\t */\\n\\ttypedef enum {\\n\\t\\t${1:Data} /*!< ${3:Description} */\\n\\t} ${2:foo};${0}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/c.snippets", "action__line": 258, "description": "/*! \\enum $2\n\t *\n\t *  ${4:Detailed description}\n\t */\n\ttypedef enum {\n\t\t${1:Data} /*!< ${3:Description} */\n\t} ${2:foo};${0}", "real_name": "tde", "action__pattern": "^snippet\\s\\+tde$", "menu_abbr": "/*! \\enum $2  *  * ${4:Detailed description}  */  typedef enum {  ${1:Data} /*!< ${3:Description} */  } ${2:foo};${0}"}, ".": {"word": ".", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "[${1}]${0}", "menu_template": "[${1}]${0}", "user_data": "{\"snippet_trigger\": \".\", \"snippet\": \"[${1}]${0}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/c.snippets", "action__line": 345, "description": "[${1}]${0}", "real_name": ".", "action__pattern": "^snippet\\s\\+.$", "menu_abbr": "[${1}]${0}"}, "fori": {"word": "fori", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "for (int ${2:i} = 0; $2 < ${1:count}; $2${3:++}) {\n\t\t${4}\n\t}", "user_data": "{\"snippet_trigger\": \"fori\", \"snippet\": \"for (int ${2:i} = 0; $2 < ${1:count}; $2${3:++}) {\\n\\t\\t${4}\\n\\t}\"}", "description": "for (int ${2:i} = 0; $2 < ${1:count}; $2${3:++}) {\n\t\t${4}\n\t}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/cpp.snippets", "action__line": 169, "menu_template": "for (int ${2:i} = 0; $2 < ${1:count}; $2${3:++}) {  ${4}  }", "real_name": "fori", "action__pattern": "^snippet\\s\\+fori$", "menu_abbr": "for (int ${2:i} = 0; $2 < ${1:count}; $2${3:++}) {  ${4}  }"}, "cca": {"word": "cca", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "const_cast<${1:unsigned}>(${2:expr})${3}", "user_data": "{\"snippet_trigger\": \"cca\", \"snippet\": \"const_cast<${1:unsigned}>(${2:expr})${3}\"}", "description": "const_cast<${1:unsigned}>(${2:expr})${3}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/cpp.snippets", "action__line": 165, "menu_template": "const_cast<${1:unsigned}>(${2:expr})${3}", "real_name": "cca", "action__pattern": "^snippet\\s\\+cca$", "menu_abbr": "const_cast<${1:unsigned}>(${2:expr})${3}"}, "dca": {"word": "dca", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "dynamic_cast<${1:unsigned}>(${2:expr})${3}", "user_data": "{\"snippet_trigger\": \"dca\", \"snippet\": \"dynamic_cast<${1:unsigned}>(${2:expr})${3}\"}", "description": "dynamic_cast<${1:unsigned}>(${2:expr})${3}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/cpp.snippets", "action__line": 159, "menu_template": "dynamic_cast<${1:unsigned}>(${2:expr})${3}", "real_name": "dca", "action__pattern": "^snippet\\s\\+dca$", "menu_abbr": "dynamic_cast<${1:unsigned}>(${2:expr})${3}"}, "mu": {"word": "mu", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "mutable${0}", "user_data": "{\"snippet_trigger\": \"mu\", \"snippet\": \"mutable${0}\"}", "description": "mutable${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/cpp.snippets", "action__line": 75, "menu_template": "mutable${0}", "real_name": "mu", "action__pattern": "^snippet\\s\\+mu$", "menu_abbr": "mutable${0}"}, "uset": {"word": "uset", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "std::unordered_set<${1:T}> ${2};${0}", "user_data": "{\"snippet_trigger\": \"uset\", \"snippet\": \"std::unordered_set<${1:T}> ${2};${0}\"}", "description": "std::unordered_set<${1:T}> ${2};${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/cpp.snippets", "action__line": 40, "menu_template": "std::unordered_set<${1:T}> ${2};${0}", "real_name": "uset", "action__pattern": "^snippet\\s\\+uset$", "menu_abbr": "std::unordered_set<${1:T}> ${2};${0}"}, "tds": {"word": "tds", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "/*! \\struct $2\n\t *  \\brief ${5:Brief struct description}\n\t *\n\t *  ${6:Detailed description}\n\t */\n\ttypedef struct ${2:_$1 }{\n\t\tm_${3:Data} /*!< ${4:Description} */\n\t} ${1:`vim_snippets#Filename('$1_t', 'name')`};${0}", "menu_template": "/*! \\struct $2  * \\brief ${5:Brief struct description}  *  * ${6:Detailed description}  */  typedef struct ${2:_$1 }{  m_${3:Data} /*!< ${4:Description} */  } ${1:`vim_snippets#Filename('$1_t', 'name')`};${0}", "user_data": "{\"snippet_trigger\": \"tds\", \"snippet\": \"/*! \\\\struct $2\\n\\t *  \\\\brief ${5:Brief struct description}\\n\\t *\\n\\t *  ${6:Detailed description}\\n\\t */\\n\\ttypedef struct ${2:_$1 }{\\n\\t\\tm_${3:Data} /*!< ${4:Description} */\\n\\t} ${1:`vim_snippets#Filename('$1_t', 'name')`};${0}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/c.snippets", "action__line": 241, "description": "/*! \\struct $2\n\t *  \\brief ${5:Brief struct description}\n\t *\n\t *  ${6:Detailed description}\n\t */\n\ttypedef struct ${2:_$1 }{\n\t\tm_${3:Data} /*!< ${4:Description} */\n\t} ${1:`vim_snippets#Filename('$1_t', 'name')`};${0}", "real_name": "tds", "action__pattern": "^snippet\\s\\+tds$", "menu_abbr": "/*! \\struct $2  * \\brief ${5:Brief struct description}  *  * ${6:Detailed description}  */  typedef struct ${2:_$1 }{  m_${3:Data} /*!< ${4:Description} */  } ${1:`vim_snippets#Filename('$1_t', 'name')`};${0}"}, "doxy": {"word": "doxy", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 1}, "snip": "/**\n* @brief    ${1:function description}\n*\n* @details  ${2:detailed description}\n*\n* @param    ${3:param}\n*\n* @return   ${4:return type}\n*/${0}", "menu_template": "/** @brief ...", "user_data": "{\"snippet_trigger\": \"doxy\", \"snippet\": \"/**\\n* @brief    ${1:function description}\\n*\\n* @details  ${2:detailed description}\\n*\\n* @param    ${3:param}\\n*\\n* @return   ${4:return type}\\n*/${0}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/c.snip", "action__line": 174, "description": "/**\n* @brief    ${1:function description}\n*\n* @details  ${2:detailed description}\n*\n* @param    ${3:param}\n*\n* @return   ${4:return type}\n*/${0}", "real_name": "doxy", "action__pattern": "^snippet\\s\\+doxy$", "menu_abbr": "/** @brief ..."}, "struct": {"word": "struct", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 1}, "snip": "struct ${1:#:name} {\n${0:TARGET:data}\n};", "menu_template": "struct {}", "user_data": "{\"snippet_trigger\": \"struct\", \"snippet\": \"struct ${1:#:name} {\\n${0:TARGET:data}\\n};\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/c.snip", "action__line": 67, "description": "struct ${1:#:name} {\n${0:TARGET:data}\n};", "real_name": "struct", "action__pattern": "^snippet\\s\\+struct$", "menu_abbr": "struct {}"}, "else": {"word": "else", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 1}, "snip": "else {\n${0:TARGET}\n}", "menu_template": "else { ${0: } }", "user_data": "{\"snippet_trigger\": \"else\", \"snippet\": \"else {\\n${0:TARGET}\\n}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/c.snip", "action__line": 8, "description": "else {\n${0:TARGET}\n}", "real_name": "else", "action__pattern": "^snippet\\s\\+else$", "menu_abbr": "else { ${0: } }"}, "comment": {"word": "comment", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "/* ${1:#:comment} */\n${0}", "menu_template": "/* ${1:#:comment} */ ${0}", "user_data": "{\"snippet_trigger\": \"comment\", \"snippet\": \"/* ${1:#:comment} */\\n${0}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/c.snip", "action__line": 146, "description": "/* ${1:#:comment} */\n${0}", "real_name": "comment", "action__pattern": "^snippet\\s\\+comment$", "menu_abbr": "/* ${1:#:comment} */ ${0}"}, "el": {"word": "el", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "else {\n\t\t${0:${VISUAL}}\n\t}", "menu_template": "else {  ${0:${VISUAL}}  }", "user_data": "{\"snippet_trigger\": \"el\", \"snippet\": \"else {\\n\\t\\t${0:${VISUAL}}\\n\\t}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/c.snippets", "action__line": 76, "description": "else {\n\t\t${0:${VISUAL}}\n\t}", "real_name": "el", "action__pattern": "^snippet\\s\\+el$", "menu_abbr": "else {  ${0:${VISUAL}}  }"}, "mmap": {"word": "mmap", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "std::multimap<${1:Key}, ${2:T}> ${3};${0}", "user_data": "{\"snippet_trigger\": \"mmap\", \"snippet\": \"std::multimap<${1:Key}, ${2:T}> ${3};${0}\"}", "description": "std::multimap<${1:Key}, ${2:T}> ${3};${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/cpp.snippets", "action__line": 37, "menu_template": "std::multimap<${1:Key}, ${2:T}> ${3};${0}", "real_name": "mmap", "action__pattern": "^snippet\\s\\+mmap$", "menu_abbr": "std::multimap<${1:Key}, ${2:T}> ${3};${0}"}, "prf": {"word": "prf", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "printf(\"${1:} = %f\\n\", $1);${0}", "menu_template": "printf(\"${1:} = %f\\n\", $1);${0}", "user_data": "{\"snippet_trigger\": \"prf\", \"snippet\": \"printf(\\\"${1:} = %f\\\\n\\\", $1);${0}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/c.snippets", "action__line": 276, "description": "printf(\"${1:} = %f\\n\", $1);${0}", "real_name": "prf", "action__pattern": "^snippet\\s\\+prf$", "menu_abbr": "printf(\"${1:} = %f\\n\", $1);${0}"}, "queue": {"word": "queue", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "std::queue<${1:T}> ${2};${0}", "user_data": "{\"snippet_trigger\": \"queue\", \"snippet\": \"std::queue<${1:T}> ${2};${0}\"}", "description": "std::queue<${1:T}> ${2};${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/cpp.snippets", "action__line": 55, "menu_template": "std::queue<${1:T}> ${2};${0}", "real_name": "queue", "action__pattern": "^snippet\\s\\+queue$", "menu_abbr": "std::queue<${1:T}> ${2};${0}"}, "prd": {"word": "prd", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "printf(\"${1:} = %d\\n\", $1);${0}", "menu_template": "printf(\"${1:} = %d\\n\", $1);${0}", "user_data": "{\"snippet_trigger\": \"prd\", \"snippet\": \"printf(\\\"${1:} = %d\\\\n\\\", $1);${0}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/c.snippets", "action__line": 274, "description": "printf(\"${1:} = %d\\n\", $1);${0}", "real_name": "prd", "action__pattern": "^snippet\\s\\+prd$", "menu_abbr": "printf(\"${1:} = %d\\n\", $1);${0}"}, "printf": {"word": "printf", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "printf(\"${1}\\n\", ${2});${0}", "menu_template": "printf(\"...\\n\", ...);", "user_data": "{\"snippet_trigger\": \"printf\", \"snippet\": \"printf(\\\"${1}\\\\n\\\", ${2});${0}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/c.snip", "action__line": 138, "description": "printf(\"${1}\\n\", ${2});${0}", "real_name": "printf", "action__pattern": "^snippet\\s\\+printf$", "menu_abbr": "printf(\"...\\n\", ...);"}, "fopen": {"word": "fopen", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "fopen(\"${1:PATH}\", \"${2:MODE}\");\n${0:TARGET}\nfclose(${3:FD});", "menu_template": "fopen(\"...\", \"...\");", "user_data": "{\"snippet_trigger\": \"fopen\", \"snippet\": \"fopen(\\\"${1:PATH}\\\", \\\"${2:MODE}\\\");\\n${0:TARGET}\\nfclose(${3:FD});\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/c.snip", "action__line": 164, "description": "fopen(\"${1:PATH}\", \"${2:MODE}\");\n${0:TARGET}\nfclose(${3:FD});", "real_name": "fopen", "action__pattern": "^snippet\\s\\+fopen$", "menu_abbr": "fopen(\"...\", \"...\");"}, "fun0": {"word": "fun0", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "${1:void} ${2:function_name}()\n\t{\n\t\t${3}\n\t}", "menu_template": "${1:void} ${2:function_name}()  {  ${3}  }", "user_data": "{\"snippet_trigger\": \"fun0\", \"snippet\": \"${1:void} ${2:function_name}()\\n\\t{\\n\\t\\t${3}\\n\\t}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/c.snippets", "action__line": 145, "description": "${1:void} ${2:function_name}()\n\t{\n\t\t${3}\n\t}", "real_name": "fun0", "action__pattern": "^snippet\\s\\+fun0$", "menu_abbr": "${1:void} ${2:function_name}()  {  ${3}  }"}, "fun1": {"word": "fun1", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "${1:void} ${2:function_name}(${3:Type} ${4:Parameter})\n\t{\n\t\t${5}\n\t}", "menu_template": "${1:void} ${2:function_name}(${3:Type} ${4:Parameter})  {  ${5}  }", "user_data": "{\"snippet_trigger\": \"fun1\", \"snippet\": \"${1:void} ${2:function_name}(${3:Type} ${4:Parameter})\\n\\t{\\n\\t\\t${5}\\n\\t}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/c.snippets", "action__line": 163, "description": "${1:void} ${2:function_name}(${3:Type} ${4:Parameter})\n\t{\n\t\t${5}\n\t}", "real_name": "fun1", "action__pattern": "^snippet\\s\\+fun1$", "menu_abbr": "${1:void} ${2:function_name}(${3:Type} ${4:Parameter})  {  ${5}  }"}, "fun2": {"word": "fun2", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "${1:void} ${2:function_name}(${3:Type} ${4:Parameter}, ${5:Type} ${6:Parameter})\n\t{\n\t\t${7}\n\t}", "menu_template": "${1:void} ${2:function_name}(${3:Type} ${4:Parameter}, ${5:Type} ${6:Parameter})  {  ${7}  }", "user_data": "{\"snippet_trigger\": \"fun2\", \"snippet\": \"${1:void} ${2:function_name}(${3:Type} ${4:Parameter}, ${5:Type} ${6:Parameter})\\n\\t{\\n\\t\\t${7}\\n\\t}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/c.snippets", "action__line": 182, "description": "${1:void} ${2:function_name}(${3:Type} ${4:Parameter}, ${5:Type} ${6:Parameter})\n\t{\n\t\t${7}\n\t}", "real_name": "fun2", "action__pattern": "^snippet\\s\\+fun2$", "menu_abbr": "${1:void} ${2:function_name}(${3:Type} ${4:Parameter}, ${5:Type} ${6:Parameter})  {  ${7}  }"}, "fun3": {"word": "fun3", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "${1:void} ${2:function_name}(${3:Type} ${4:Parameter}, ${5:Type} ${6:Parameter}, ${7:Type} ${8:Parameter})\n\t{\n\t\t${9}\n\t}", "menu_template": "${1:void} ${2:function_name}(${3:Type} ${4:Parameter}, ${5:Type} ${6:Parameter}, ${7:Type} ${8:Parameter})  {  ${9}  }", "user_data": "{\"snippet_trigger\": \"fun3\", \"snippet\": \"${1:void} ${2:function_name}(${3:Type} ${4:Parameter}, ${5:Type} ${6:Parameter}, ${7:Type} ${8:Parameter})\\n\\t{\\n\\t\\t${9}\\n\\t}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/c.snippets", "action__line": 202, "description": "${1:void} ${2:function_name}(${3:Type} ${4:Parameter}, ${5:Type} ${6:Parameter}, ${7:Type} ${8:Parameter})\n\t{\n\t\t${9}\n\t}", "real_name": "fun3", "action__pattern": "^snippet\\s\\+fun3$", "menu_abbr": "${1:void} ${2:function_name}(${3:Type} ${4:Parameter}, ${5:Type} ${6:Parameter}, ${7:Type} ${8:Parameter})  {  ${9}  }"}, "pro": {"word": "pro", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "protected${0}", "user_data": "{\"snippet_trigger\": \"pro\", \"snippet\": \"protected${0}\"}", "description": "protected${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/cpp.snippets", "action__line": 66, "menu_template": "protected${0}", "real_name": "pro", "action__pattern": "^snippet\\s\\+pro$", "menu_abbr": "protected${0}"}, "do_while": {"word": "do_while", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 1}, "snip": "do {\n${0:TARGET:code}\n} while (${1:#:condition});", "menu_template": "do { ${0: :code} } while (${1:#:condition});", "user_data": "{\"snippet_trigger\": \"do_while\", \"snippet\": \"do {\\n${0:TARGET:code}\\n} while (${1:#:condition});\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/c.snip", "action__line": 43, "description": "do {\n${0:TARGET:code}\n} while (${1:#:condition});", "real_name": "do_while", "action__pattern": "^snippet\\s\\+do_while$", "menu_abbr": "do { ${0: :code} } while (${1:#:condition});"}, "inc2": {"word": "inc2", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 1}, "snip": "#include \"${1}.h\"${0}", "menu_template": "#include \"${1}.h\"${0}", "user_data": "{\"snippet_trigger\": \"inc2\", \"snippet\": \"#include \\\"${1}.h\\\"${0}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/c.snip", "action__line": 103, "description": "#include \"${1}.h\"${0}", "real_name": "inc2", "action__pattern": "^snippet\\s\\+inc2$", "menu_abbr": "#include \"${1}.h\"${0}"}, "wh": {"word": "wh", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "while (${1:/* condition */}) {\n\t\t${0:${VISUAL}}\n\t}", "menu_template": "while (${1:/* condition */}) {  ${0:${VISUAL}}  }", "user_data": "{\"snippet_trigger\": \"wh\", \"snippet\": \"while (${1:/* condition */}) {\\n\\t\\t${0:${VISUAL}}\\n\\t}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/c.snippets", "action__line": 127, "description": "while (${1:/* condition */}) {\n\t\t${0:${VISUAL}}\n\t}", "real_name": "wh", "action__pattern": "^snippet\\s\\+wh$", "menu_abbr": "while (${1:/* condition */}) {  ${0:${VISUAL}}  }"}, "nocxx": {"word": "nocxx", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "#ifdef __cplusplus\n\textern \"C\" {\n\t#endif\n\n\t${0}\n\n\t#ifdef __cplusplus\n\t} /* extern \"C\" */\n\t#endif", "menu_template": "#ifdef __cplusplus  extern \"C\" {  #endif   ${0}   #ifdef __cplusplus  } /* extern \"C\" */  #endif", "user_data": "{\"snippet_trigger\": \"nocxx\", \"snippet\": \"#ifdef __cplusplus\\n\\textern \\\"C\\\" {\\n\\t#endif\\n\\n\\t${0}\\n\\n\\t#ifdef __cplusplus\\n\\t} /* extern \\\"C\\\" */\\n\\t#endif\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/c.snippets", "action__line": 52, "description": "#ifdef __cplusplus\n\textern \"C\" {\n\t#endif\n\n\t${0}\n\n\t#ifdef __cplusplus\n\t} /* extern \"C\" */\n\t#endif", "real_name": "nocxx", "action__pattern": "^snippet\\s\\+nocxx$", "menu_abbr": "#ifdef __cplusplus  extern \"C\" {  #endif   ${0}   #ifdef __cplusplus  } /* extern \"C\" */  #endif"}, "typedef": {"word": "typedef", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "typedef ${1:#:base_type} ${2:#:custom_type};${0}", "menu_template": "typedef ${1:#:base_type} ${2:#:custom_type};${0}", "user_data": "{\"snippet_trigger\": \"typedef\", \"snippet\": \"typedef ${1:#:base_type} ${2:#:custom_type};${0}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/c.snip", "action__line": 135, "description": "typedef ${1:#:base_type} ${2:#:custom_type};${0}", "real_name": "typedef", "action__pattern": "^snippet\\s\\+typedef$", "menu_abbr": "typedef ${1:#:base_type} ${2:#:custom_type};${0}"}, "prx": {"word": "prx", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "printf(\"${1:} = %${2}\\n\", $1);${0}", "menu_template": "printf(\"${1:} = %${2}\\n\", $1);${0}", "user_data": "{\"snippet_trigger\": \"prx\", \"snippet\": \"printf(\\\"${1:} = %${2}\\\\n\\\", $1);${0}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/c.snippets", "action__line": 278, "description": "printf(\"${1:} = %${2}\\n\", $1);${0}", "real_name": "prx", "action__pattern": "^snippet\\s\\+prx$", "menu_abbr": "printf(\"${1:} = %${2}\\n\", $1);${0}"}, "af": {"word": "af", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "auto ${1:name}(${2}) -> ${3:void}\n\t{\n\t\t${0}\n\t};", "user_data": "{\"snippet_trigger\": \"af\", \"snippet\": \"auto ${1:name}(${2}) -> ${3:void}\\n\\t{\\n\\t\\t${0}\\n\\t};\"}", "description": "auto ${1:name}(${2}) -> ${3:void}\n\t{\n\t\t${0}\n\t};", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/cpp.snippets", "action__line": 207, "menu_template": "auto function", "real_name": "af", "action__pattern": "^snippet\\s\\+af$", "menu_abbr": "auto function"}, "fprintf": {"word": "fprintf", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "fprintf(${1:stderr}, \"${2}\\n\"${3});${0}", "menu_template": "fprintf(..., \"...\\n\", ...);", "user_data": "{\"snippet_trigger\": \"fprintf\", \"snippet\": \"fprintf(${1:stderr}, \\\"${2}\\\\n\\\"${3});${0}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/c.snip", "action__line": 142, "description": "fprintf(${1:stderr}, \"${2}\\n\"${3});${0}", "real_name": "fprintf", "action__pattern": "^snippet\\s\\+fprintf$", "menu_abbr": "fprintf(..., \"...\\n\", ...);"}, "getopt": {"word": "getopt", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "int choice;\n\twhile (1)\n\t{\n\t\tstatic struct option long_options[] =\n\t\t{\n\t\t\t/* Use flags like so:\n\t\t\t{\"verbose\",\tno_argument,\t&verbose_flag, 'V'}*/\n\t\t\t/* Argument styles: no_argument, required_argument, optional_argument */\n\t\t\t{\"version\", no_argument,\t0,\t'v'},\n\t\t\t{\"help\",\tno_argument,\t0,\t'h'},\n\t\t\t${1}\n\t\t\t{0,0,0,0}\n\t\t};\n\n\t\tint option_index = 0;\n\n\t\t/* Argument parameters:\n\t\t\tno_argument: \" \"\n\t\t\trequired_argument: \":\"\n\t\t\toptional_argument: \"::\" */\n\n\t\tchoice = getopt_long( argc, argv, \"vh\",\n\t\t\t\t\tlong_options, &option_index);\n\n\t\tif (choice == -1)\n\t\t\tbreak;\n\n\t\tswitch( choice )\n\t\t{\n\t\t\tcase 'v':\n\t\t\t\t${2}\n\t\t\t\tbreak;\n\n\t\t\tcase 'h':\n\t\t\t\t${3}\n\t\t\t\tbreak;\n\n\t\t\tcase '?':\n\t\t\t\t/* getopt_long will have already printed an error */\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\t/* Not sure how to get here... */\n\t\t\t\treturn EXIT_FAILURE;\n\t\t}\n\t}\n\n\t/* Deal with non-option arguments here */\n\tif ( optind < argc )\n\t{\n\t\twhile ( optind < argc )\n\t\t{\n\t\t\t${0}\n\t\t}\n\t}", "menu_template": "int choice;  while (1)  {  static struct option long_options[] =  {  /* Use flags like so:  {\"verbose\", no_argument, &verbose_flag, 'V'}*/  /* Argument styles: no_argument, required_argument, optional_argument */  {\"version\", no_argument, 0, 'v'},  {\"help\", no_argument, 0, 'h'},  ${1}  {0,0,0,0}  };   int option_index = 0;   /* Argument parameters:  no_argument: \" \"  required_argument: \":\"  optional_argument: \"::\" */   choice = getopt_long( argc, argv, \"vh\",  long_options, &option_index);   if (choice == -1)  break;   switch( choice )  {  case 'v':  ${2}  break;   case 'h':  ${3}  break;   case '?':  /* getopt_long will have already printed an error */  break;   default:  /* Not sure how to get here... */  return EXIT_FAILURE;  }  }   /* Deal with non-option arguments here */  if ( optind < argc )  {  while ( optind < argc )  {  ${0}  }  }", "user_data": "{\"snippet_trigger\": \"getopt\", \"snippet\": \"int choice;\\n\\twhile (1)\\n\\t{\\n\\t\\tstatic struct option long_options[] =\\n\\t\\t{\\n\\t\\t\\t/* Use flags like so:\\n\\t\\t\\t{\\\"verbose\\\",\\tno_argument,\\t&verbose_flag, 'V'}*/\\n\\t\\t\\t/* Argument styles: no_argument, required_argument, optional_argument */\\n\\t\\t\\t{\\\"version\\\", no_argument,\\t0,\\t'v'},\\n\\t\\t\\t{\\\"help\\\",\\tno_argument,\\t0,\\t'h'},\\n\\t\\t\\t${1}\\n\\t\\t\\t{0,0,0,0}\\n\\t\\t};\\n\\n\\t\\tint option_index = 0;\\n\\n\\t\\t/* Argument parameters:\\n\\t\\t\\tno_argument: \\\" \\\"\\n\\t\\t\\trequired_argument: \\\":\\\"\\n\\t\\t\\toptional_argument: \\\"::\\\" */\\n\\n\\t\\tchoice = getopt_long( argc, argv, \\\"vh\\\",\\n\\t\\t\\t\\t\\tlong_options, &option_index);\\n\\n\\t\\tif (choice == -1)\\n\\t\\t\\tbreak;\\n\\n\\t\\tswitch( choice )\\n\\t\\t{\\n\\t\\t\\tcase 'v':\\n\\t\\t\\t\\t${2}\\n\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\tcase 'h':\\n\\t\\t\\t\\t${3}\\n\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\tcase '?':\\n\\t\\t\\t\\t/* getopt_long will have already printed an error */\\n\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\tdefault:\\n\\t\\t\\t\\t/* Not sure how to get here... */\\n\\t\\t\\t\\treturn EXIT_FAILURE;\\n\\t\\t}\\n\\t}\\n\\n\\t/* Deal with non-option arguments here */\\n\\tif ( optind < argc )\\n\\t{\\n\\t\\twhile ( optind < argc )\\n\\t\\t{\\n\\t\\t\\t${0}\\n\\t\\t}\\n\\t}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/c.snippets", "action__line": 281, "description": "int choice;\n\twhile (1)\n\t{\n\t\tstatic struct option long_options[] =\n\t\t{\n\t\t\t/* Use flags like so:\n\t\t\t{\"verbose\",\tno_argument,\t&verbose_flag, 'V'}*/\n\t\t\t/* Argument styles: no_argument, required_argument, optional_argument */\n\t\t\t{\"version\", no_argument,\t0,\t'v'},\n\t\t\t{\"help\",\tno_argument,\t0,\t'h'},\n\t\t\t${1}\n\t\t\t{0,0,0,0}\n\t\t};\n\n\t\tint option_index = 0;\n\n\t\t/* Argument parameters:\n\t\t\tno_argument: \" \"\n\t\t\trequired_argument: \":\"\n\t\t\toptional_argument: \"::\" */\n\n\t\tchoice = getopt_long( argc, argv, \"vh\",\n\t\t\t\t\tlong_options, &option_index);\n\n\t\tif (choice == -1)\n\t\t\tbreak;\n\n\t\tswitch( choice )\n\t\t{\n\t\t\tcase 'v':\n\t\t\t\t${2}\n\t\t\t\tbreak;\n\n\t\t\tcase 'h':\n\t\t\t\t${3}\n\t\t\t\tbreak;\n\n\t\t\tcase '?':\n\t\t\t\t/* getopt_long will have already printed an error */\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\t/* Not sure how to get here... */\n\t\t\t\treturn EXIT_FAILURE;\n\t\t}\n\t}\n\n\t/* Deal with non-option arguments here */\n\tif ( optind < argc )\n\t{\n\t\twhile ( optind < argc )\n\t\t{\n\t\t\t${0}\n\t\t}\n\t}", "real_name": "getopt", "action__pattern": "^snippet\\s\\+getopt$", "menu_abbr": "int choice;  while (1)  {  static struct option long_options[] =  {  /* Use flags like so:  {\"verbose\", no_argument, &verbose_flag, 'V'}*/  /* Argument styles: no_argument, required_argument, optional_argument */  {\"version\", no_argument, 0, 'v'},  {\"help\", no_argument, 0, 'h'},  ${1}  {0,0,0,0}  };   int option_index = 0;   /* Argument parameters:  no_argument: \" \"  required_argument: \":\"  optional_argument: \"::\" */   choice = getopt_long( argc, argv, \"vh\",  long_options, &option_index);   if (choice == -1)  break;   switch( choice )  {  case 'v':  ${2}  break;   case 'h':  ${3}  break;   case '?':  /* getopt_long will have already printed an error */  break;   default:  /* Not sure how to get here... */  return EXIT_FAILURE;  }  }   /* Deal with non-option arguments here */  if ( optind < argc )  {  while ( optind < argc )  {  ${0}  }  }"}, "ifdef": {"word": "ifdef", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "#ifdef ${1:FOO}\n\t\t${2:#define }\n\t#endif${0}", "menu_template": "#ifdef ${1:FOO}  ${2:#define }  #endif${0}", "user_data": "{\"snippet_trigger\": \"ifdef\", \"snippet\": \"#ifdef ${1:FOO}\\n\\t\\t${2:#define }\\n\\t#endif${0}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/c.snippets", "action__line": 33, "description": "#ifdef ${1:FOO}\n\t\t${2:#define }\n\t#endif${0}", "real_name": "ifdef", "action__pattern": "^snippet\\s\\+ifdef$", "menu_abbr": "#ifdef ${1:FOO}  ${2:#define }  #endif${0}"}, "cout": {"word": "cout", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "std::cout << ${1} << std::endl;${0}", "user_data": "{\"snippet_trigger\": \"cout\", \"snippet\": \"std::cout << ${1} << std::endl;${0}\"}", "description": "std::cout << ${1} << std::endl;${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/cpp.snippets", "action__line": 148, "menu_template": "std::cout << ${1} << std::endl;${0}", "real_name": "cout", "action__pattern": "^snippet\\s\\+cout$", "menu_abbr": "std::cout << ${1} << std::endl;${0}"}, "deque": {"word": "deque", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "std::deque<${1:T}> ${2};${0}", "user_data": "{\"snippet_trigger\": \"deque\", \"snippet\": \"std::deque<${1:T}> ${2};${0}\"}", "description": "std::deque<${1:T}> ${2};${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/cpp.snippets", "action__line": 19, "menu_template": "std::deque<${1:T}> ${2};${0}", "real_name": "deque", "action__pattern": "^snippet\\s\\+deque$", "menu_abbr": "std::deque<${1:T}> ${2};${0}"}, "rca": {"word": "rca", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "reinterpret_cast<${1:unsigned}>(${2:expr})${3}", "user_data": "{\"snippet_trigger\": \"rca\", \"snippet\": \"reinterpret_cast<${1:unsigned}>(${2:expr})${3}\"}", "description": "reinterpret_cast<${1:unsigned}>(${2:expr})${3}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/cpp.snippets", "action__line": 162, "menu_template": "reinterpret_cast<${1:unsigned}>(${2:expr})${3}", "real_name": "rca", "action__pattern": "^snippet\\s\\+rca$", "menu_abbr": "reinterpret_cast<${1:unsigned}>(${2:expr})${3}"}, "#include": {"word": "#include", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 1}, "snip": "#include <${1:stdio}.h>${0}", "menu_template": "#include <${1:stdio}.h>${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/c.snip", "action__line": 98, "user_data": "{\"snippet_trigger\": \"inc\", \"snippet\": \"#include <${1:stdio}.h>${0}\"}", "menu_abbr": "#include <${1:stdio}.h>${0}", "real_name": "inc", "description": "#include <${1:stdio}.h>${0}", "action__pattern": "^snippet\\s\\+inc$"}, "t": {"word": "t", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "${1:/* condition */} ? ${2:a} : ${3:b}", "menu_template": "${1:/* condition */} ? ${2:a} : ${3:b}", "user_data": "{\"snippet_trigger\": \"t\", \"snippet\": \"${1:/* condition */} ? ${2:a} : ${3:b}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/c.snippets", "action__line": 89, "description": "${1:/* condition */} ? ${2:a} : ${3:b}", "real_name": "t", "action__pattern": "^snippet\\s\\+t$", "menu_abbr": "${1:/* condition */} ? ${2:a} : ${3:b}"}, "dfun0": {"word": "dfun0", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "/*! \\brief ${1:Brief function description here}\n\t *\n\t *  ${2:Detailed description of the function}\n\t *\n\t * \\return ${3:Return parameter description}\n\t */\n\t${4:void} ${5:function_name}()\n\t{\n\t\t${6}\n\t}", "menu_template": "/*! \\brief ${1:Brief function description here}  *  * ${2:Detailed description of the function}  *  * \\return ${3:Return parameter description}  */  ${4:void} ${5:function_name}()  {  ${6}  }", "user_data": "{\"snippet_trigger\": \"dfun0\", \"snippet\": \"/*! \\\\brief ${1:Brief function description here}\\n\\t *\\n\\t *  ${2:Detailed description of the function}\\n\\t *\\n\\t * \\\\return ${3:Return parameter description}\\n\\t */\\n\\t${4:void} ${5:function_name}()\\n\\t{\\n\\t\\t${6}\\n\\t}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/c.snippets", "action__line": 151, "description": "/*! \\brief ${1:Brief function description here}\n\t *\n\t *  ${2:Detailed description of the function}\n\t *\n\t * \\return ${3:Return parameter description}\n\t */\n\t${4:void} ${5:function_name}()\n\t{\n\t\t${6}\n\t}", "real_name": "dfun0", "action__pattern": "^snippet\\s\\+dfun0$", "menu_abbr": "/*! \\brief ${1:Brief function description here}  *  * ${2:Detailed description of the function}  *  * \\return ${3:Return parameter description}  */  ${4:void} ${5:function_name}()  {  ${6}  }"}, "dfun1": {"word": "dfun1", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "/*! \\brief ${1:Brief function description here}\n\t *\n\t *  ${2:Detailed description of the function}\n\t *\n\t * \\param $3 ${4:Parameter description}\n\t * \\return ${5:Return parameter description}\n\t */\n\t${6:void} ${7:function_name}(${8:Type} ${3:Parameter})\n\t{\n\t\t${9}\n\t}", "menu_template": "/*! \\brief ${1:Brief function description here}  *  * ${2:Detailed description of the function}  *  * \\param $3 ${4:Parameter description}  * \\return ${5:Return parameter description}  */  ${6:void} ${7:function_name}(${8:Type} ${3:Parameter})  {  ${9}  }", "user_data": "{\"snippet_trigger\": \"dfun1\", \"snippet\": \"/*! \\\\brief ${1:Brief function description here}\\n\\t *\\n\\t *  ${2:Detailed description of the function}\\n\\t *\\n\\t * \\\\param $3 ${4:Parameter description}\\n\\t * \\\\return ${5:Return parameter description}\\n\\t */\\n\\t${6:void} ${7:function_name}(${8:Type} ${3:Parameter})\\n\\t{\\n\\t\\t${9}\\n\\t}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/c.snippets", "action__line": 169, "description": "/*! \\brief ${1:Brief function description here}\n\t *\n\t *  ${2:Detailed description of the function}\n\t *\n\t * \\param $3 ${4:Parameter description}\n\t * \\return ${5:Return parameter description}\n\t */\n\t${6:void} ${7:function_name}(${8:Type} ${3:Parameter})\n\t{\n\t\t${9}\n\t}", "real_name": "dfun1", "action__pattern": "^snippet\\s\\+dfun1$", "menu_abbr": "/*! \\brief ${1:Brief function description here}  *  * ${2:Detailed description of the function}  *  * \\param $3 ${4:Parameter description}  * \\return ${5:Return parameter description}  */  ${6:void} ${7:function_name}(${8:Type} ${3:Parameter})  {  ${9}  }"}, "dfun2": {"word": "dfun2", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "/*! \\brief ${1:Brief function description here}\n\t *\n\t *  ${2:Detailed description of the function}\n\t *\n\t * \\param $3 ${4:Parameter description}\n\t * \\param $5 ${6:Parameter description}\n\t * \\return ${7:Return parameter description}\n\t */\n\t${8:void} ${9:function_name}(${10:Type} ${3:Parameter}, ${11:Type} ${5:Parameter})\n\t{\n\t\t${12}\n\t}", "menu_template": "/*! \\brief ${1:Brief function description here}  *  * ${2:Detailed description of the function}  *  * \\param $3 ${4:Parameter description}  * \\param $5 ${6:Parameter description}  * \\return ${7:Return parameter description}  */  ${8:void} ${9:function_name}(${10:Type} ${3:Parameter}, ${11:Type} ${5:Parameter})  {  ${12}  }", "user_data": "{\"snippet_trigger\": \"dfun2\", \"snippet\": \"/*! \\\\brief ${1:Brief function description here}\\n\\t *\\n\\t *  ${2:Detailed description of the function}\\n\\t *\\n\\t * \\\\param $3 ${4:Parameter description}\\n\\t * \\\\param $5 ${6:Parameter description}\\n\\t * \\\\return ${7:Return parameter description}\\n\\t */\\n\\t${8:void} ${9:function_name}(${10:Type} ${3:Parameter}, ${11:Type} ${5:Parameter})\\n\\t{\\n\\t\\t${12}\\n\\t}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/c.snippets", "action__line": 188, "description": "/*! \\brief ${1:Brief function description here}\n\t *\n\t *  ${2:Detailed description of the function}\n\t *\n\t * \\param $3 ${4:Parameter description}\n\t * \\param $5 ${6:Parameter description}\n\t * \\return ${7:Return parameter description}\n\t */\n\t${8:void} ${9:function_name}(${10:Type} ${3:Parameter}, ${11:Type} ${5:Parameter})\n\t{\n\t\t${12}\n\t}", "real_name": "dfun2", "action__pattern": "^snippet\\s\\+dfun2$", "menu_abbr": "/*! \\brief ${1:Brief function description here}  *  * ${2:Detailed description of the function}  *  * \\param $3 ${4:Parameter description}  * \\param $5 ${6:Parameter description}  * \\return ${7:Return parameter description}  */  ${8:void} ${9:function_name}(${10:Type} ${3:Parameter}, ${11:Type} ${5:Parameter})  {  ${12}  }"}, "dfun3": {"word": "dfun3", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "/*! \\brief ${1:Brief function description here}\n\t *\n\t *  ${2:Detailed description of the function}\n\t *\n\t * \\param $3 ${4:Parameter description}\n\t * \\param $5 ${6:Parameter description}\n\t * \\param $7 ${8:Parameter description}\n\t * \\return ${9:Return parameter description}\n\t */\n\t${10:void} ${11:function_name}(${12:Type} ${3:Parameter}, ${13:Type} ${5:Parameter}, ${14:Type} ${7:Parameter})\n\t{\n\t\t${15}\n\t}", "menu_template": "/*! \\brief ${1:Brief function description here}  *  * ${2:Detailed description of the function}  *  * \\param $3 ${4:Parameter description}  * \\param $5 ${6:Parameter description}  * \\param $7 ${8:Parameter description}  * \\return ${9:Return parameter description}  */  ${10:void} ${11:function_name}(${12:Type} ${3:Parameter}, ${13:Type} ${5:Parameter}, ${14:Type} ${7:Parameter})  {  ${15}  }", "user_data": "{\"snippet_trigger\": \"dfun3\", \"snippet\": \"/*! \\\\brief ${1:Brief function description here}\\n\\t *\\n\\t *  ${2:Detailed description of the function}\\n\\t *\\n\\t * \\\\param $3 ${4:Parameter description}\\n\\t * \\\\param $5 ${6:Parameter description}\\n\\t * \\\\param $7 ${8:Parameter description}\\n\\t * \\\\return ${9:Return parameter description}\\n\\t */\\n\\t${10:void} ${11:function_name}(${12:Type} ${3:Parameter}, ${13:Type} ${5:Parameter}, ${14:Type} ${7:Parameter})\\n\\t{\\n\\t\\t${15}\\n\\t}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/c.snippets", "action__line": 208, "description": "/*! \\brief ${1:Brief function description here}\n\t *\n\t *  ${2:Detailed description of the function}\n\t *\n\t * \\param $3 ${4:Parameter description}\n\t * \\param $5 ${6:Parameter description}\n\t * \\param $7 ${8:Parameter description}\n\t * \\return ${9:Return parameter description}\n\t */\n\t${10:void} ${11:function_name}(${12:Type} ${3:Parameter}, ${13:Type} ${5:Parameter}, ${14:Type} ${7:Parameter})\n\t{\n\t\t${15}\n\t}", "real_name": "dfun3", "action__pattern": "^snippet\\s\\+dfun3$", "menu_abbr": "/*! \\brief ${1:Brief function description here}  *  * ${2:Detailed description of the function}  *  * \\param $3 ${4:Parameter description}  * \\param $5 ${6:Parameter description}  * \\param $7 ${8:Parameter description}  * \\return ${9:Return parameter description}  */  ${10:void} ${11:function_name}(${12:Type} ${3:Parameter}, ${13:Type} ${5:Parameter}, ${14:Type} ${7:Parameter})  {  ${15}  }"}, "ndef": {"word": "ndef", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "#ifndef $1\n\t#define ${1:SYMBOL} ${2:value}\n\t#endif /* ifndef $1 */${0}", "menu_template": "#ifndef $1  #define ${1:SYMBOL} ${2:value}  #endif /* ifndef $1 */${0}", "user_data": "{\"snippet_trigger\": \"ndef\", \"snippet\": \"#ifndef $1\\n\\t#define ${1:SYMBOL} ${2:value}\\n\\t#endif /* ifndef $1 */${0}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/c.snippets", "action__line": 25, "description": "#ifndef $1\n\t#define ${1:SYMBOL} ${2:value}\n\t#endif /* ifndef $1 */${0}", "real_name": "ndef", "action__pattern": "^snippet\\s\\+ndef$", "menu_abbr": "#ifndef $1  #define ${1:SYMBOL} ${2:value}  #endif /* ifndef $1 */${0}"}, "#def": {"word": "#def", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 1}, "snip": "#define ${0}", "menu_template": "#define ${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/c.snip", "action__line": 116, "user_data": "{\"snippet_trigger\": \"def\", \"snippet\": \"#define ${0}\"}", "menu_abbr": "#define ${0}", "real_name": "def", "description": "#define ${0}", "action__pattern": "^snippet\\s\\+def$"}, "pub": {"word": "pub", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "public${0}", "user_data": "{\"snippet_trigger\": \"pub\", \"snippet\": \"public${0}\"}", "description": "public${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/cpp.snippets", "action__line": 69, "menu_template": "public${0}", "real_name": "pub", "action__pattern": "^snippet\\s\\+pub$", "menu_abbr": "public${0}"}, "binc": {"word": "binc", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "#include <boost/${1:shared_ptr}.hpp>${0}", "user_data": "{\"snippet_trigger\": \"binc\", \"snippet\": \"#include <boost/${1:shared_ptr}.hpp>${0}\"}", "description": "#include <boost/${1:shared_ptr}.hpp>${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/cpp.snippets", "action__line": 8, "menu_template": "#include <boost/${1:shared_ptr}.hpp>${0}", "real_name": "binc", "action__pattern": "^snippet\\s\\+binc$", "menu_abbr": "#include <boost/${1:shared_ptr}.hpp>${0}"}, "#if": {"word": "#if", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "#if ${1:FOO}\n\t\t${0:${VISUAL}}\n\t#endif", "menu_template": "#if ${1:FOO}  ${0:${VISUAL}}  #endif", "user_data": "{\"snippet_trigger\": \"#if\", \"snippet\": \"#if ${1:FOO}\\n\\t\\t${0:${VISUAL}}\\n\\t#endif\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/c.snippets", "action__line": 38, "description": "#if ${1:FOO}\n\t\t${0:${VISUAL}}\n\t#endif", "real_name": "#if", "action__pattern": "^snippet\\s\\+#if$", "menu_abbr": "#if ${1:FOO}  ${0:${VISUAL}}  #endif"}, "incc": {"word": "incc", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "#include <${1:iostream}>${0}", "user_data": "{\"snippet_trigger\": \"incc\", \"snippet\": \"#include <${1:iostream}>${0}\"}", "description": "#include <${1:iostream}>${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/cpp.snippets", "action__line": 6, "menu_template": "#include <${1:iostream}>${0}", "real_name": "incc", "action__pattern": "^snippet\\s\\+incc$", "menu_abbr": "#include <${1:iostream}>${0}"}, "func": {"word": "func", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 1}, "snip": "${1:void} ${2:#:func_name}(${3:#:args}) {\n${0:TARGET}\n}", "menu_template": "func() {}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/c.snip", "action__line": 59, "user_data": "{\"snippet_trigger\": \"function\", \"snippet\": \"${1:void} ${2:#:func_name}(${3:#:args}) {\\n${0:TARGET}\\n}\"}", "menu_abbr": "func() {}", "real_name": "function", "description": "${1:void} ${2:#:func_name}(${3:#:args}) {\n${0:TARGET}\n}", "action__pattern": "^snippet\\s\\+function$"}, "fund": {"word": "fund", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "${1:void} ${2:function_name}(${3});${0}", "menu_template": "${1:void} ${2:function_name}(${3});${0}", "user_data": "{\"snippet_trigger\": \"fund\", \"snippet\": \"${1:void} ${2:function_name}(${3});${0}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/c.snippets", "action__line": 223, "description": "${1:void} ${2:function_name}(${3});${0}", "real_name": "fund", "action__pattern": "^snippet\\s\\+fund$", "menu_abbr": "${1:void} ${2:function_name}(${3});${0}"}, "#inc": {"word": "#inc", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 1}, "snip": "#include <${1:stdio}.h>${0}", "menu_template": "#include <${1:stdio}.h>${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/c.snip", "action__line": 98, "user_data": "{\"snippet_trigger\": \"inc\", \"snippet\": \"#include <${1:stdio}.h>${0}\"}", "menu_abbr": "#include <${1:stdio}.h>${0}", "real_name": "inc", "description": "#include <${1:stdio}.h>${0}", "action__pattern": "^snippet\\s\\+inc$"}, "helloworld": {"word": "helloworld", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 1}, "snip": "#include <stdio.h>\nint main(int argc, char const* argv[])\n{\nputs(\"hello, world!\");\nreturn 0;\n}${0}", "menu_template": "#include <stdio.h> int main(int argc, char const* argv[]) { puts(\"hello, world!\"); return 0; }${0}", "user_data": "{\"snippet_trigger\": \"helloworld\", \"snippet\": \"#include <stdio.h>\\nint main(int argc, char const* argv[])\\n{\\nputs(\\\"hello, world!\\\");\\nreturn 0;\\n}${0}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/c.snip", "action__line": 155, "description": "#include <stdio.h>\nint main(int argc, char const* argv[])\n{\nputs(\"hello, world!\");\nreturn 0;\n}${0}", "real_name": "helloworld", "action__pattern": "^snippet\\s\\+helloworld$", "menu_abbr": "#include <stdio.h> int main(int argc, char const* argv[]) { puts(\"hello, world!\"); return 0; }${0}"}, "lld": {"word": "lld", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "[${1}](${2}){\n\t\t${3}\n\t};${0}", "user_data": "{\"snippet_trigger\": \"lld\", \"snippet\": \"[${1}](${2}){\\n\\t\\t${3}\\n\\t};${0}\"}", "description": "[${1}](${2}){\n\t\t${3}\n\t};${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/cpp.snippets", "action__line": 196, "menu_template": "[${1}](${2}){  ${3}  };${0}", "real_name": "lld", "action__pattern": "^snippet\\s\\+lld$", "menu_abbr": "[${1}](${2}){  ${3}  };${0}"}, "#include2": {"word": "#include2", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 1}, "snip": "#include \"${1}.h\"${0}", "menu_template": "#include \"${1}.h\"${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/c.snip", "action__line": 103, "user_data": "{\"snippet_trigger\": \"inc2\", \"snippet\": \"#include \\\"${1}.h\\\"${0}\"}", "menu_abbr": "#include \"${1}.h\"${0}", "real_name": "inc2", "description": "#include \"${1}.h\"${0}", "action__pattern": "^snippet\\s\\+inc2$"}, "pri": {"word": "pri", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "private${0}", "user_data": "{\"snippet_trigger\": \"pri\", \"snippet\": \"private${0}\"}", "description": "private${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/cpp.snippets", "action__line": 63, "menu_template": "private${0}", "real_name": "pri", "action__pattern": "^snippet\\s\\+pri$", "menu_abbr": "private${0}"}, "ret": {"word": "ret", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "return ${0};", "menu_template": "return ${0};", "user_data": "{\"snippet_trigger\": \"ret\", \"snippet\": \"return ${0};\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/c.snippets", "action__line": 112, "description": "return ${0};", "real_name": "ret", "action__pattern": "^snippet\\s\\+ret$", "menu_abbr": "return ${0};"}, "stack": {"word": "stack", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "std::stack<${1:T}> ${2};${0}", "user_data": "{\"snippet_trigger\": \"stack\", \"snippet\": \"std::stack<${1:T}> ${2};${0}\"}", "description": "std::stack<${1:T}> ${2};${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/cpp.snippets", "action__line": 52, "menu_template": "std::stack<${1:T}> ${2};${0}", "real_name": "stack", "action__pattern": "^snippet\\s\\+stack$", "menu_abbr": "std::stack<${1:T}> ${2};${0}"}, "#define": {"word": "#define", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 1}, "snip": "#define ${0}", "menu_template": "#define ${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/c.snip", "action__line": 116, "user_data": "{\"snippet_trigger\": \"def\", \"snippet\": \"#define ${0}\"}", "menu_abbr": "#define ${0}", "real_name": "def", "description": "#define ${0}", "action__pattern": "^snippet\\s\\+def$"}, "enum": {"word": "enum", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "/*! \\enum $1\n\t *\n\t *  ${2:Detailed description}\n\t */\n\tenum ${1:name} { ${0} };", "menu_template": "/*! \\enum $1  *  * ${2:Detailed description}  */  enum ${1:name} { ${0} };", "user_data": "{\"snippet_trigger\": \"enum\", \"snippet\": \"/*! \\\\enum $1\\n\\t *\\n\\t *  ${2:Detailed description}\\n\\t */\\n\\tenum ${1:name} { ${0} };\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/c.snippets", "action__line": 251, "description": "/*! \\enum $1\n\t *\n\t *  ${2:Detailed description}\n\t */\n\tenum ${1:name} { ${0} };", "real_name": "enum", "action__pattern": "^snippet\\s\\+enum$", "menu_abbr": "/*! \\enum $1  *  * ${2:Detailed description}  */  enum ${1:name} { ${0} };"}, "mset": {"word": "mset", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "std::multiset<${1:T}> ${2};${0}", "user_data": "{\"snippet_trigger\": \"mset\", \"snippet\": \"std::multiset<${1:T}> ${2};${0}\"}", "description": "std::multiset<${1:T}> ${2};${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/cpp.snippets", "action__line": 34, "menu_template": "std::multiset<${1:T}> ${2};${0}", "real_name": "mset", "action__pattern": "^snippet\\s\\+mset$", "menu_abbr": "std::multiset<${1:T}> ${2};${0}"}, "function": {"word": "function", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 1}, "snip": "${1:void} ${2:#:func_name}(${3:#:args}) {\n${0:TARGET}\n}", "menu_template": "func() {}", "user_data": "{\"snippet_trigger\": \"function\", \"snippet\": \"${1:void} ${2:#:func_name}(${3:#:args}) {\\n${0:TARGET}\\n}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/c.snip", "action__line": 59, "description": "${1:void} ${2:#:func_name}(${3:#:args}) {\n${0:TARGET}\n}", "real_name": "function", "action__pattern": "^snippet\\s\\+function$", "menu_abbr": "func() {}"}, "array": {"word": "array", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "std::array<${1:T}, ${2:N}> ${3};${0}", "user_data": "{\"snippet_trigger\": \"array\", \"snippet\": \"std::array<${1:T}, ${2:N}> ${3};${0}\"}", "description": "std::array<${1:T}, ${2:N}> ${3};${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/cpp.snippets", "action__line": 13, "menu_template": "std::array<${1:T}, ${2:N}> ${3};${0}", "real_name": "array", "action__pattern": "^snippet\\s\\+array$", "menu_abbr": "std::array<${1:T}, ${2:N}> ${3};${0}"}, "ife": {"word": "ife", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "if (${1:true}) {\n\t\t${2:${VISUAL}}\n\t} else {\n\t\t${0}\n\t}", "menu_template": "if (${1:true}) {  ${2:${VISUAL}}  } else {  ${0}  }", "user_data": "{\"snippet_trigger\": \"ife\", \"snippet\": \"if (${1:true}) {\\n\\t\\t${2:${VISUAL}}\\n\\t} else {\\n\\t\\t${0}\\n\\t}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/c.snippets", "action__line": 69, "description": "if (${1:true}) {\n\t\t${2:${VISUAL}}\n\t} else {\n\t\t${0}\n\t}", "real_name": "ife", "action__pattern": "^snippet\\s\\+ife$", "menu_abbr": "if (${1:true}) {  ${2:${VISUAL}}  } else {  ${0}  }"}, "cin": {"word": "cin", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "std::cin >> ${1};${0}", "user_data": "{\"snippet_trigger\": \"cin\", \"snippet\": \"std::cin >> ${1};${0}\"}", "description": "std::cin >> ${1};${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/cpp.snippets", "action__line": 151, "menu_template": "std::cin >> ${1};${0}", "real_name": "cin", "action__pattern": "^snippet\\s\\+cin$", "menu_abbr": "std::cin >> ${1};${0}"}, "switch": {"word": "switch", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "switch (${1:/* variable */}) {\n\t\tcase ${2:/* variable case */}:\n\t\t\t${3}\n\t\t\t${4:break;}${5}\n\t\tdefault:\n\t\t\t${6}\n\t}", "menu_template": "switch (${1:/* variable */}) {  case ${2:/* variable case */}:  ${3}  ${4:break;}${5}  default:  ${6}  }", "user_data": "{\"snippet_trigger\": \"switch\", \"snippet\": \"switch (${1:/* variable */}) {\\n\\t\\tcase ${2:/* variable case */}:\\n\\t\\t\\t${3}\\n\\t\\t\\t${4:break;}${5}\\n\\t\\tdefault:\\n\\t\\t\\t${6}\\n\\t}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/c.snippets", "action__line": 92, "description": "switch (${1:/* variable */}) {\n\t\tcase ${2:/* variable case */}:\n\t\t\t${3}\n\t\t\t${4:break;}${5}\n\t\tdefault:\n\t\t\t${6}\n\t}", "real_name": "switch", "action__pattern": "^snippet\\s\\+switch$", "menu_abbr": "switch (${1:/* variable */}) {  case ${2:/* variable case */}:  ${3}  ${4:break;}${5}  default:  ${6}  }"}, "pqueue": {"word": "pqueue", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "std::priority_queue<${1:T}> ${2};${0}", "user_data": "{\"snippet_trigger\": \"pqueue\", \"snippet\": \"std::priority_queue<${1:T}> ${2};${0}\"}", "description": "std::priority_queue<${1:T}> ${2};${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/cpp.snippets", "action__line": 58, "menu_template": "std::priority_queue<${1:T}> ${2};${0}", "real_name": "pqueue", "action__pattern": "^snippet\\s\\+pqueue$", "menu_abbr": "std::priority_queue<${1:T}> ${2};${0}"}, "ifi": {"word": "ifi", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "if (${1:true}) ${0};", "menu_template": "if (${1:true}) ${0};", "user_data": "{\"snippet_trigger\": \"ifi\", \"snippet\": \"if (${1:true}) ${0};\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/c.snippets", "action__line": 86, "description": "if (${1:true}) ${0};", "real_name": "ifi", "action__pattern": "^snippet\\s\\+ifi$", "menu_abbr": "if (${1:true}) ${0};"}, "Inc": {"word": "Inc", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "#include \"${1:`vim_snippets#Filename(\"$1.h\")`}\"${0}", "menu_template": "#include \"${1:`vim_snippets#Filename(\"$1.h\")`}\"${0}", "user_data": "{\"snippet_trigger\": \"Inc\", \"snippet\": \"#include \\\"${1:`vim_snippets#Filename(\\\"$1.h\\\")`}\\\"${0}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/c.snippets", "action__line": 22, "description": "#include \"${1:`vim_snippets#Filename(\"$1.h\")`}\"${0}", "real_name": "Inc", "action__pattern": "^snippet\\s\\+Inc$", "menu_abbr": "#include \"${1:`vim_snippets#Filename(\"$1.h\")`}\"${0}"}, "cl": {"word": "cl", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "/*! \\class $1\n\t *  \\brief ${3:Brief class description}\n\t *\n\t *  ${4:Detailed description}\n\t */\n\tclass ${1:`vim_snippets#Filename('$1', 'name')`}\n\t{\n\tpublic:\n\t\t$1(${2});\n\t\tvirtual ~$1();\n\n\tprotected:\n\t\tm_${5}; /*!< ${6:Member description} */\n\t};${0}", "user_data": "{\"snippet_trigger\": \"cl\", \"snippet\": \"/*! \\\\class $1\\n\\t *  \\\\brief ${3:Brief class description}\\n\\t *\\n\\t *  ${4:Detailed description}\\n\\t */\\n\\tclass ${1:`vim_snippets#Filename('$1', 'name')`}\\n\\t{\\n\\tpublic:\\n\\t\\t$1(${2});\\n\\t\\tvirtual ~$1();\\n\\n\\tprotected:\\n\\t\\tm_${5}; /*!< ${6:Member description} */\\n\\t};${0}\"}", "description": "/*! \\class $1\n\t *  \\brief ${3:Brief class description}\n\t *\n\t *  ${4:Detailed description}\n\t */\n\tclass ${1:`vim_snippets#Filename('$1', 'name')`}\n\t{\n\tpublic:\n\t\t$1(${2});\n\t\tvirtual ~$1();\n\n\tprotected:\n\t\tm_${5}; /*!< ${6:Member description} */\n\t};${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/cpp.snippets", "action__line": 80, "menu_template": "/*! \\class $1  * \\brief ${3:Brief class description}  *  * ${4:Detailed description}  */  class ${1:`vim_snippets#Filename('$1', 'name')`}  {  public:  $1(${2});  virtual ~$1();   protected:  m_${5}; /*!< ${6:Member description} */  };${0}", "real_name": "cl", "action__pattern": "^snippet\\s\\+cl$", "menu_abbr": "/*! \\class $1  * \\brief ${3:Brief class description}  *  * ${4:Detailed description}  */  class ${1:`vim_snippets#Filename('$1', 'name')`}  {  public:  $1(${2});  virtual ~$1();   protected:  m_${5}; /*!< ${6:Member description} */  };${0}"}, "fr": {"word": "fr", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "friend${0}", "user_data": "{\"snippet_trigger\": \"fr\", \"snippet\": \"friend${0}\"}", "description": "friend${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/cpp.snippets", "action__line": 72, "menu_template": "friend${0}", "real_name": "fr", "action__pattern": "^snippet\\s\\+fr$", "menu_abbr": "friend${0}"}, "for": {"word": "for", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "for (int ${2:i} = 0; $2 < ${1:count}; $2${3:++}) {\n\t\t${4}\n\t}", "menu_template": "for (int ${2:i} = 0; $2 < ${1:count}; $2${3:++}) {  ${4}  }", "user_data": "{\"snippet_trigger\": \"for\", \"snippet\": \"for (int ${2:i} = 0; $2 < ${1:count}; $2${3:++}) {\\n\\t\\t${4}\\n\\t}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/c.snippets", "action__line": 117, "description": "for (int ${2:i} = 0; $2 < ${1:count}; $2${3:++}) {\n\t\t${4}\n\t}", "real_name": "for", "action__pattern": "^snippet\\s\\+for$", "menu_abbr": "for (int ${2:i} = 0; $2 < ${1:count}; $2${3:++}) {  ${4}  }"}, "case": {"word": "case", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "case ${1:/* variable case */}:\n\t\t${2}\n\t\t${3:break;}", "menu_template": "case ${1:/* variable case */}:  ${2}  ${3:break;}", "user_data": "{\"snippet_trigger\": \"case\", \"snippet\": \"case ${1:/* variable case */}:\\n\\t\\t${2}\\n\\t\\t${3:break;}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/c.snippets", "action__line": 108, "description": "case ${1:/* variable case */}:\n\t\t${2}\n\t\t${3:break;}", "real_name": "case", "action__pattern": "^snippet\\s\\+case$", "menu_abbr": "case ${1:/* variable case */}:  ${2}  ${3:break;}"}, "/*": {"word": "/*", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "/* ${1:#:comment} */\n${0}", "menu_template": "/* ${1:#:comment} */ ${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/c.snip", "action__line": 146, "user_data": "{\"snippet_trigger\": \"comment\", \"snippet\": \"/* ${1:#:comment} */\\n${0}\"}", "menu_abbr": "/* ${1:#:comment} */ ${0}", "real_name": "comment", "description": "/* ${1:#:comment} */\n${0}", "action__pattern": "^snippet\\s\\+comment$"}, "switchndef": {"word": "switchndef", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "switch (${1:/* variable */}) {\n\t\tcase ${2:/* variable case */}:\n\t\t\t${3}\n\t\t\t${4:break;}${5}\n\t}", "menu_template": "switch (${1:/* variable */}) {  case ${2:/* variable case */}:  ${3}  ${4:break;}${5}  }", "user_data": "{\"snippet_trigger\": \"switchndef\", \"snippet\": \"switch (${1:/* variable */}) {\\n\\t\\tcase ${2:/* variable case */}:\\n\\t\\t\\t${3}\\n\\t\\t\\t${4:break;}${5}\\n\\t}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/c.snippets", "action__line": 101, "description": "switch (${1:/* variable */}) {\n\t\tcase ${2:/* variable case */}:\n\t\t\t${3}\n\t\t\t${4:break;}${5}\n\t}", "real_name": "switchndef", "action__pattern": "^snippet\\s\\+switchndef$", "menu_abbr": "switch (${1:/* variable */}) {  case ${2:/* variable case */}:  ${3}  ${4:break;}${5}  }"}, "once": {"word": "once", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "#ifndef ${1:`toupper(vim_snippets#Filename('$1_H', 'UNTITLED_H'))`}\n\n\t#define $1\n\n\t${0}\n\n\t#endif /* end of include guard: $1 */", "menu_template": "#ifndef ${1:`toupper(vim_snippets#Filename('$1_H', 'UNTITLED_H'))`}   #define $1   ${0}   #endif /* end of include guard: $1 */", "user_data": "{\"snippet_trigger\": \"once\", \"snippet\": \"#ifndef ${1:`toupper(vim_snippets#Filename('$1_H', 'UNTITLED_H'))`}\\n\\n\\t#define $1\\n\\n\\t${0}\\n\\n\\t#endif /* end of include guard: $1 */\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/c.snippets", "action__line": 43, "description": "#ifndef ${1:`toupper(vim_snippets#Filename('$1_H', 'UNTITLED_H'))`}\n\n\t#define $1\n\n\t${0}\n\n\t#endif /* end of include guard: $1 */", "real_name": "once", "action__pattern": "^snippet\\s\\+once$", "menu_abbr": "#ifndef ${1:`toupper(vim_snippets#Filename('$1_H', 'UNTITLED_H'))`}   #define $1   ${0}   #endif /* end of include guard: $1 */"}, "umset": {"word": "umset", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "std::unordered_multiset<${1:T}> ${2};${0}", "user_data": "{\"snippet_trigger\": \"umset\", \"snippet\": \"std::unordered_multiset<${1:T}> ${2};${0}\"}", "description": "std::unordered_multiset<${1:T}> ${2};${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/cpp.snippets", "action__line": 46, "menu_template": "std::unordered_multiset<${1:T}> ${2};${0}", "real_name": "umset", "action__pattern": "^snippet\\s\\+umset$", "menu_abbr": "std::unordered_multiset<${1:T}> ${2};${0}"}, "try": {"word": "try", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "try {\n\n\t}catch(${1}) {\n\n\t}${0}", "user_data": "{\"snippet_trigger\": \"try\", \"snippet\": \"try {\\n\\n\\t}catch(${1}) {\\n\\n\\t}${0}\"}", "description": "try {\n\n\t}catch(${1}) {\n\n\t}${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/cpp.snippets", "action__line": 201, "menu_template": "try {   }catch(${1}) {   }${0}", "real_name": "try", "action__pattern": "^snippet\\s\\+try$", "menu_abbr": "try {   }catch(${1}) {   }${0}"}, "set": {"word": "set", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "std::set<${1:T}> ${2};${0}", "user_data": "{\"snippet_trigger\": \"set\", \"snippet\": \"std::set<${1:T}> ${2};${0}\"}", "description": "std::set<${1:T}> ${2};${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/cpp.snippets", "action__line": 28, "menu_template": "std::set<${1:T}> ${2};${0}", "real_name": "set", "action__pattern": "^snippet\\s\\+set$", "menu_abbr": "std::set<${1:T}> ${2};${0}"}, "inc": {"word": "inc", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "#include <${1:stdio}.h>${0}", "menu_template": "#include <${1:stdio}.h>${0}", "user_data": "{\"snippet_trigger\": \"inc\", \"snippet\": \"#include <${1:stdio}.h>${0}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/c.snippets", "action__line": 19, "description": "#include <${1:stdio}.h>${0}", "real_name": "inc", "action__pattern": "^snippet\\s\\+inc$", "menu_abbr": "#include <${1:stdio}.h>${0}"}, "pr": {"word": "pr", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "printf(\"${1:%s}\\n\"${2});${0}", "menu_template": "printf(\"${1:%s}\\n\"${2});${0}", "user_data": "{\"snippet_trigger\": \"pr\", \"snippet\": \"printf(\\\"${1:%s}\\\\n\\\"${2});${0}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/c.snippets", "action__line": 269, "description": "printf(\"${1:%s}\\n\"${2});${0}", "real_name": "pr", "action__pattern": "^snippet\\s\\+pr$", "menu_abbr": "printf(\"${1:%s}\\n\"${2});${0}"}, "while": {"word": "while", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 1}, "snip": "while (${1:#:condition}) {\n${0:TARGET}\n}", "menu_template": "while () {}", "user_data": "{\"snippet_trigger\": \"while\", \"snippet\": \"while (${1:#:condition}) {\\n${0:TARGET}\\n}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/c.snip", "action__line": 36, "description": "while (${1:#:condition}) {\n${0:TARGET}\n}", "real_name": "while", "action__pattern": "^snippet\\s\\+while$", "menu_abbr": "while () {}"}, "if": {"word": "if", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "if (${1:true}) {\n\t\t${0:${VISUAL}}\n\t}", "menu_template": "if (${1:true}) {  ${0:${VISUAL}}  }", "user_data": "{\"snippet_trigger\": \"if\", \"snippet\": \"if (${1:true}) {\\n\\t\\t${0:${VISUAL}}\\n\\t}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/c.snippets", "action__line": 65, "description": "if (${1:true}) {\n\t\t${0:${VISUAL}}\n\t}", "real_name": "if", "action__pattern": "^snippet\\s\\+if$", "menu_abbr": "if (${1:true}) {  ${0:${VISUAL}}  }"}, "ummap": {"word": "ummap", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "std::unordered_multimap<${1:Key}, ${2:T}> ${3};${0}", "user_data": "{\"snippet_trigger\": \"ummap\", \"snippet\": \"std::unordered_multimap<${1:Key}, ${2:T}> ${3};${0}\"}", "description": "std::unordered_multimap<${1:Key}, ${2:T}> ${3};${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/cpp.snippets", "action__line": 49, "menu_template": "std::unordered_multimap<${1:Key}, ${2:T}> ${3};${0}", "real_name": "ummap", "action__pattern": "^snippet\\s\\+ummap$", "menu_abbr": "std::unordered_multimap<${1:Key}, ${2:T}> ${3};${0}"}, "#inc2": {"word": "#inc2", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 1}, "snip": "#include \"${1}.h\"${0}", "menu_template": "#include \"${1}.h\"${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/c.snip", "action__line": 103, "user_data": "{\"snippet_trigger\": \"inc2\", \"snippet\": \"#include \\\"${1}.h\\\"${0}\"}", "menu_abbr": "#include \"${1}.h\"${0}", "real_name": "inc2", "description": "#include \"${1}.h\"${0}", "action__pattern": "^snippet\\s\\+inc2$"}, "ns": {"word": "ns", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "namespace ${1:`vim_snippets#Filename('', 'my')`} {\n\t\t${0}\n\t} /* namespace $1 */", "user_data": "{\"snippet_trigger\": \"ns\", \"snippet\": \"namespace ${1:`vim_snippets#Filename('', 'my')`} {\\n\\t\\t${0}\\n\\t} /* namespace $1 */\"}", "description": "namespace ${1:`vim_snippets#Filename('', 'my')`} {\n\t\t${0}\n\t} /* namespace $1 */", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/cpp.snippets", "action__line": 137, "menu_template": "namespace ${1:`vim_snippets#Filename('', 'my')`} {  ${0}  } /* namespace $1 */", "real_name": "ns", "action__pattern": "^snippet\\s\\+ns$", "menu_abbr": "namespace ${1:`vim_snippets#Filename('', 'my')`} {  ${0}  } /* namespace $1 */"}, "umap": {"word": "umap", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "std::unordered_map<${1:Key}, ${2:T}> ${3};${0}", "user_data": "{\"snippet_trigger\": \"umap\", \"snippet\": \"std::unordered_map<${1:Key}, ${2:T}> ${3};${0}\"}", "description": "std::unordered_map<${1:Key}, ${2:T}> ${3};${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/cpp.snippets", "action__line": 43, "menu_template": "std::unordered_map<${1:Key}, ${2:T}> ${3};${0}", "real_name": "umap", "action__pattern": "^snippet\\s\\+umap$", "menu_abbr": "std::unordered_map<${1:Key}, ${2:T}> ${3};${0}"}, "elif": {"word": "elif", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "else if (${1:true}) {\n\t\t${0:${VISUAL}}\n\t}", "menu_template": "else if (${1:true}) {  ${0:${VISUAL}}  }", "user_data": "{\"snippet_trigger\": \"elif\", \"snippet\": \"else if (${1:true}) {\\n\\t\\t${0:${VISUAL}}\\n\\t}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/c.snippets", "action__line": 81, "description": "else if (${1:true}) {\n\t\t${0:${VISUAL}}\n\t}", "real_name": "elif", "action__pattern": "^snippet\\s\\+elif$", "menu_abbr": "else if (${1:true}) {  ${0:${VISUAL}}  }"}, "do": {"word": "do", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "do {\n\t\t${0:${VISUAL}}\n\t} while (${1:/* condition */});", "menu_template": "do {  ${0:${VISUAL}}  } while (${1:/* condition */});", "user_data": "{\"snippet_trigger\": \"do\", \"snippet\": \"do {\\n\\t\\t${0:${VISUAL}}\\n\\t} while (${1:/* condition */});\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/c.snippets", "action__line": 132, "description": "do {\n\t\t${0:${VISUAL}}\n\t} while (${1:/* condition */});", "real_name": "do", "action__pattern": "^snippet\\s\\+do$", "menu_abbr": "do {  ${0:${VISUAL}}  } while (${1:/* condition */});"}, "ifelse": {"word": "ifelse", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 1}, "snip": "if (${1:#:condition}) {\n${2:TARGET}\n} else {\n${3}\n}", "menu_template": "if () {} else {}", "user_data": "{\"snippet_trigger\": \"ifelse\", \"snippet\": \"if (${1:#:condition}) {\\n${2:TARGET}\\n} else {\\n${3}\\n}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/c.snip", "action__line": 20, "description": "if (${1:#:condition}) {\n${2:TARGET}\n} else {\n${3}\n}", "real_name": "ifelse", "action__pattern": "^snippet\\s\\+ifelse$", "menu_abbr": "if () {} else {}"}, "mfun": {"word": "mfun", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "${4:void} ${1:`vim_snippets#Filename('$1', 'ClassName')`}::${2:memberFunction}(${3}) {\n\t\t${0}\n\t}", "user_data": "{\"snippet_trigger\": \"mfun\", \"snippet\": \"${4:void} ${1:`vim_snippets#Filename('$1', 'ClassName')`}::${2:memberFunction}(${3}) {\\n\\t\\t${0}\\n\\t}\"}", "description": "${4:void} ${1:`vim_snippets#Filename('$1', 'ClassName')`}::${2:memberFunction}(${3}) {\n\t\t${0}\n\t}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/cpp.snippets", "action__line": 96, "menu_template": "${4:void} ${1:`vim_snippets#Filename('$1', 'ClassName')`}::${2:memberFunction}(${3}) {  ${0}  }", "real_name": "mfun", "action__pattern": "^snippet\\s\\+mfun$", "menu_abbr": "${4:void} ${1:`vim_snippets#Filename('$1', 'ClassName')`}::${2:memberFunction}(${3}) {  ${0}  }"}, "sizeof": {"word": "sizeof", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "sizeof(${0:TARGET})", "menu_template": "sizeof(${0: })", "user_data": "{\"snippet_trigger\": \"sizeof\", \"snippet\": \"sizeof(${0:TARGET})\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/c.snip", "action__line": 151, "description": "sizeof(${0:TARGET})", "real_name": "sizeof", "action__pattern": "^snippet\\s\\+sizeof$", "menu_abbr": "sizeof(${0: })"}, "sca": {"word": "sca", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "static_cast<${1:unsigned}>(${2:expr})${3}", "user_data": "{\"snippet_trigger\": \"sca\", \"snippet\": \"static_cast<${1:unsigned}>(${2:expr})${3}\"}", "description": "static_cast<${1:unsigned}>(${2:expr})${3}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/cpp.snippets", "action__line": 156, "menu_template": "static_cast<${1:unsigned}>(${2:expr})${3}", "real_name": "sca", "action__pattern": "^snippet\\s\\+sca$", "menu_abbr": "static_cast<${1:unsigned}>(${2:expr})${3}"}, "elseif": {"word": "elseif", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 1}, "snip": "else if (${1:#:condition}) {\n${0:TARGET}\n}", "menu_template": "else if (${1:#:condition}) { ${0: } }", "user_data": "{\"snippet_trigger\": \"elseif\", \"snippet\": \"else if (${1:#:condition}) {\\n${0:TARGET}\\n}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/c.snip", "action__line": 14, "description": "else if (${1:#:condition}) {\n${0:TARGET}\n}", "real_name": "elseif", "action__pattern": "^snippet\\s\\+elseif$", "menu_abbr": "else if (${1:#:condition}) { ${0: } }"}, "main": {"word": "main", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "int main(int argc, const char *argv[])\n\t{\n\t\t${0}\n\t\treturn 0;\n\t}", "menu_template": "int main(int argc, const char *argv[])  {  ${0}  return 0;  }", "user_data": "{\"snippet_trigger\": \"main\", \"snippet\": \"int main(int argc, const char *argv[])\\n\\t{\\n\\t\\t${0}\\n\\t\\treturn 0;\\n\\t}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/c.snippets", "action__line": 3, "description": "int main(int argc, const char *argv[])\n\t{\n\t\t${0}\n\t\treturn 0;\n\t}", "real_name": "main", "action__pattern": "^snippet\\s\\+main$", "menu_abbr": "int main(int argc, const char *argv[])  {  ${0}  return 0;  }"}, "mainn": {"word": "mainn", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "int main(void)\n\t{\n\t\t${0}\n\t\treturn 0;\n\t}", "menu_template": "int main(void)  {  ${0}  return 0;  }", "user_data": "{\"snippet_trigger\": \"mainn\", \"snippet\": \"int main(void)\\n\\t{\\n\\t\\t${0}\\n\\t\\treturn 0;\\n\\t}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/c.snippets", "action__line": 10, "description": "int main(void)\n\t{\n\t\t${0}\n\t\treturn 0;\n\t}", "real_name": "mainn", "action__pattern": "^snippet\\s\\+mainn$", "menu_abbr": "int main(void)  {  ${0}  return 0;  }"}, "st": {"word": "st", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "/*! \\struct $1\n\t *  \\brief ${3:Brief struct description}\n\t *\n\t *  ${4:Detailed description}\n\t */\n\tstruct ${1:`vim_snippets#Filename('$1_t', 'name')`} {\n\t\t${2:Data} /*!< ${4:Description} */\n\t}${5: /* optional variable list */};${0}", "menu_template": "/*! \\struct $1  * \\brief ${3:Brief struct description}  *  * ${4:Detailed description}  */  struct ${1:`vim_snippets#Filename('$1_t', 'name')`} {  ${2:Data} /*!< ${4:Description} */  }${5: /* optional variable list */};${0}", "user_data": "{\"snippet_trigger\": \"st\", \"snippet\": \"/*! \\\\struct $1\\n\\t *  \\\\brief ${3:Brief struct description}\\n\\t *\\n\\t *  ${4:Detailed description}\\n\\t */\\n\\tstruct ${1:`vim_snippets#Filename('$1_t', 'name')`} {\\n\\t\\t${2:Data} /*!< ${4:Description} */\\n\\t}${5: /* optional variable list */};${0}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/c.snippets", "action__line": 231, "description": "/*! \\struct $1\n\t *  \\brief ${3:Brief struct description}\n\t *\n\t *  ${4:Detailed description}\n\t */\n\tstruct ${1:`vim_snippets#Filename('$1_t', 'name')`} {\n\t\t${2:Data} /*!< ${4:Description} */\n\t}${5: /* optional variable list */};${0}", "real_name": "st", "action__pattern": "^snippet\\s\\+st$", "menu_abbr": "/*! \\struct $1  * \\brief ${3:Brief struct description}  *  * ${4:Detailed description}  */  struct ${1:`vim_snippets#Filename('$1_t', 'name')`} {  ${2:Data} /*!< ${4:Description} */  }${5: /* optional variable list */};${0}"}, "itera": {"word": "itera", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "for (auto ${1:i} = ${2:container}.begin(); $1 != $2.end(); ++$1) {\n\t\t${3:std::cout << *$1 << std::endl;}\n\t}", "user_data": "{\"snippet_trigger\": \"itera\", \"snippet\": \"for (auto ${1:i} = ${2:container}.begin(); $1 != $2.end(); ++$1) {\\n\\t\\t${3:std::cout << *$1 << std::endl;}\\n\\t}\"}", "description": "for (auto ${1:i} = ${2:container}.begin(); $1 != $2.end(); ++$1) {\n\t\t${3:std::cout << *$1 << std::endl;}\n\t}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/vim-snippets/snippets/cpp.snippets", "action__line": 186, "menu_template": "for (auto ${1:i} = ${2:container}.begin(); $1 != $2.end(); ++$1) {  ${3:std::cout << *$1 << std::endl;}  }", "real_name": "itera", "action__pattern": "^snippet\\s\\+itera$", "menu_abbr": "for (auto ${1:i} = ${2:container}.begin(); $1 != $2.end(); ++$1) {  ${3:std::cout << *$1 << std::endl;}  }"}}
