{"def": {"word": "def", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 1}, "snip": "#define ${0}", "menu_template": "#define ${0}", "user_data": "{\"snippet_trigger\": \"def\", \"snippet\": \"#define ${0}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/c.snip", "action__line": 116, "description": "#define ${0}", "real_name": "def", "action__pattern": "^snippet\\s\\+def$", "menu_abbr": "#define ${0}"}, "fgets": {"word": "fgets", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "fgets(${0:ROW}, ${1:LENGTH}, ${2:FILE});", "menu_template": "fgets(row, length, file);", "user_data": "{\"snippet_trigger\": \"fgets\", \"snippet\": \"fgets(${0:ROW}, ${1:LENGTH}, ${2:FILE});\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/c.snip", "action__line": 170, "description": "fgets(${0:ROW}, ${1:LENGTH}, ${2:FILE});", "real_name": "fgets", "action__pattern": "^snippet\\s\\+fgets$", "menu_abbr": "fgets(row, length, file);"}, "conditional": {"word": "conditional", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "(${1:#:condition}) ? ${2:#:a} : ${3:#:b}", "menu_template": "(${1:#:condition}) ? ${2:#:a} : ${3:#:b}", "user_data": "{\"snippet_trigger\": \"conditional\", \"snippet\": \"(${1:#:condition}) ? ${2:#:a} : ${3:#:b}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/c.snip", "action__line": 132, "description": "(${1:#:condition}) ? ${2:#:a} : ${3:#:b}", "real_name": "conditional", "action__pattern": "^snippet\\s\\+conditional$", "menu_abbr": "(${1:#:condition}) ? ${2:#:a} : ${3:#:b}"}, "size": {"word": "size", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "sizeof(${0:TARGET})", "menu_template": "sizeof(${0: })", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/c.snip", "action__line": 151, "user_data": "{\"snippet_trigger\": \"sizeof\", \"snippet\": \"sizeof(${0:TARGET})\"}", "menu_abbr": "sizeof(${0: })", "real_name": "sizeof", "description": "sizeof(${0:TARGET})", "action__pattern": "^snippet\\s\\+sizeof$"}, "struct_typedef": {"word": "struct_typedef", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 1}, "snip": "typedef struct ${1:#:name} {\n${0:TARGET:data}\n};", "menu_template": "typedef struct ${1:#:name} { ${0: :data} };", "user_data": "{\"snippet_trigger\": \"struct_typedef\", \"snippet\": \"typedef struct ${1:#:name} {\\n${0:TARGET:data}\\n};\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/c.snip", "action__line": 75, "description": "typedef struct ${1:#:name} {\n${0:TARGET:data}\n};", "real_name": "struct_typedef", "action__pattern": "^snippet\\s\\+struct_typedef$", "menu_abbr": "typedef struct ${1:#:name} { ${0: :data} };"}, "#ifndef": {"word": "#ifndef", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 1}, "snip": "#ifndef $1\n#define ${1:#:SYMBOL}\n#endif${0}", "menu_template": "#ifndef ... #define ... #endif", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/c.snip", "action__line": 108, "user_data": "{\"snippet_trigger\": \"ifndef\", \"snippet\": \"#ifndef $1\\n#define ${1:#:SYMBOL}\\n#endif${0}\"}", "menu_abbr": "#ifndef ... #define ... #endif", "real_name": "ifndef", "description": "#ifndef $1\n#define ${1:#:SYMBOL}\n#endif${0}", "action__pattern": "^snippet\\s\\+ifndef$"}, "ifndef": {"word": "ifndef", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 1}, "snip": "#ifndef $1\n#define ${1:#:SYMBOL}\n#endif${0}", "menu_template": "#ifndef ... #define ... #endif", "user_data": "{\"snippet_trigger\": \"ifndef\", \"snippet\": \"#ifndef $1\\n#define ${1:#:SYMBOL}\\n#endif${0}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/c.snip", "action__line": 108, "description": "#ifndef $1\n#define ${1:#:SYMBOL}\n#endif${0}", "real_name": "ifndef", "action__pattern": "^snippet\\s\\+ifndef$", "menu_abbr": "#ifndef ... #define ... #endif"}, "doxy": {"word": "doxy", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 1}, "snip": "/**\n* @brief    ${1:function description}\n*\n* @details  ${2:detailed description}\n*\n* @param    ${3:param}\n*\n* @return   ${4:return type}\n*/${0}", "menu_template": "/** @brief ...", "user_data": "{\"snippet_trigger\": \"doxy\", \"snippet\": \"/**\\n* @brief    ${1:function description}\\n*\\n* @details  ${2:detailed description}\\n*\\n* @param    ${3:param}\\n*\\n* @return   ${4:return type}\\n*/${0}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/c.snip", "action__line": 174, "description": "/**\n* @brief    ${1:function description}\n*\n* @details  ${2:detailed description}\n*\n* @param    ${3:param}\n*\n* @return   ${4:return type}\n*/${0}", "real_name": "doxy", "action__pattern": "^snippet\\s\\+doxy$", "menu_abbr": "/** @brief ..."}, "struct": {"word": "struct", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 1}, "snip": "struct ${1:#:name} {\n${0:TARGET:data}\n};", "menu_template": "struct {}", "user_data": "{\"snippet_trigger\": \"struct\", \"snippet\": \"struct ${1:#:name} {\\n${0:TARGET:data}\\n};\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/c.snip", "action__line": 67, "description": "struct ${1:#:name} {\n${0:TARGET:data}\n};", "real_name": "struct", "action__pattern": "^snippet\\s\\+struct$", "menu_abbr": "struct {}"}, "else": {"word": "else", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 1}, "snip": "else {\n${0:TARGET}\n}", "menu_template": "else { ${0: } }", "user_data": "{\"snippet_trigger\": \"else\", \"snippet\": \"else {\\n${0:TARGET}\\n}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/c.snip", "action__line": 8, "description": "else {\n${0:TARGET}\n}", "real_name": "else", "action__pattern": "^snippet\\s\\+else$", "menu_abbr": "else { ${0: } }"}, "comment": {"word": "comment", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "/* ${1:#:comment} */\n${0}", "menu_template": "/* ${1:#:comment} */ ${0}", "user_data": "{\"snippet_trigger\": \"comment\", \"snippet\": \"/* ${1:#:comment} */\\n${0}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/c.snip", "action__line": 146, "description": "/* ${1:#:comment} */\n${0}", "real_name": "comment", "action__pattern": "^snippet\\s\\+comment$", "menu_abbr": "/* ${1:#:comment} */ ${0}"}, "helloworld": {"word": "helloworld", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "#include <iostream>\n\nint main(int argc, char const* argv[])\n{\nstd::cout << \"hello, world!\" << std::endl;\nreturn 0;\n}${0}", "user_data": "{\"snippet_trigger\": \"helloworld\", \"snippet\": \"#include <iostream>\\n\\nint main(int argc, char const* argv[])\\n{\\nstd::cout << \\\"hello, world!\\\" << std::endl;\\nreturn 0;\\n}${0}\"}", "description": "#include <iostream>\n\nint main(int argc, char const* argv[])\n{\nstd::cout << \"hello, world!\" << std::endl;\nreturn 0;\n}${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/cpp.snip", "action__line": 94, "menu_template": "#include<iostream> int main...", "real_name": "helloworld", "action__pattern": "^snippet\\s\\+helloworld$", "menu_abbr": "#include<iostream> int main..."}, "printf": {"word": "printf", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "printf(\"${1}\\n\", ${2});${0}", "menu_template": "printf(\"...\\n\", ...);", "user_data": "{\"snippet_trigger\": \"printf\", \"snippet\": \"printf(\\\"${1}\\\\n\\\", ${2});${0}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/c.snip", "action__line": 138, "description": "printf(\"${1}\\n\", ${2});${0}", "real_name": "printf", "action__pattern": "^snippet\\s\\+printf$", "menu_abbr": "printf(\"...\\n\", ...);"}, "fopen": {"word": "fopen", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "fopen(\"${1:PATH}\", \"${2:MODE}\");\n${0:TARGET}\nfclose(${3:FD});", "menu_template": "fopen(\"...\", \"...\");", "user_data": "{\"snippet_trigger\": \"fopen\", \"snippet\": \"fopen(\\\"${1:PATH}\\\", \\\"${2:MODE}\\\");\\n${0:TARGET}\\nfclose(${3:FD});\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/c.snip", "action__line": 164, "description": "fopen(\"${1:PATH}\", \"${2:MODE}\");\n${0:TARGET}\nfclose(${3:FD});", "real_name": "fopen", "action__pattern": "^snippet\\s\\+fopen$", "menu_abbr": "fopen(\"...\", \"...\");"}, "static_assert": {"word": "static_assert", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 1}, "snip": "static_assert( ${1}, \"${2}\" );${0}", "user_data": "{\"snippet_trigger\": \"static_assert\", \"snippet\": \"static_assert( ${1}, \\\"${2}\\\" );${0}\"}", "description": "static_assert( ${1}, \"${2}\" );${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/cpp.snip", "action__line": 66, "menu_template": "static_assert(,\"\")", "real_name": "static_assert", "action__pattern": "^snippet\\s\\+static_assert$", "menu_abbr": "static_assert(,\"\")"}, "do_while": {"word": "do_while", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 1}, "snip": "do {\n${0:TARGET:code}\n} while (${1:#:condition});", "menu_template": "do { ${0: :code} } while (${1:#:condition});", "user_data": "{\"snippet_trigger\": \"do_while\", \"snippet\": \"do {\\n${0:TARGET:code}\\n} while (${1:#:condition});\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/c.snip", "action__line": 43, "description": "do {\n${0:TARGET:code}\n} while (${1:#:condition});", "real_name": "do_while", "action__pattern": "^snippet\\s\\+do_while$", "menu_abbr": "do { ${0: :code} } while (${1:#:condition});"}, "namespace": {"word": "namespace", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "namespace ${1:#:name} {\n${0:TARGET}\n} // namespace $1", "user_data": "{\"snippet_trigger\": \"namespace\", \"snippet\": \"namespace ${1:#:name} {\\n${0:TARGET}\\n} // namespace $1\"}", "description": "namespace ${1:#:name} {\n${0:TARGET}\n} // namespace $1", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/cpp.snip", "action__line": 72, "menu_template": "namespace {}", "real_name": "namespace", "action__pattern": "^snippet\\s\\+namespace$", "menu_abbr": "namespace {}"}, "typedef": {"word": "typedef", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "typedef ${1:#:base_type} ${2:#:custom_type};${0}", "menu_template": "typedef ${1:#:base_type} ${2:#:custom_type};${0}", "user_data": "{\"snippet_trigger\": \"typedef\", \"snippet\": \"typedef ${1:#:base_type} ${2:#:custom_type};${0}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/c.snip", "action__line": 135, "description": "typedef ${1:#:base_type} ${2:#:custom_type};${0}", "real_name": "typedef", "action__pattern": "^snippet\\s\\+typedef$", "menu_abbr": "typedef ${1:#:base_type} ${2:#:custom_type};${0}"}, "fprintf": {"word": "fprintf", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "fprintf(${1:stderr}, \"${2}\\n\"${3});${0}", "menu_template": "fprintf(..., \"...\\n\", ...);", "user_data": "{\"snippet_trigger\": \"fprintf\", \"snippet\": \"fprintf(${1:stderr}, \\\"${2}\\\\n\\\"${3});${0}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/c.snip", "action__line": 142, "description": "fprintf(${1:stderr}, \"${2}\\n\"${3});${0}", "real_name": "fprintf", "action__pattern": "^snippet\\s\\+fprintf$", "menu_abbr": "fprintf(..., \"...\\n\", ...);"}, "p": {"word": "p", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 1}, "snip": "std::cout << ${0:TARGET} << std::endl;", "user_data": "{\"snippet_trigger\": \"p\", \"snippet\": \"std::cout << ${0:TARGET} << std::endl;\"}", "description": "std::cout << ${0:TARGET} << std::endl;", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/cpp.snip", "action__line": 104, "menu_template": "std::cout << ${0: } << std::endl;", "real_name": "p", "action__pattern": "^snippet\\s\\+p$", "menu_abbr": "std::cout << ${0: } << std::endl;"}, "#include": {"word": "#include", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 1}, "snip": "#include <${1:iostream}>${0}", "menu_template": "#include <${1:iostream}>${0}", "user_data": "{\"snippet_trigger\": \"inc\", \"snippet\": \"#include <${1:iostream}>${0}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/cpp.snip", "action__line": 4, "description": "#include <${1:iostream}>${0}", "real_name": "inc", "action__pattern": "^snippet\\s\\+inc$", "menu_abbr": "#include <${1:iostream}>${0}"}, "class": {"word": "class", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 1}, "snip": "class ${1:#:name} {\n${2}\npublic:\n$1(${3});\n};\n$1::$1($3) {\n${0:TARGET}\n}", "user_data": "{\"snippet_trigger\": \"class\", \"snippet\": \"class ${1:#:name} {\\n${2}\\npublic:\\n$1(${3});\\n};\\n$1::$1($3) {\\n${0:TARGET}\\n}\"}", "description": "class ${1:#:name} {\n${2}\npublic:\n$1(${3});\n};\n$1::$1($3) {\n${0:TARGET}\n}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/cpp.snip", "action__line": 18, "menu_template": "class {}", "real_name": "class", "action__pattern": "^snippet\\s\\+class$", "menu_abbr": "class {}"}, "func": {"word": "func", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 1}, "snip": "${1:void} ${2:#:func_name}(${3:#:args}) {\n${0:TARGET}\n}", "menu_template": "func() {}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/c.snip", "action__line": 59, "user_data": "{\"snippet_trigger\": \"function\", \"snippet\": \"${1:void} ${2:#:func_name}(${3:#:args}) {\\n${0:TARGET}\\n}\"}", "menu_abbr": "func() {}", "real_name": "function", "description": "${1:void} ${2:#:func_name}(${3:#:args}) {\n${0:TARGET}\n}", "action__pattern": "^snippet\\s\\+function$"}, "#inc": {"word": "#inc", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 1}, "snip": "#include <${1:iostream}>${0}", "menu_template": "#include <${1:iostream}>${0}", "user_data": "{\"snippet_trigger\": \"inc\", \"snippet\": \"#include <${1:iostream}>${0}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/cpp.snip", "action__line": 4, "description": "#include <${1:iostream}>${0}", "real_name": "inc", "action__pattern": "^snippet\\s\\+inc$", "menu_abbr": "#include <${1:iostream}>${0}"}, "inc2": {"word": "inc2", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 1}, "snip": "#include \"${1}\"${0}", "user_data": "{\"snippet_trigger\": \"inc2\", \"snippet\": \"#include \\\"${1}\\\"${0}\"}", "description": "#include \"${1}\"${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/cpp.snip", "action__line": 9, "menu_template": "#include \"${1}\"${0}", "real_name": "inc2", "action__pattern": "^snippet\\s\\+inc2$", "menu_abbr": "#include \"${1}\"${0}"}, "main": {"word": "main", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 1}, "snip": "int main(int argc, char const* argv[])\n\t{\n\t\t${0:TARGET}\n\t\treturn 0;\n\t}", "menu_template": "int main(int argc, char const* argv[])  {  ${0: }  return 0;  }", "user_data": "{\"snippet_trigger\": \"main\", \"snippet\": \"int main(int argc, char const* argv[])\\n\\t{\\n\\t\\t${0:TARGET}\\n\\t\\treturn 0;\\n\\t}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/c.snip", "action__line": 89, "description": "int main(int argc, char const* argv[])\n\t{\n\t\t${0:TARGET}\n\t\treturn 0;\n\t}", "real_name": "main", "action__pattern": "^snippet\\s\\+main$", "menu_abbr": "int main(int argc, char const* argv[])  {  ${0: }  return 0;  }"}, "#include2": {"word": "#include2", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 1}, "snip": "#include \"${1}\"${0}", "menu_template": "#include \"${1}\"${0}", "user_data": "{\"snippet_trigger\": \"inc2\", \"snippet\": \"#include \\\"${1}\\\"${0}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/cpp.snip", "action__line": 9, "description": "#include \"${1}\"${0}", "real_name": "inc2", "action__pattern": "^snippet\\s\\+inc2$", "menu_abbr": "#include \"${1}\"${0}"}, "reinterpret_cast": {"word": "reinterpret_cast", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "reinterpret_cast<${1}>(${2})${0}", "user_data": "{\"snippet_trigger\": \"reinterpret_cast\", \"snippet\": \"reinterpret_cast<${1}>(${2})${0}\"}", "description": "reinterpret_cast<${1}>(${2})${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/cpp.snip", "action__line": 82, "menu_template": "reinterpret_cast<>()", "real_name": "reinterpret_cast", "action__pattern": "^snippet\\s\\+reinterpret_cast$", "menu_abbr": "reinterpret_cast<>()"}, "#define": {"word": "#define", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 1}, "snip": "#define ${0}", "menu_template": "#define ${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/c.snip", "action__line": 116, "user_data": "{\"snippet_trigger\": \"def\", \"snippet\": \"#define ${0}\"}", "menu_abbr": "#define ${0}", "real_name": "def", "description": "#define ${0}", "action__pattern": "^snippet\\s\\+def$"}, "once": {"word": "once", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 1}, "snip": "#ifndef ${1:SYMBOL}\n#define $1\n\n${0:TARGET}\n#endif /* end of include guard */", "menu_template": "include-guard", "user_data": "{\"snippet_trigger\": \"once\", \"snippet\": \"#ifndef ${1:SYMBOL}\\n#define $1\\n\\n${0:TARGET}\\n#endif /* end of include guard */\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/c.snip", "action__line": 122, "description": "#ifndef ${1:SYMBOL}\n#define $1\n\n${0:TARGET}\n#endif /* end of include guard */", "real_name": "once", "action__pattern": "^snippet\\s\\+once$", "menu_abbr": "include-guard"}, "function": {"word": "function", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 1}, "snip": "${1:void} ${2:#:func_name}(${3:#:args}) {\n${0:TARGET}\n}", "menu_template": "func() {}", "user_data": "{\"snippet_trigger\": \"function\", \"snippet\": \"${1:void} ${2:#:func_name}(${3:#:args}) {\\n${0:TARGET}\\n}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/c.snip", "action__line": 59, "description": "${1:void} ${2:#:func_name}(${3:#:args}) {\n${0:TARGET}\n}", "real_name": "function", "action__pattern": "^snippet\\s\\+function$", "menu_abbr": "func() {}"}, "switch": {"word": "switch", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 1}, "snip": "switch (${1:#:var}) {\ncase ${2:#:val}:\n${0:TARGET}\nbreak;\n}", "menu_template": "switch () {}", "user_data": "{\"snippet_trigger\": \"switch\", \"snippet\": \"switch (${1:#:var}) {\\ncase ${2:#:val}:\\n${0:TARGET}\\nbreak;\\n}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/c.snip", "action__line": 50, "description": "switch (${1:#:var}) {\ncase ${2:#:val}:\n${0:TARGET}\nbreak;\n}", "real_name": "switch", "action__pattern": "^snippet\\s\\+switch$", "menu_abbr": "switch () {}"}, "template": {"word": "template", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "template<typename ${1:T}> ${0}", "user_data": "{\"snippet_trigger\": \"template\", \"snippet\": \"template<typename ${1:T}> ${0}\"}", "description": "template<typename ${1:T}> ${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/cpp.snip", "action__line": 14, "menu_template": "template <T>", "real_name": "template", "action__pattern": "^snippet\\s\\+template$", "menu_abbr": "template <T>"}, "for": {"word": "for", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 1}, "snip": "for (${1:int} ${2:i} = ${3:0}; $2 < ${4}; $2++) {\n${0:#:TARGET}\n}", "menu_template": "for () {}", "user_data": "{\"snippet_trigger\": \"for\", \"snippet\": \"for (${1:int} ${2:i} = ${3:0}; $2 < ${4}; $2++) {\\n${0:#:TARGET}\\n}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/c.snip", "action__line": 29, "description": "for (${1:int} ${2:i} = ${3:0}; $2 < ${4}; $2++) {\n${0:#:TARGET}\n}", "real_name": "for", "action__pattern": "^snippet\\s\\+for$", "menu_abbr": "for () {}"}, "/*": {"word": "/*", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "/* ${1:#:comment} */\n${0}", "menu_template": "/* ${1:#:comment} */ ${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/c.snip", "action__line": 146, "user_data": "{\"snippet_trigger\": \"comment\", \"snippet\": \"/* ${1:#:comment} */\\n${0}\"}", "menu_abbr": "/* ${1:#:comment} */ ${0}", "real_name": "comment", "description": "/* ${1:#:comment} */\n${0}", "action__pattern": "^snippet\\s\\+comment$"}, "dynamic_cast": {"word": "dynamic_cast", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "dynamic_cast<${1}>(${2})${0}", "user_data": "{\"snippet_trigger\": \"dynamic_cast\", \"snippet\": \"dynamic_cast<${1}>(${2})${0}\"}", "description": "dynamic_cast<${1}>(${2})${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/cpp.snip", "action__line": 90, "menu_template": "dynamic_cast<>()", "real_name": "dynamic_cast", "action__pattern": "^snippet\\s\\+dynamic_cast$", "menu_abbr": "dynamic_cast<>()"}, "enum_scoped": {"word": "enum_scoped", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 1}, "snip": "enum struct ${1:#:name} { ${2:#:TARGET} };${0}", "user_data": "{\"snippet_trigger\": \"enum_scoped\", \"snippet\": \"enum struct ${1:#:name} { ${2:#:TARGET} };${0}\"}", "description": "enum struct ${1:#:name} { ${2:#:TARGET} };${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/cpp.snip", "action__line": 60, "menu_template": "enum struct {};", "real_name": "enum_scoped", "action__pattern": "^snippet\\s\\+enum_scoped$", "menu_abbr": "enum struct {};"}, "class-without-constructor": {"word": "class-without-constructor", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 1}, "snip": "class ${1:#:name} {\n${2}\n};${0}", "user_data": "{\"snippet_trigger\": \"class-without-constructor\", \"snippet\": \"class ${1:#:name} {\\n${2}\\n};${0}\"}", "description": "class ${1:#:name} {\n${2}\n};${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/cpp.snip", "action__line": 30, "menu_template": "class {}", "real_name": "class-without-constructor", "action__pattern": "^snippet\\s\\+class-without-constructor$", "menu_abbr": "class {}"}, "enum": {"word": "enum", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 1}, "snip": "enum ${1:#:name} {\n${0:TARGET}\n};", "menu_template": "enum {}", "user_data": "{\"snippet_trigger\": \"enum\", \"snippet\": \"enum ${1:#:name} {\\n${0:TARGET}\\n};\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/c.snip", "action__line": 81, "description": "enum ${1:#:name} {\n${0:TARGET}\n};", "real_name": "enum", "action__pattern": "^snippet\\s\\+enum$", "menu_abbr": "enum {}"}, "static_cast": {"word": "static_cast", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "static_cast<${1}>(${2})${0}", "user_data": "{\"snippet_trigger\": \"static_cast\", \"snippet\": \"static_cast<${1}>(${2})${0}\"}", "description": "static_cast<${1}>(${2})${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/cpp.snip", "action__line": 78, "menu_template": "static_cast<>()", "real_name": "static_cast", "action__pattern": "^snippet\\s\\+static_cast$", "menu_abbr": "static_cast<>()"}, "try": {"word": "try", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 1}, "snip": "try {\n${1:#:TARGET}\n} catch (${2:...}) {\n${3}\n}", "user_data": "{\"snippet_trigger\": \"try\", \"snippet\": \"try {\\n${1:#:TARGET}\\n} catch (${2:...}) {\\n${3}\\n}\"}", "description": "try {\n${1:#:TARGET}\n} catch (${2:...}) {\n${3}\n}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/cpp.snip", "action__line": 37, "menu_template": "try catch", "real_name": "try", "action__pattern": "^snippet\\s\\+try$", "menu_abbr": "try catch"}, "inc": {"word": "inc", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 1}, "snip": "#include <${1:iostream}>${0}", "user_data": "{\"snippet_trigger\": \"inc\", \"snippet\": \"#include <${1:iostream}>${0}\"}", "description": "#include <${1:iostream}>${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/cpp.snip", "action__line": 4, "menu_template": "#include <${1:iostream}>${0}", "real_name": "inc", "action__pattern": "^snippet\\s\\+inc$", "menu_abbr": "#include <${1:iostream}>${0}"}, "while": {"word": "while", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 1}, "snip": "while (${1:#:condition}) {\n${0:TARGET}\n}", "menu_template": "while () {}", "user_data": "{\"snippet_trigger\": \"while\", \"snippet\": \"while (${1:#:condition}) {\\n${0:TARGET}\\n}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/c.snip", "action__line": 36, "description": "while (${1:#:condition}) {\n${0:TARGET}\n}", "real_name": "while", "action__pattern": "^snippet\\s\\+while$", "menu_abbr": "while () {}"}, "if": {"word": "if", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 1}, "snip": "if (${1:#:condition}) {\n${0:TARGET}\n}", "menu_template": "if () {}", "user_data": "{\"snippet_trigger\": \"if\", \"snippet\": \"if (${1:#:condition}) {\\n${0:TARGET}\\n}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/c.snip", "action__line": 1, "description": "if (${1:#:condition}) {\n${0:TARGET}\n}", "real_name": "if", "action__pattern": "^snippet\\s\\+if$", "menu_abbr": "if () {}"}, "#inc2": {"word": "#inc2", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 1}, "snip": "#include \"${1}\"${0}", "menu_template": "#include \"${1}\"${0}", "user_data": "{\"snippet_trigger\": \"inc2\", \"snippet\": \"#include \\\"${1}\\\"${0}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/cpp.snip", "action__line": 9, "description": "#include \"${1}\"${0}", "real_name": "inc2", "action__pattern": "^snippet\\s\\+inc2$", "menu_abbr": "#include \"${1}\"${0}"}, "for_CPP11": {"word": "for_CPP11", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 1}, "snip": "for (${1:auto&& }${2:var} : ${3:container}) {\n${0:TARGET}\n}", "user_data": "{\"snippet_trigger\": \"for_CPP11\", \"snippet\": \"for (${1:auto&& }${2:var} : ${3:container}) {\\n${0:TARGET}\\n}\"}", "description": "for (${1:auto&& }${2:var} : ${3:container}) {\n${0:TARGET}\n}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/cpp.snip", "action__line": 47, "menu_template": "for (:) {}", "real_name": "for_CPP11", "action__pattern": "^snippet\\s\\+for_CPP11$", "menu_abbr": "for (:) {}"}, "#def": {"word": "#def", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 1}, "snip": "#define ${0}", "menu_template": "#define ${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/c.snip", "action__line": 116, "user_data": "{\"snippet_trigger\": \"def\", \"snippet\": \"#define ${0}\"}", "menu_abbr": "#define ${0}", "real_name": "def", "description": "#define ${0}", "action__pattern": "^snippet\\s\\+def$"}, "do": {"word": "do", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 1}, "snip": "do {\n${0:TARGET:code}\n} while (${1:#:condition});", "menu_template": "do { ${0: :code} } while (${1:#:condition});", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/c.snip", "action__line": 43, "user_data": "{\"snippet_trigger\": \"do_while\", \"snippet\": \"do {\\n${0:TARGET:code}\\n} while (${1:#:condition});\"}", "menu_abbr": "do { ${0: :code} } while (${1:#:condition});", "real_name": "do_while", "description": "do {\n${0:TARGET:code}\n} while (${1:#:condition});", "action__pattern": "^snippet\\s\\+do_while$"}, "ifelse": {"word": "ifelse", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 1}, "snip": "if (${1:#:condition}) {\n${2:TARGET}\n} else {\n${3}\n}", "menu_template": "if () {} else {}", "user_data": "{\"snippet_trigger\": \"ifelse\", \"snippet\": \"if (${1:#:condition}) {\\n${2:TARGET}\\n} else {\\n${3}\\n}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/c.snip", "action__line": 20, "description": "if (${1:#:condition}) {\n${2:TARGET}\n} else {\n${3}\n}", "real_name": "ifelse", "action__pattern": "^snippet\\s\\+ifelse$", "menu_abbr": "if () {} else {}"}, "sizeof": {"word": "sizeof", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "sizeof(${0:TARGET})", "menu_template": "sizeof(${0: })", "user_data": "{\"snippet_trigger\": \"sizeof\", \"snippet\": \"sizeof(${0:TARGET})\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/c.snip", "action__line": 151, "description": "sizeof(${0:TARGET})", "real_name": "sizeof", "action__pattern": "^snippet\\s\\+sizeof$", "menu_abbr": "sizeof(${0: })"}, "elseif": {"word": "elseif", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 1}, "snip": "else if (${1:#:condition}) {\n${0:TARGET}\n}", "menu_template": "else if (${1:#:condition}) { ${0: } }", "user_data": "{\"snippet_trigger\": \"elseif\", \"snippet\": \"else if (${1:#:condition}) {\\n${0:TARGET}\\n}\"}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/c.snip", "action__line": 14, "description": "else if (${1:#:condition}) {\n${0:TARGET}\n}", "real_name": "elseif", "action__pattern": "^snippet\\s\\+elseif$", "menu_abbr": "else if (${1:#:condition}) { ${0: } }"}, "lambda": {"word": "lambda", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "[${1}](${2})${3}{ ${4:TARGET} }${0:;}", "user_data": "{\"snippet_trigger\": \"lambda\", \"snippet\": \"[${1}](${2})${3}{ ${4:TARGET} }${0:;}\"}", "description": "[${1}](${2})${3}{ ${4:TARGET} }${0:;}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/cpp.snip", "action__line": 55, "menu_template": "[](){}", "real_name": "lambda", "action__pattern": "^snippet\\s\\+lambda$", "menu_abbr": "[](){}"}, "const_cast": {"word": "const_cast", "options": {"word": 0, "oneshot": 0, "indent": 0, "head": 0}, "snip": "const_cast<${1}>(${2})${0}", "user_data": "{\"snippet_trigger\": \"const_cast\", \"snippet\": \"const_cast<${1}>(${2})${0}\"}", "description": "const_cast<${1}>(${2})${0}", "action__path": "/Users/yusuke/.local/share/nvim/plugged/neosnippet-snippets/neosnippets/cpp.snip", "action__line": 86, "menu_template": "const_cast<>()", "real_name": "const_cast", "action__pattern": "^snippet\\s\\+const_cast$", "menu_abbr": "const_cast<>()"}}
